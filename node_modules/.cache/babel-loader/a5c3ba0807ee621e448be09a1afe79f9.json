{"ast":null,"code":"export const signIn = credentials => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};\nexport const signUp = newUser => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(resp => {\n      if (newUser.userType === \"trainer\") {\n        console.log(\"big dooty\");\n        return firestore.collection('users').doc(resp.user.uid).set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0],\n          userType: newUser.userType,\n          skills: newUser.skills,\n          email: newUser.email,\n          phoneNo: newUser.phoneNo\n        });\n      } else {\n        console.log(\"big booty\");\n        return firestore.collection('users').doc(resp.user.uid).set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0],\n          userType: newUser.userType,\n          email: newUser.email,\n          phoneNo: newUser.phoneNo\n        });\n      }\n    }).then(() => {\n      dispatch({\n        type: 'SIGNUP_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'SIGNUP_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/src/store/authActions.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","signOut","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","userType","console","log","collection","doc","user","uid","set","firstName","lastName","initials","skills","phoneNo"],"mappings":"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","sourcesContent":["export const signIn = (credentials) => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email, \r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            if (newUser.userType === \"trainer\"){\r\n                console.log(\"big dooty\")\r\n                return firestore.collection('users').doc(resp.user.uid).set({\r\n                    firstName: newUser.firstName,\r\n                    lastName: newUser.lastName,\r\n                    initials: newUser.firstName[0] + newUser.lastName[0],\r\n                    userType: newUser.userType,\r\n                    skills: newUser.skills,\r\n                    email: newUser.email,\r\n                    phoneNo: newUser.phoneNo\r\n                })\r\n            }\r\n            else {\r\n                console.log(\"big booty\")\r\n                return firestore.collection('users').doc(resp.user.uid).set({\r\n                    firstName: newUser.firstName,\r\n                    lastName: newUser.lastName,\r\n                    initials: newUser.firstName[0] + newUser.lastName[0],\r\n                    userType: newUser.userType,\r\n                    email: newUser.email,\r\n                    phoneNo: newUser.phoneNo\r\n                })\r\n            }\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Swizzle\\\\Desktop\\\\SE Project\\\\Application\\\\csh\\\\src\\\\components\\\\Cal.js\";\n\n// import React, {Component} from \"react\";\n// import \"react-big-calendar/lib/css/react-big-calendar.css\";\n// import {Calendar,DateLocalizer,momentLocalizer,globalizeLocalizer,move,Views,Navigate,components,} from 'react-big-calendar';\n// import moment from 'moment';\n// import {Redirect} from 'react-router-dom'\n// import Modal from \"react-bootstrap/Modal\";\n// import CourseInfo from \"./CourseInfo\";\n// moment.locale('en-GB');\n// const localizer = momentLocalizer(moment)\n// class Cal extends Component{\n//   state = {\n//     courses: this.props.courses\n//   }\n//   // CourseInfo = (selectedCourse) => {\n//   //   console.log(selectedCourse)\n//   //   return (\n//   //     <Redirect to={{\n//   //       pathname: '/courseinfo',\n//   //       course: { selectedCourse }\n//   //       }}\n//   //     />\n//   //   )\n//   // }\n//   courseFormat = () => {\n//     var courses = this.props.courses\n//     var formattedCourses = []\n//     var i = 0\n//     courses && courses.forEach(course => {\n//       formattedCourses[i] = {\n//         'title' : course.title,\n//         'start' : new Date(course.startDate + \" \" + course.startTime),\n//         'end' : new Date(course.endDate + \" \" + course.endTime),\n//         'desc' : course.description,\n//         'freq' : course.frequency,\n//         'author' : course.authorFirstName + \" \" + course.authorLastName\n//       }\n//       i++\n//     });\n//     return formattedCourses\n//   }\n//   render(){\n//     return(\n//       // <Modal show={showEditModal} onHide={hideModals}>\n//       //   <Modal.Header closeButton>\n//       //     <Modal.Title>Edit Calendar Event</Modal.Title>\n//       //   </Modal.Header>\n//       //   <Modal.Body>\n//       //     <p>poop</p>{/* <CourseInfo course={event}/> */}\n//       //   </Modal.Body>\n//       // </Modal>\n//       <div>\n//       <Modal.Dialog>\n//   <Modal.Header closeButton>\n//     <Modal.Title>Modal title</Modal.Title>\n//   </Modal.Header>\n//   <Modal.Body>\n//     <p>Modal body text goes here.</p>\n//   </Modal.Body>\n//   <Modal.Footer>\n//     <Button variant=\"secondary\">Close</Button>\n//     <Button variant=\"primary\">Save changes</Button>\n//   </Modal.Footer>\n// </Modal.Dialog>\n//       <Calendar\n//         localizer={localizer}\n//         events={this.courseFormat()}\n//         startAccessor=\"start\"\n//         endAccessor=\"end\"\n//         style={{ height: 500 }}\n//         step={30}\n//         defaultView='month'\n//         views={['month','week','day']}\n//         defaultDate={new Date()}\n//         onSelectEvent={handleSelectEvent}\n//       />\n//       </div>\n//     )\n//   }\n// }\n// const handleSelectEvent = (event, e) => {\n//   //setShowEditModal(true);\n//   // let { id, title, start, end, allDay } = event;\n//   // const data = { id, title, start, end, allDay };\n//   // setCalendarEvent(data);\n// };\n// // const CourseInfo = (event) => {\n// //   return (\n// //     <div className=\"container section\">\n// //         <div className=\"card z-depth-0\">\n// //             <div className=\"card-content\">\n// //                 <span className=\"card-title\">hi</span>\n// //                 <p>hi</p>\n// //             </div>\n// //             <div className=\"card-action grey lighten-4 grey-text\">\n// //                 <div>hi</div>\n// //                 <div>hi</div>\n// //             </div>\n// //         </div>\n// //     </div>\n// //   )\n// // }\n// export default Cal\nfunction MyVerticallyCenteredModal(props) {\n  return React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Modal heading\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Centered Modal\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\")), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: props.onHide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Close\")));\n}\n\nfunction App() {\n  const [modalShow, setModalShow] = React.useState(false);\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => setModalShow(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Launch vertically centered modal\"), React.createElement(MyVerticallyCenteredModal, {\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }));\n}\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n}));","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/src/components/Cal.js"],"names":["MyVerticallyCenteredModal","props","onHide","App","modalShow","setModalShow","React","useState","render"],"mappingsyBAAT,CAAmCC,KAAnC,EAA0C;AACxC,SACE,oBAAC,KAAD,oBACMA,KADN;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,uBAAgB,+BAHlB;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAME,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAa,IAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CANF,EAWE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oLAFF,CAXF,EAmBE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAnBF,CADF;AAyBD;;AAED,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,KAAK,CAACC,QAAN,CAAe,KAAf,CAAlC;AAEA,SACE,0CACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAE,MAAMF,YAAY,CAAC,IAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAKE,oBAAC,yBAAD;AACE,IAAA,IAAI,EAAED,SADR;AAEE,IAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAYD;;AAEDG,MAAM,CAAC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,CAAN","sourcesContent":["// import React, {Component} from \"react\";\r\n// import \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n// import {Calendar,DateLocalizer,momentLocalizer,globalizeLocalizer,move,Views,Navigate,components,} from 'react-big-calendar';\r\n// import moment from 'moment';\r\n// import {Redirect} from 'react-router-dom'\r\n// import Modal from \"react-bootstrap/Modal\";\r\n// import CourseInfo from \"./CourseInfo\";\r\n\r\n// moment.locale('en-GB');\r\n// const localizer = momentLocalizer(moment)\r\n\r\n// class Cal extends Component{\r\n//   state = {\r\n//     courses: this.props.courses\r\n//   }\r\n\r\n//   // CourseInfo = (selectedCourse) => {\r\n//   //   console.log(selectedCourse)\r\n//   //   return (\r\n//   //     <Redirect to={{\r\n//   //       pathname: '/courseinfo',\r\n//   //       course: { selectedCourse }\r\n//   //       }}\r\n//   //     />\r\n//   //   )\r\n//   // }\r\n\r\n  \r\n\r\n//   courseFormat = () => {\r\n//     var courses = this.props.courses\r\n//     var formattedCourses = []\r\n//     var i = 0\r\n//     courses && courses.forEach(course => {\r\n//       formattedCourses[i] = {\r\n//         'title' : course.title,\r\n//         'start' : new Date(course.startDate + \" \" + course.startTime),\r\n//         'end' : new Date(course.endDate + \" \" + course.endTime),\r\n//         'desc' : course.description,\r\n//         'freq' : course.frequency,\r\n//         'author' : course.authorFirstName + \" \" + course.authorLastName\r\n//       }\r\n//       i++\r\n//     });\r\n//     return formattedCourses\r\n//   }\r\n\r\n//   render(){\r\n//     return(\r\n//       // <Modal show={showEditModal} onHide={hideModals}>\r\n//       //   <Modal.Header closeButton>\r\n//       //     <Modal.Title>Edit Calendar Event</Modal.Title>\r\n//       //   </Modal.Header>\r\n//       //   <Modal.Body>\r\n//       //     <p>poop</p>{/* <CourseInfo course={event}/> */}\r\n//       //   </Modal.Body>\r\n//       // </Modal>\r\n//       <div>\r\n//       <Modal.Dialog>\r\n//   <Modal.Header closeButton>\r\n//     <Modal.Title>Modal title</Modal.Title>\r\n//   </Modal.Header>\r\n\r\n//   <Modal.Body>\r\n//     <p>Modal body text goes here.</p>\r\n//   </Modal.Body>\r\n\r\n//   <Modal.Footer>\r\n//     <Button variant=\"secondary\">Close</Button>\r\n//     <Button variant=\"primary\">Save changes</Button>\r\n//   </Modal.Footer>\r\n// </Modal.Dialog>\r\n\r\n//       <Calendar\r\n//         localizer={localizer}\r\n//         events={this.courseFormat()}\r\n//         startAccessor=\"start\"\r\n//         endAccessor=\"end\"\r\n//         style={{ height: 500 }}\r\n//         step={30}\r\n//         defaultView='month'\r\n//         views={['month','week','day']}\r\n//         defaultDate={new Date()}\r\n//         onSelectEvent={handleSelectEvent}\r\n//       />\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const handleSelectEvent = (event, e) => {\r\n//   //setShowEditModal(true);\r\n//   // let { id, title, start, end, allDay } = event;\r\n//   // const data = { id, title, start, end, allDay };\r\n//   // setCalendarEvent(data);\r\n// };\r\n// // const CourseInfo = (event) => {\r\n// //   return (\r\n// //     <div className=\"container section\">\r\n// //         <div className=\"card z-depth-0\">\r\n// //             <div className=\"card-content\">\r\n// //                 <span className=\"card-title\">hi</span>\r\n// //                 <p>hi</p>\r\n// //             </div>\r\n// //             <div className=\"card-action grey lighten-4 grey-text\">\r\n// //                 <div>hi</div>\r\n// //                 <div>hi</div>\r\n// //             </div>\r\n// //         </div>\r\n// //     </div>\r\n// //   )\r\n// // }\r\n\r\n// export default Cal\r\nfunction MyVerticallyCenteredModal(props) {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Modal heading\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h4>Centered Modal</h4>\r\n        <p>\r\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n          consectetur ac, vestibulum at eros.\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n        Launch vertically centered modal\r\n      </Button>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nrender(<App />);"]},"metadata":{},"sourceType":"module"}
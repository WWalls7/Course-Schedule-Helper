{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.base.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _uiSchedulerAppointmentsPositioningStrategy = require(\"./ui.scheduler.appointmentsPositioning.strategy.base\");\n\nvar _uiSchedulerAppointmentsPositioningStrategy2 = _interopRequireDefault(_uiSchedulerAppointmentsPositioningStrategy);\n\nvar _uiSchedulerAppointmentsPositioningStrategy3 = require(\"./ui.scheduler.appointmentsPositioning.strategy.adaptive\");\n\nvar _uiSchedulerAppointmentsPositioningStrategy4 = _interopRequireDefault(_uiSchedulerAppointmentsPositioningStrategy3);\n\nvar _extend = require(\"../../../core/utils/extend\");\n\nvar _ui = require(\"../../widget/ui.errors\");\n\nvar _ui2 = _interopRequireDefault(_ui);\n\nvar _date = require(\"../../../core/utils/date\");\n\nvar _date2 = _interopRequireDefault(_date);\n\nvar _type = require(\"../../../core/utils/type\");\n\nvar _type2 = _interopRequireDefault(_type);\n\nvar _themes = require(\"../../themes\");\n\nvar _themes2 = _interopRequireDefault(_themes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar toMs = _date2.default.dateToMilliseconds;\nvar APPOINTMENT_MIN_SIZE = 2;\nvar COMPACT_APPOINTMENT_DEFAULT_WIDTH = 15;\nvar APPOINTMENT_DEFAULT_HEIGHT = 20;\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT = 18;\nvar DROP_DOWN_BUTTON_ADAPTIVE_SIZE = 28;\n\nvar BaseRenderingStrategy = function () {\n  function BaseRenderingStrategy(instance) {\n    _classCallCheck(this, BaseRenderingStrategy);\n\n    this.instance = instance;\n\n    this._initPositioningStrategy();\n  }\n\n  _createClass(BaseRenderingStrategy, [{\n    key: \"_isAdaptive\",\n    value: function () {\n      return this.instance.fire(\"isAdaptive\");\n    }\n  }, {\n    key: \"_correctCompactAppointmentCoordinatesInAdaptive\",\n    value: function (coordinates, isAllDay) {\n      coordinates.top = coordinates.top + this.getCompactAppointmentTopOffset(isAllDay);\n      coordinates.left = coordinates.left + this.getCompactAppointmentLeftOffset();\n    }\n  }, {\n    key: \"_initPositioningStrategy\",\n    value: function () {\n      this._positioningStrategy = this._isAdaptive() ? new _uiSchedulerAppointmentsPositioningStrategy4.default(this) : new _uiSchedulerAppointmentsPositioningStrategy2.default(this);\n    }\n  }, {\n    key: \"getPositioningStrategy\",\n    value: function () {\n      return this._positioningStrategy;\n    }\n  }, {\n    key: \"getAppointmentMinSize\",\n    value: function () {\n      return APPOINTMENT_MIN_SIZE;\n    }\n  }, {\n    key: \"keepAppointmentSettings\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"getDeltaTime\",\n    value: function () {}\n  }, {\n    key: \"getAppointmentGeometry\",\n    value: function (coordinates) {\n      return coordinates;\n    }\n  }, {\n    key: \"needCorrectAppointmentDates\",\n    value: function () {\n      return true;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function () {\n      return \"horizontal\";\n    }\n  }, {\n    key: \"createTaskPositionMap\",\n    value: function (items) {\n      delete this._maxAppointmentCountPerCell;\n      var length = items && items.length;\n\n      if (!length) {\n        return;\n      }\n\n      this._defaultWidth = this.instance._cellWidth;\n      this._defaultHeight = this.instance._cellHeight;\n      this._allDayHeight = this.instance._allDayCellHeight;\n      var map = [];\n\n      for (var i = 0; i < length; i++) {\n        var coordinates = this._getItemPosition(items[i]);\n\n        if (this._isRtl()) {\n          coordinates = this._correctRtlCoordinates(coordinates);\n        }\n\n        map.push(coordinates);\n      }\n\n      var positionArray = this._getSortedPositions(map);\n\n      var resultPositions = this._getResultPositions(positionArray);\n\n      return this._getExtendedPositionMap(map, resultPositions);\n    }\n  }, {\n    key: \"_getDeltaWidth\",\n    value: function (args, initialSize) {\n      var intervalWidth = this.instance.fire(\"getResizableStep\") || this.getAppointmentMinSize();\n      var initialWidth = initialSize.width;\n      return Math.round((args.width - initialWidth) / intervalWidth);\n    }\n  }, {\n    key: \"_correctRtlCoordinates\",\n    value: function (coordinates) {\n      var width = coordinates[0].width || this._getAppointmentMaxWidth();\n\n      coordinates.forEach(function (coordinate) {\n        if (!coordinate.appointmentReduced) {\n          coordinate.left -= width;\n        }\n      });\n      return coordinates;\n    }\n  }, {\n    key: \"_getAppointmentMaxWidth\",\n    value: function () {\n      return this.getDefaultCellWidth();\n    }\n  }, {\n    key: \"_getItemPosition\",\n    value: function (item) {\n      var position = this._getAppointmentCoordinates(item);\n\n      var allDay = this.isAllDay(item);\n      var result = [];\n      var startDate = new Date(this.instance.fire(\"getField\", \"startDate\", item));\n      var isRecurring = !!this.instance.fire(\"getField\", \"recurrenceRule\", item);\n\n      for (var j = 0; j < position.length; j++) {\n        var height = this.calculateAppointmentHeight(item, position[j], isRecurring);\n        var width = this.calculateAppointmentWidth(item, position[j], isRecurring);\n        var resultWidth = width;\n        var appointmentReduced = null;\n        var multiWeekAppointmentParts = [];\n        var initialRowIndex = position[j].rowIndex;\n        var initialCellIndex = position[j].cellIndex;\n\n        if (this._needVerifyItemSize() || allDay) {\n          var currentMaxAllowedPosition = position[j].hMax;\n\n          if (this.isAppointmentGreaterThan(currentMaxAllowedPosition, {\n            left: position[j].left,\n            width: width\n          })) {\n            appointmentReduced = \"head\";\n            initialRowIndex = position[j].rowIndex;\n            initialCellIndex = position[j].cellIndex;\n            resultWidth = this._reduceMultiWeekAppointment(width, {\n              left: position[j].left,\n              right: currentMaxAllowedPosition\n            });\n            multiWeekAppointmentParts = this._getAppointmentParts({\n              sourceAppointmentWidth: width,\n              reducedWidth: resultWidth,\n              height: height\n            }, position[j], startDate);\n\n            if (this._isRtl()) {\n              position[j].left = currentMaxAllowedPosition;\n            }\n          }\n        }\n\n        (0, _extend.extend)(position[j], {\n          height: height,\n          width: resultWidth,\n          allDay: allDay,\n          rowIndex: initialRowIndex,\n          cellIndex: initialCellIndex,\n          appointmentReduced: appointmentReduced\n        });\n        result = this._getAppointmentPartsPosition(multiWeekAppointmentParts, position[j], result);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getAppointmentPartsPosition\",\n    value: function (appointmentParts, position, result) {\n      if (appointmentParts.length) {\n        appointmentParts.unshift(position);\n        result = result.concat(appointmentParts);\n      } else {\n        result.push(position);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getAppointmentCoordinates\",\n    value: function (itemData) {\n      return this.instance.fire(\"needCoordinates\", {\n        startDate: this.startDate(itemData),\n        originalStartDate: this.startDate(itemData, true),\n        appointmentData: itemData\n      });\n    }\n  }, {\n    key: \"_isRtl\",\n    value: function () {\n      return this.instance.option(\"rtlEnabled\");\n    }\n  }, {\n    key: \"_getAppointmentParts\",\n    value: function () {\n      return [];\n    }\n  }, {\n    key: \"_getCompactAppointmentParts\",\n    value: function (appointmentWidth) {\n      var cellWidth = this.getDefaultCellWidth() || this.getAppointmentMinSize();\n      return Math.round(appointmentWidth / cellWidth);\n    }\n  }, {\n    key: \"_reduceMultiWeekAppointment\",\n    value: function (sourceAppointmentWidth, bound) {\n      if (this._isRtl()) {\n        sourceAppointmentWidth = Math.floor(bound.left - bound.right);\n      } else {\n        sourceAppointmentWidth = bound.right - Math.floor(bound.left);\n      }\n\n      return sourceAppointmentWidth;\n    }\n  }, {\n    key: \"calculateAppointmentHeight\",\n    value: function () {\n      return 0;\n    }\n  }, {\n    key: \"calculateAppointmentWidth\",\n    value: function () {\n      return 0;\n    }\n  }, {\n    key: \"isAppointmentGreaterThan\",\n    value: function (etalon, comparisonParameters) {\n      var result = comparisonParameters.left + comparisonParameters.width - etalon;\n\n      if (this._isRtl()) {\n        result = etalon + comparisonParameters.width - comparisonParameters.left;\n      }\n\n      return result > this.getDefaultCellWidth() / 2;\n    }\n  }, {\n    key: \"isAllDay\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"cropAppointmentWidth\",\n    value: function (width, cellWidth) {\n      if (this.instance.fire(\"isGroupedByDate\")) {\n        width = cellWidth;\n      }\n\n      return width;\n    }\n  }, {\n    key: \"_getSortedPositions\",\n    value: function (positionList) {\n      var _this = this;\n\n      var result = [];\n\n      var round = function (value) {\n        return Math.round(100 * value) / 100;\n      };\n\n      var createItem = function (rowIndex, cellIndex, top, left, bottom, right, position, allDay) {\n        return {\n          i: rowIndex,\n          j: cellIndex,\n          top: round(top),\n          left: round(left),\n          bottom: round(bottom),\n          right: round(right),\n          cellPosition: position,\n          allDay: allDay\n        };\n      };\n\n      for (var rowIndex = 0, rowCount = positionList.length; rowIndex < rowCount; rowIndex++) {\n        for (var cellIndex = 0, cellCount = positionList[rowIndex].length; cellIndex < cellCount; cellIndex++) {\n          var _positionList$rowInde = positionList[rowIndex][cellIndex],\n              top = _positionList$rowInde.top,\n              left = _positionList$rowInde.left,\n              height = _positionList$rowInde.height,\n              width = _positionList$rowInde.width,\n              cellPosition = _positionList$rowInde.cellPosition,\n              allDay = _positionList$rowInde.allDay;\n          result.push(createItem(rowIndex, cellIndex, top, left, top + height, left + width, cellPosition, allDay));\n        }\n      }\n\n      return result.sort(function (a, b) {\n        return _this._sortCondition(a, b);\n      });\n    }\n  }, {\n    key: \"_sortCondition\",\n    value: function () {}\n  }, {\n    key: \"_getConditions\",\n    value: function (a, b) {\n      var isSomeEdge = this._isSomeEdge(a, b);\n\n      return {\n        columnCondition: isSomeEdge || this._normalizeCondition(a.left, b.left),\n        rowCondition: isSomeEdge || this._normalizeCondition(a.top, b.top),\n        cellPositionCondition: isSomeEdge || this._normalizeCondition(a.cellPosition, b.cellPosition)\n      };\n    }\n  }, {\n    key: \"_rowCondition\",\n    value: function (a, b) {\n      var conditions = this._getConditions(a, b);\n\n      return conditions.columnCondition || conditions.rowCondition;\n    }\n  }, {\n    key: \"_columnCondition\",\n    value: function (a, b) {\n      var conditions = this._getConditions(a, b);\n\n      return conditions.rowCondition || conditions.columnCondition;\n    }\n  }, {\n    key: \"_isSomeEdge\",\n    value: function (a, b) {\n      return a.i === b.i && a.j === b.j;\n    }\n  }, {\n    key: \"_normalizeCondition\",\n    value: function (first, second) {\n      var result = first - second;\n      return Math.abs(result) > 1 ? result : 0;\n    }\n  }, {\n    key: \"_isItemsCross\",\n    value: function (item, currentItem, orientation) {\n      var side_1 = Math.floor(item[orientation[0]]);\n      var side_2 = Math.floor(item[orientation[1]]);\n      return item[orientation[2]] === currentItem[orientation[2]] && (side_1 <= currentItem[orientation[0]] && side_2 > currentItem[orientation[0]] || side_1 < currentItem[orientation[1]] && side_2 >= currentItem[orientation[1]] || side_1 === currentItem[orientation[0]] && side_2 === currentItem[orientation[1]]);\n    }\n  }, {\n    key: \"_getOrientation\",\n    value: function () {\n      return [\"top\", \"bottom\", \"left\"];\n    }\n  }, {\n    key: \"_getResultPositions\",\n    value: function (sortedArray) {\n      var _this2 = this;\n\n      var result = [];\n      var i;\n      var sortedIndex = 0;\n      var currentItem;\n      var indexes;\n      var itemIndex;\n      var maxIndexInStack = 0;\n      var stack = {};\n\n      var orientation = this._getOrientation();\n\n      var findFreeIndex = function findFreeIndex(indexes, index) {\n        var isFind = indexes.some(function (item) {\n          return item === index;\n        });\n\n        if (isFind) {\n          return findFreeIndex(indexes, ++index);\n        } else {\n          return index;\n        }\n      };\n\n      var startNewStack = function (currentItem) {\n        stack.items = [createItem(currentItem)];\n        stack.left = currentItem.left;\n        stack.right = currentItem.right;\n        stack.top = currentItem.top;\n        stack.bottom = currentItem.bottom;\n      };\n\n      var createItem = function (currentItem, index) {\n        var currentIndex = index || 0;\n        return {\n          index: currentIndex,\n          i: currentItem.i,\n          j: currentItem.j,\n          left: currentItem.left,\n          right: currentItem.right,\n          top: currentItem.top,\n          bottom: currentItem.bottom,\n          sortedIndex: _this2._skipSortedIndex(currentIndex) ? null : sortedIndex++\n        };\n      };\n\n      var pushItemsInResult = function (items) {\n        items.forEach(function (item) {\n          result.push({\n            index: item.index,\n            count: maxIndexInStack + 1,\n            i: item.i,\n            j: item.j,\n            sortedIndex: item.sortedIndex\n          });\n        });\n      };\n\n      for (i = 0; i < sortedArray.length; i++) {\n        currentItem = sortedArray[i];\n        indexes = [];\n\n        if (!stack.items) {\n          startNewStack(currentItem);\n        } else {\n          if (this._isItemsCross(stack, currentItem, orientation)) {\n            stack.items.forEach(function (item, index) {\n              if (_this2._isItemsCross(item, currentItem, orientation)) {\n                indexes.push(item.index);\n              }\n            });\n            itemIndex = indexes.length ? findFreeIndex(indexes, 0) : 0;\n            stack.items.push(createItem(currentItem, itemIndex));\n            maxIndexInStack = Math.max(itemIndex, maxIndexInStack);\n            stack.left = Math.min(stack.left, currentItem.left);\n            stack.right = Math.max(stack.right, currentItem.right);\n            stack.top = Math.min(stack.top, currentItem.top);\n            stack.bottom = Math.max(stack.bottom, currentItem.bottom);\n          } else {\n            pushItemsInResult(stack.items);\n            stack = {};\n            startNewStack(currentItem);\n            maxIndexInStack = 0;\n          }\n        }\n      }\n\n      if (stack.items) {\n        pushItemsInResult(stack.items);\n      }\n\n      return result.sort(function (a, b) {\n        var columnCondition = a.j - b.j;\n        var rowCondition = a.i - b.i;\n        return rowCondition ? rowCondition : columnCondition;\n      });\n    }\n  }, {\n    key: \"_skipSortedIndex\",\n    value: function (index) {\n      return this.instance.fire(\"getMaxAppointmentsPerCell\") && index > this._getMaxAppointmentCountPerCell() - 1;\n    }\n  }, {\n    key: \"_findIndexByKey\",\n    value: function (arr, iKey, jKey, iValue, jValue) {\n      var result = 0;\n\n      for (var i = 0, len = arr.length; i < len; i++) {\n        if (arr[i][iKey] === iValue && arr[i][jKey] === jValue) {\n          result = i;\n          break;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getExtendedPositionMap\",\n    value: function (map, positions) {\n      var positionCounter = 0;\n      var result = [];\n\n      for (var i = 0, mapLength = map.length; i < mapLength; i++) {\n        var resultString = [];\n\n        for (var j = 0, itemLength = map[i].length; j < itemLength; j++) {\n          map[i][j].index = positions[positionCounter].index;\n          map[i][j].sortedIndex = positions[positionCounter].sortedIndex;\n          map[i][j].count = positions[positionCounter++].count;\n          resultString.push(map[i][j]);\n\n          this._checkLongCompactAppointment(map[i][j], resultString);\n        }\n\n        result.push(resultString);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_checkLongCompactAppointment\",\n    value: function () {}\n  }, {\n    key: \"_splitLongCompactAppointment\",\n    value: function (item, result) {\n      var appointmentCountPerCell = this._getMaxAppointmentCountPerCellByType(item.allDay);\n\n      var compactCount = 0;\n\n      if (void 0 !== appointmentCountPerCell && item.index > appointmentCountPerCell - 1) {\n        item.isCompact = true;\n        compactCount = this._getCompactAppointmentParts(item.width);\n\n        for (var k = 1; k < compactCount; k++) {\n          var compactPart = (0, _extend.extend)(true, {}, item);\n          compactPart.left = this._getCompactLeftCoordinate(item.left, k);\n          compactPart.cellIndex = compactPart.cellIndex + k;\n          compactPart.sortedIndex = null;\n          result.push(compactPart);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"startDate\",\n    value: function startDate(appointment, skipNormalize, position) {\n      var startDate = position && position.startDate;\n\n      var rangeStartDate = this.instance._getStartDate(appointment, skipNormalize);\n\n      var text = this.instance.fire(\"getField\", \"text\", appointment);\n\n      if (startDate && rangeStartDate > startDate || !startDate) {\n        startDate = rangeStartDate;\n      }\n\n      if (isNaN(startDate.getTime())) {\n        throw _ui2.default.Error(\"E1032\", text);\n      }\n\n      return startDate;\n    }\n  }, {\n    key: \"endDate\",\n    value: function endDate(appointment, position, isRecurring) {\n      var ignoreViewDates = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;\n\n      var endDate = this.instance._getEndDate(appointment, ignoreViewDates);\n\n      var realStartDate = this.startDate(appointment, true);\n      var viewStartDate = this.startDate(appointment, false, position);\n\n      if (viewStartDate.getTime() > endDate.getTime() || isRecurring) {\n        var recurrencePartStartDate = position ? position.initialStartDate || position.startDate : realStartDate;\n        var recurrencePartCroppedByViewStartDate = position ? position.startDate : realStartDate;\n        var fullDuration = viewStartDate.getTime() > endDate.getTime() ? this.instance.fire(\"getField\", \"endDate\", appointment).getTime() - this.instance.fire(\"getField\", \"startDate\", appointment).getTime() : endDate.getTime() - realStartDate.getTime();\n        fullDuration = this._adjustDurationByDaylightDiff(fullDuration, realStartDate, endDate);\n        endDate = new Date(viewStartDate.getTime() >= recurrencePartStartDate.getTime() ? recurrencePartStartDate.getTime() : viewStartDate.getTime());\n\n        if (isRecurring) {\n          endDate = new Date(endDate.getTime() + fullDuration);\n        }\n\n        if (!_date2.default.sameDate(realStartDate, endDate) && recurrencePartCroppedByViewStartDate.getTime() < viewStartDate.getTime()) {\n          var headDuration = _date2.default.trimTime(endDate).getTime() - recurrencePartCroppedByViewStartDate.getTime();\n          var tailDuration = fullDuration - headDuration || fullDuration;\n          endDate = new Date(_date2.default.trimTime(viewStartDate).getTime() + tailDuration);\n        }\n      }\n\n      if (!this.isAllDay(appointment)) {\n        var viewEndDate = _date2.default.roundToHour(this.instance.fire(\"getEndViewDate\"));\n\n        if (endDate > viewEndDate) {\n          endDate = viewEndDate;\n        }\n\n        var currentViewEndTime = new Date(new Date(endDate).setHours(this.instance.option(\"endDayHour\"), 0, 0));\n\n        if (endDate.getTime() > currentViewEndTime.getTime()) {\n          endDate = currentViewEndTime;\n        }\n      }\n\n      return endDate;\n    }\n  }, {\n    key: \"_adjustDurationByDaylightDiff\",\n    value: function (duration, startDate, endDate) {\n      var daylightDiff = this.instance.fire(\"getDaylightOffset\", startDate, endDate);\n      return this._needAdjustDuration(daylightDiff) ? this._calculateDurationByDaylightDiff(duration, daylightDiff) : duration;\n    }\n  }, {\n    key: \"_needAdjustDuration\",\n    value: function (diff) {\n      return 0 !== diff;\n    }\n  }, {\n    key: \"_calculateDurationByDaylightDiff\",\n    value: function (duration, diff) {\n      return duration + diff * toMs(\"minute\");\n    }\n  }, {\n    key: \"_getAppointmentDurationInMs\",\n    value: function (startDate, endDate, allDay) {\n      return this.instance.fire(\"getAppointmentDurationInMs\", {\n        startDate: startDate,\n        endDate: endDate,\n        allDay: allDay\n      });\n    }\n  }, {\n    key: \"_getMaxNeighborAppointmentCount\",\n    value: function () {\n      var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\n\n      if (!overlappingMode) {\n        var outerAppointmentWidth = this.getCompactAppointmentDefaultWidth() + this.getCompactAppointmentLeftOffset();\n        return Math.floor(this.getDropDownAppointmentWidth() / outerAppointmentWidth);\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_markAppointmentAsVirtual\",\n    value: function (coordinates, isAllDay) {\n      var countFullWidthAppointmentInCell = this._getMaxAppointmentCountPerCellByType(isAllDay);\n\n      if (coordinates.count - countFullWidthAppointmentInCell > this._getMaxNeighborAppointmentCount()) {\n        coordinates.virtual = {\n          top: coordinates.top,\n          left: coordinates.left,\n          index: \"tail\" === coordinates.appointmentReduced ? coordinates.groupIndex + \"-\" + coordinates.rowIndex + \"-\" + coordinates.cellIndex : coordinates.groupIndex + \"-\" + coordinates.rowIndex + \"-\" + coordinates.cellIndex + \"-tail\",\n          isAllDay: isAllDay\n        };\n      }\n    }\n  }, {\n    key: \"_getMaxAppointmentCountPerCellByType\",\n    value: function (isAllDay) {\n      var appointmentCountPerCell = this._getMaxAppointmentCountPerCell();\n\n      if (_type2.default.isObject(appointmentCountPerCell)) {\n        return isAllDay ? this._getMaxAppointmentCountPerCell().allDay : this._getMaxAppointmentCountPerCell().simple;\n      } else {\n        return appointmentCountPerCell;\n      }\n    }\n  }, {\n    key: \"getDropDownAppointmentWidth\",\n    value: function (intervalCount, isAllDay) {\n      return this.getPositioningStrategy().getDropDownAppointmentWidth(intervalCount, isAllDay);\n    }\n  }, {\n    key: \"getDropDownAppointmentHeight\",\n    value: function () {\n      return this.getPositioningStrategy().getDropDownAppointmentHeight();\n    }\n  }, {\n    key: \"getDropDownButtonAdaptiveSize\",\n    value: function () {\n      return DROP_DOWN_BUTTON_ADAPTIVE_SIZE;\n    }\n  }, {\n    key: \"getDefaultCellWidth\",\n    value: function () {\n      return this._defaultWidth;\n    }\n  }, {\n    key: \"getDefaultCellHeight\",\n    value: function () {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"getDefaultAllDayCellHeight\",\n    value: function () {\n      return this._allDayHeight;\n    }\n  }, {\n    key: \"getCompactAppointmentDefaultWidth\",\n    value: function () {\n      return COMPACT_APPOINTMENT_DEFAULT_WIDTH;\n    }\n  }, {\n    key: \"getCompactAppointmentTopOffset\",\n    value: function (allDay) {\n      return this.getPositioningStrategy().getCompactAppointmentTopOffset(allDay);\n    }\n  }, {\n    key: \"getCompactAppointmentLeftOffset\",\n    value: function () {\n      return this.getPositioningStrategy().getCompactAppointmentLeftOffset();\n    }\n  }, {\n    key: \"getAppointmentDataCalculator\",\n    value: function () {}\n  }, {\n    key: \"_customizeCoordinates\",\n    value: function (coordinates, height, appointmentCountPerCell, topOffset, isAllDay) {\n      var index = coordinates.index;\n      var appointmentHeight = height / appointmentCountPerCell;\n      var appointmentTop = coordinates.top + index * appointmentHeight;\n      var top = appointmentTop + topOffset;\n      var width = coordinates.width;\n      var left = coordinates.left;\n      var compactAppointmentDefaultSize;\n      var compactAppointmentLeftOffset;\n      var compactAppointmentTopOffset = this.getCompactAppointmentTopOffset(isAllDay);\n\n      if (coordinates.isCompact) {\n        compactAppointmentDefaultSize = this.getCompactAppointmentDefaultWidth();\n        compactAppointmentLeftOffset = this.getCompactAppointmentLeftOffset();\n        top = coordinates.top + compactAppointmentTopOffset;\n        left = coordinates.left + (index - appointmentCountPerCell) * (compactAppointmentDefaultSize + compactAppointmentLeftOffset) + compactAppointmentLeftOffset;\n        this._isAdaptive() && this._correctCompactAppointmentCoordinatesInAdaptive(coordinates, isAllDay);\n        appointmentHeight = compactAppointmentDefaultSize;\n        width = compactAppointmentDefaultSize;\n\n        this._markAppointmentAsVirtual(coordinates, isAllDay);\n      }\n\n      return {\n        height: appointmentHeight,\n        width: width,\n        top: top,\n        left: left,\n        empty: this._isAppointmentEmpty(height, width)\n      };\n    }\n  }, {\n    key: \"_isAppointmentEmpty\",\n    value: function (height, width) {\n      return height < this._getAppointmentMinHeight() || width < this._getAppointmentMinWidth();\n    }\n  }, {\n    key: \"_calculateGeometryConfig\",\n    value: function (coordinates) {\n      var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\n\n      var offsets = this._getOffsets();\n\n      var appointmentDefaultOffset = this._getAppointmentDefaultOffset();\n\n      var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);\n\n      var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);\n\n      var maxHeight = this._getMaxHeight();\n\n      if (!(0, _type.isNumeric)(appointmentCountPerCell)) {\n        appointmentCountPerCell = coordinates.count;\n        ratio = (maxHeight - offsets.unlimited) / maxHeight;\n      }\n\n      var topOffset = (1 - ratio) * maxHeight;\n\n      if (\"auto\" === overlappingMode || (0, _type.isNumeric)(overlappingMode)) {\n        ratio = 1;\n        maxHeight -= appointmentDefaultOffset;\n        topOffset = appointmentDefaultOffset;\n      }\n\n      return {\n        height: ratio * maxHeight,\n        appointmentCountPerCell: appointmentCountPerCell,\n        offset: topOffset\n      };\n    }\n  }, {\n    key: \"_getAppointmentCount\",\n    value: function () {}\n  }, {\n    key: \"_getDefaultRatio\",\n    value: function () {}\n  }, {\n    key: \"_getOffsets\",\n    value: function () {}\n  }, {\n    key: \"_getMaxHeight\",\n    value: function () {}\n  }, {\n    key: \"_needVerifyItemSize\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"needSeparateAppointment\",\n    value: function (allDay) {\n      return this.instance.fire(\"isGroupedByDate\") && allDay;\n    }\n  }, {\n    key: \"_getMaxAppointmentCountPerCell\",\n    value: function () {\n      if (!this._maxAppointmentCountPerCell) {\n        var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\n        var appointmentCountPerCell;\n\n        if (!overlappingMode) {\n          appointmentCountPerCell = 2;\n        }\n\n        if ((0, _type.isNumeric)(overlappingMode)) {\n          appointmentCountPerCell = overlappingMode;\n        }\n\n        if (\"auto\" === overlappingMode) {\n          appointmentCountPerCell = this._getDynamicAppointmentCountPerCell();\n        }\n\n        if (\"unlimited\" === overlappingMode) {\n          appointmentCountPerCell = void 0;\n        }\n\n        this._maxAppointmentCountPerCell = appointmentCountPerCell;\n      }\n\n      return this._maxAppointmentCountPerCell;\n    }\n  }, {\n    key: \"_getDynamicAppointmentCountPerCell\",\n    value: function () {\n      return this.getPositioningStrategy().getDynamicAppointmentCountPerCell();\n    }\n  }, {\n    key: \"hasAllDayAppointments\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"_isCompactTheme\",\n    value: function () {\n      return \"compact\" === (_themes2.default.current() || \"\").split(\".\").pop();\n    }\n  }, {\n    key: \"_getAppointmentDefaultOffset\",\n    value: function () {\n      return this.getPositioningStrategy().getAppointmentDefaultOffset();\n    }\n  }, {\n    key: \"_getAppointmentDefaultHeight\",\n    value: function () {\n      return this._getAppointmentHeightByTheme();\n    }\n  }, {\n    key: \"_getAppointmentMinHeight\",\n    value: function () {\n      return this._getAppointmentDefaultHeight();\n    }\n  }, {\n    key: \"_getAppointmentHeightByTheme\",\n    value: function () {\n      return this._isCompactTheme() ? COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT : APPOINTMENT_DEFAULT_HEIGHT;\n    }\n  }, {\n    key: \"_getAppointmentDefaultWidth\",\n    value: function () {\n      return this.getPositioningStrategy()._getAppointmentDefaultWidth();\n    }\n  }, {\n    key: \"_getAppointmentMinWidth\",\n    value: function () {\n      return this._getAppointmentDefaultWidth();\n    }\n  }, {\n    key: \"_needVerticalGroupBounds\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"_needHorizontalGroupBounds\",\n    value: function () {\n      return false;\n    }\n  }]);\n\n  return BaseRenderingStrategy;\n}();\n\nmodule.exports = BaseRenderingStrategy;","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/node_modules/devextreme/ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.base.js"],"names":["_uiSchedulerAppointmentsPositioningStrategy","require","_uiSchedulerAppointmentsPositioningStrategy2","_interopRequireDefault","_uiSchedulerAppointmentsPositioningStrategy3","_uiSchedulerAppointmentsPositioningStrategy4","_extend","_ui","_ui2","_date","_date2","_type","_type2","_themes","_themes2","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","toMs","default","dateToMilliseconds","APPOINTMENT_MIN_SIZE","COMPACT_APPOINTMENT_DEFAULT_WIDTH","APPOINTMENT_DEFAULT_HEIGHT","COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT","DROP_DOWN_BUTTON_ADAPTIVE_SIZE","BaseRenderingStrategy","_initPositioningStrategy","value","fire","coordinates","isAllDay","top","getCompactAppointmentTopOffset","left","getCompactAppointmentLeftOffset","_positioningStrategy","_isAdaptive","items","_maxAppointmentCountPerCell","_defaultWidth","_cellWidth","_defaultHeight","_cellHeight","_allDayHeight","_allDayCellHeight","map","_getItemPosition","_isRtl","_correctRtlCoordinates","push","positionArray","_getSortedPositions","resultPositions","_getResultPositions","_getExtendedPositionMap","args","initialSize","intervalWidth","getAppointmentMinSize","initialWidth","width","Math","round","_getAppointmentMaxWidth","forEach","coordinate","appointmentReduced","getDefaultCellWidth","item","position","_getAppointmentCoordinates","allDay","result","startDate","Date","isRecurring","j","height","calculateAppointmentHeight","calculateAppointmentWidth","resultWidth","multiWeekAppointmentParts","initialRowIndex","rowIndex","initialCellIndex","cellIndex","_needVerifyItemSize","currentMaxAllowedPosition","hMax","isAppointmentGreaterThan","_reduceMultiWeekAppointment","right","_getAppointmentParts","sourceAppointmentWidth","reducedWidth","extend","_getAppointmentPartsPosition","appointmentParts","unshift","concat","itemData","originalStartDate","appointmentData","option","appointmentWidth","cellWidth","bound","floor","etalon","comparisonParameters","positionList","_this","createItem","bottom","cellPosition","rowCount","cellCount","_positionList$rowInde","sort","a","b","_sortCondition","isSomeEdge","_isSomeEdge","columnCondition","_normalizeCondition","rowCondition","cellPositionCondition","conditions","_getConditions","first","second","abs","currentItem","orientation","side_1","side_2","sortedArray","_this2","sortedIndex","indexes","itemIndex","maxIndexInStack","stack","_getOrientation","findFreeIndex","index","isFind","some","startNewStack","currentIndex","_skipSortedIndex","pushItemsInResult","count","_isItemsCross","max","min","_getMaxAppointmentCountPerCell","arr","iKey","jKey","iValue","jValue","len","positions","positionCounter","mapLength","resultString","itemLength","_checkLongCompactAppointment","appointmentCountPerCell","_getMaxAppointmentCountPerCellByType","compactCount","isCompact","_getCompactAppointmentParts","k","compactPart","_getCompactLeftCoordinate","appointment","skipNormalize","rangeStartDate","_getStartDate","text","isNaN","getTime","Error","endDate","ignoreViewDates","arguments","_getEndDate","realStartDate","viewStartDate","recurrencePartStartDate","initialStartDate","recurrencePartCroppedByViewStartDate","fullDuration","_adjustDurationByDaylightDiff","sameDate","headDuration","trimTime","tailDuration","viewEndDate","roundToHour","currentViewEndTime","setHours","duration","daylightDiff","_needAdjustDuration","_calculateDurationByDaylightDiff","diff","overlappingMode","outerAppointmentWidth","getCompactAppointmentDefaultWidth","getDropDownAppointmentWidth","countFullWidthAppointmentInCell","_getMaxNeighborAppointmentCount","virtual","groupIndex","isObject","simple","intervalCount","getPositioningStrategy","getDropDownAppointmentHeight","topOffset","appointmentHeight","appointmentTop","compactAppointmentDefaultSize","compactAppointmentLeftOffset","compactAppointmentTopOffset","_correctCompactAppointmentCoordinatesInAdaptive","_markAppointmentAsVirtual","empty","_isAppointmentEmpty","_getAppointmentMinHeight","_getAppointmentMinWidth","offsets","_getOffsets","appointmentDefaultOffset","_getAppointmentDefaultOffset","_getAppointmentCount","ratio","_getDefaultRatio","maxHeight","_getMaxHeight","isNumeric","unlimited","offset","_getDynamicAppointmentCountPerCell","getDynamicAppointmentCountPerCell","current","split","pop","getAppointmentDefaultOffset","_getAppointmentHeightByTheme","_getAppointmentDefaultHeight","_isCompactTheme","_getAppointmentDefaultWidth","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.base.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _uiSchedulerAppointmentsPositioningStrategy = require(\"./ui.scheduler.appointmentsPositioning.strategy.base\");\r\nvar _uiSchedulerAppointmentsPositioningStrategy2 = _interopRequireDefault(_uiSchedulerAppointmentsPositioningStrategy);\r\nvar _uiSchedulerAppointmentsPositioningStrategy3 = require(\"./ui.scheduler.appointmentsPositioning.strategy.adaptive\");\r\nvar _uiSchedulerAppointmentsPositioningStrategy4 = _interopRequireDefault(_uiSchedulerAppointmentsPositioningStrategy3);\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _ui = require(\"../../widget/ui.errors\");\r\nvar _ui2 = _interopRequireDefault(_ui);\r\nvar _date = require(\"../../../core/utils/date\");\r\nvar _date2 = _interopRequireDefault(_date);\r\nvar _type = require(\"../../../core/utils/type\");\r\nvar _type2 = _interopRequireDefault(_type);\r\nvar _themes = require(\"../../themes\");\r\nvar _themes2 = _interopRequireDefault(_themes);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\nvar toMs = _date2.default.dateToMilliseconds;\r\nvar APPOINTMENT_MIN_SIZE = 2;\r\nvar COMPACT_APPOINTMENT_DEFAULT_WIDTH = 15;\r\nvar APPOINTMENT_DEFAULT_HEIGHT = 20;\r\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT = 18;\r\nvar DROP_DOWN_BUTTON_ADAPTIVE_SIZE = 28;\r\nvar BaseRenderingStrategy = function() {\r\n    function BaseRenderingStrategy(instance) {\r\n        _classCallCheck(this, BaseRenderingStrategy);\r\n        this.instance = instance;\r\n        this._initPositioningStrategy()\r\n    }\r\n    _createClass(BaseRenderingStrategy, [{\r\n        key: \"_isAdaptive\",\r\n        value: function() {\r\n            return this.instance.fire(\"isAdaptive\")\r\n        }\r\n    }, {\r\n        key: \"_correctCompactAppointmentCoordinatesInAdaptive\",\r\n        value: function(coordinates, isAllDay) {\r\n            coordinates.top = coordinates.top + this.getCompactAppointmentTopOffset(isAllDay);\r\n            coordinates.left = coordinates.left + this.getCompactAppointmentLeftOffset()\r\n        }\r\n    }, {\r\n        key: \"_initPositioningStrategy\",\r\n        value: function() {\r\n            this._positioningStrategy = this._isAdaptive() ? new _uiSchedulerAppointmentsPositioningStrategy4.default(this) : new _uiSchedulerAppointmentsPositioningStrategy2.default(this)\r\n        }\r\n    }, {\r\n        key: \"getPositioningStrategy\",\r\n        value: function() {\r\n            return this._positioningStrategy\r\n        }\r\n    }, {\r\n        key: \"getAppointmentMinSize\",\r\n        value: function() {\r\n            return APPOINTMENT_MIN_SIZE\r\n        }\r\n    }, {\r\n        key: \"keepAppointmentSettings\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"getDeltaTime\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"getAppointmentGeometry\",\r\n        value: function(coordinates) {\r\n            return coordinates\r\n        }\r\n    }, {\r\n        key: \"needCorrectAppointmentDates\",\r\n        value: function() {\r\n            return true\r\n        }\r\n    }, {\r\n        key: \"getDirection\",\r\n        value: function() {\r\n            return \"horizontal\"\r\n        }\r\n    }, {\r\n        key: \"createTaskPositionMap\",\r\n        value: function(items) {\r\n            delete this._maxAppointmentCountPerCell;\r\n            var length = items && items.length;\r\n            if (!length) {\r\n                return\r\n            }\r\n            this._defaultWidth = this.instance._cellWidth;\r\n            this._defaultHeight = this.instance._cellHeight;\r\n            this._allDayHeight = this.instance._allDayCellHeight;\r\n            var map = [];\r\n            for (var i = 0; i < length; i++) {\r\n                var coordinates = this._getItemPosition(items[i]);\r\n                if (this._isRtl()) {\r\n                    coordinates = this._correctRtlCoordinates(coordinates)\r\n                }\r\n                map.push(coordinates)\r\n            }\r\n            var positionArray = this._getSortedPositions(map);\r\n            var resultPositions = this._getResultPositions(positionArray);\r\n            return this._getExtendedPositionMap(map, resultPositions)\r\n        }\r\n    }, {\r\n        key: \"_getDeltaWidth\",\r\n        value: function(args, initialSize) {\r\n            var intervalWidth = this.instance.fire(\"getResizableStep\") || this.getAppointmentMinSize();\r\n            var initialWidth = initialSize.width;\r\n            return Math.round((args.width - initialWidth) / intervalWidth)\r\n        }\r\n    }, {\r\n        key: \"_correctRtlCoordinates\",\r\n        value: function(coordinates) {\r\n            var width = coordinates[0].width || this._getAppointmentMaxWidth();\r\n            coordinates.forEach(function(coordinate) {\r\n                if (!coordinate.appointmentReduced) {\r\n                    coordinate.left -= width\r\n                }\r\n            });\r\n            return coordinates\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentMaxWidth\",\r\n        value: function() {\r\n            return this.getDefaultCellWidth()\r\n        }\r\n    }, {\r\n        key: \"_getItemPosition\",\r\n        value: function(item) {\r\n            var position = this._getAppointmentCoordinates(item);\r\n            var allDay = this.isAllDay(item);\r\n            var result = [];\r\n            var startDate = new Date(this.instance.fire(\"getField\", \"startDate\", item));\r\n            var isRecurring = !!this.instance.fire(\"getField\", \"recurrenceRule\", item);\r\n            for (var j = 0; j < position.length; j++) {\r\n                var height = this.calculateAppointmentHeight(item, position[j], isRecurring);\r\n                var width = this.calculateAppointmentWidth(item, position[j], isRecurring);\r\n                var resultWidth = width;\r\n                var appointmentReduced = null;\r\n                var multiWeekAppointmentParts = [];\r\n                var initialRowIndex = position[j].rowIndex;\r\n                var initialCellIndex = position[j].cellIndex;\r\n                if (this._needVerifyItemSize() || allDay) {\r\n                    var currentMaxAllowedPosition = position[j].hMax;\r\n                    if (this.isAppointmentGreaterThan(currentMaxAllowedPosition, {\r\n                            left: position[j].left,\r\n                            width: width\r\n                        })) {\r\n                        appointmentReduced = \"head\";\r\n                        initialRowIndex = position[j].rowIndex;\r\n                        initialCellIndex = position[j].cellIndex;\r\n                        resultWidth = this._reduceMultiWeekAppointment(width, {\r\n                            left: position[j].left,\r\n                            right: currentMaxAllowedPosition\r\n                        });\r\n                        multiWeekAppointmentParts = this._getAppointmentParts({\r\n                            sourceAppointmentWidth: width,\r\n                            reducedWidth: resultWidth,\r\n                            height: height\r\n                        }, position[j], startDate);\r\n                        if (this._isRtl()) {\r\n                            position[j].left = currentMaxAllowedPosition\r\n                        }\r\n                    }\r\n                }(0, _extend.extend)(position[j], {\r\n                    height: height,\r\n                    width: resultWidth,\r\n                    allDay: allDay,\r\n                    rowIndex: initialRowIndex,\r\n                    cellIndex: initialCellIndex,\r\n                    appointmentReduced: appointmentReduced\r\n                });\r\n                result = this._getAppointmentPartsPosition(multiWeekAppointmentParts, position[j], result)\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentPartsPosition\",\r\n        value: function(appointmentParts, position, result) {\r\n            if (appointmentParts.length) {\r\n                appointmentParts.unshift(position);\r\n                result = result.concat(appointmentParts)\r\n            } else {\r\n                result.push(position)\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentCoordinates\",\r\n        value: function(itemData) {\r\n            return this.instance.fire(\"needCoordinates\", {\r\n                startDate: this.startDate(itemData),\r\n                originalStartDate: this.startDate(itemData, true),\r\n                appointmentData: itemData\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_isRtl\",\r\n        value: function() {\r\n            return this.instance.option(\"rtlEnabled\")\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentParts\",\r\n        value: function() {\r\n            return []\r\n        }\r\n    }, {\r\n        key: \"_getCompactAppointmentParts\",\r\n        value: function(appointmentWidth) {\r\n            var cellWidth = this.getDefaultCellWidth() || this.getAppointmentMinSize();\r\n            return Math.round(appointmentWidth / cellWidth)\r\n        }\r\n    }, {\r\n        key: \"_reduceMultiWeekAppointment\",\r\n        value: function(sourceAppointmentWidth, bound) {\r\n            if (this._isRtl()) {\r\n                sourceAppointmentWidth = Math.floor(bound.left - bound.right)\r\n            } else {\r\n                sourceAppointmentWidth = bound.right - Math.floor(bound.left)\r\n            }\r\n            return sourceAppointmentWidth\r\n        }\r\n    }, {\r\n        key: \"calculateAppointmentHeight\",\r\n        value: function() {\r\n            return 0\r\n        }\r\n    }, {\r\n        key: \"calculateAppointmentWidth\",\r\n        value: function() {\r\n            return 0\r\n        }\r\n    }, {\r\n        key: \"isAppointmentGreaterThan\",\r\n        value: function(etalon, comparisonParameters) {\r\n            var result = comparisonParameters.left + comparisonParameters.width - etalon;\r\n            if (this._isRtl()) {\r\n                result = etalon + comparisonParameters.width - comparisonParameters.left\r\n            }\r\n            return result > this.getDefaultCellWidth() / 2\r\n        }\r\n    }, {\r\n        key: \"isAllDay\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"cropAppointmentWidth\",\r\n        value: function(width, cellWidth) {\r\n            if (this.instance.fire(\"isGroupedByDate\")) {\r\n                width = cellWidth\r\n            }\r\n            return width\r\n        }\r\n    }, {\r\n        key: \"_getSortedPositions\",\r\n        value: function(positionList) {\r\n            var _this = this;\r\n            var result = [];\r\n            var round = function(value) {\r\n                return Math.round(100 * value) / 100\r\n            };\r\n            var createItem = function(rowIndex, cellIndex, top, left, bottom, right, position, allDay) {\r\n                return {\r\n                    i: rowIndex,\r\n                    j: cellIndex,\r\n                    top: round(top),\r\n                    left: round(left),\r\n                    bottom: round(bottom),\r\n                    right: round(right),\r\n                    cellPosition: position,\r\n                    allDay: allDay\r\n                }\r\n            };\r\n            for (var rowIndex = 0, rowCount = positionList.length; rowIndex < rowCount; rowIndex++) {\r\n                for (var cellIndex = 0, cellCount = positionList[rowIndex].length; cellIndex < cellCount; cellIndex++) {\r\n                    var _positionList$rowInde = positionList[rowIndex][cellIndex],\r\n                        top = _positionList$rowInde.top,\r\n                        left = _positionList$rowInde.left,\r\n                        height = _positionList$rowInde.height,\r\n                        width = _positionList$rowInde.width,\r\n                        cellPosition = _positionList$rowInde.cellPosition,\r\n                        allDay = _positionList$rowInde.allDay;\r\n                    result.push(createItem(rowIndex, cellIndex, top, left, top + height, left + width, cellPosition, allDay))\r\n                }\r\n            }\r\n            return result.sort(function(a, b) {\r\n                return _this._sortCondition(a, b)\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_sortCondition\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_getConditions\",\r\n        value: function(a, b) {\r\n            var isSomeEdge = this._isSomeEdge(a, b);\r\n            return {\r\n                columnCondition: isSomeEdge || this._normalizeCondition(a.left, b.left),\r\n                rowCondition: isSomeEdge || this._normalizeCondition(a.top, b.top),\r\n                cellPositionCondition: isSomeEdge || this._normalizeCondition(a.cellPosition, b.cellPosition)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_rowCondition\",\r\n        value: function(a, b) {\r\n            var conditions = this._getConditions(a, b);\r\n            return conditions.columnCondition || conditions.rowCondition\r\n        }\r\n    }, {\r\n        key: \"_columnCondition\",\r\n        value: function(a, b) {\r\n            var conditions = this._getConditions(a, b);\r\n            return conditions.rowCondition || conditions.columnCondition\r\n        }\r\n    }, {\r\n        key: \"_isSomeEdge\",\r\n        value: function(a, b) {\r\n            return a.i === b.i && a.j === b.j\r\n        }\r\n    }, {\r\n        key: \"_normalizeCondition\",\r\n        value: function(first, second) {\r\n            var result = first - second;\r\n            return Math.abs(result) > 1 ? result : 0\r\n        }\r\n    }, {\r\n        key: \"_isItemsCross\",\r\n        value: function(item, currentItem, orientation) {\r\n            var side_1 = Math.floor(item[orientation[0]]);\r\n            var side_2 = Math.floor(item[orientation[1]]);\r\n            return item[orientation[2]] === currentItem[orientation[2]] && (side_1 <= currentItem[orientation[0]] && side_2 > currentItem[orientation[0]] || side_1 < currentItem[orientation[1]] && side_2 >= currentItem[orientation[1]] || side_1 === currentItem[orientation[0]] && side_2 === currentItem[orientation[1]])\r\n        }\r\n    }, {\r\n        key: \"_getOrientation\",\r\n        value: function() {\r\n            return [\"top\", \"bottom\", \"left\"]\r\n        }\r\n    }, {\r\n        key: \"_getResultPositions\",\r\n        value: function(sortedArray) {\r\n            var _this2 = this;\r\n            var result = [];\r\n            var i;\r\n            var sortedIndex = 0;\r\n            var currentItem;\r\n            var indexes;\r\n            var itemIndex;\r\n            var maxIndexInStack = 0;\r\n            var stack = {};\r\n            var orientation = this._getOrientation();\r\n            var findFreeIndex = function findFreeIndex(indexes, index) {\r\n                var isFind = indexes.some(function(item) {\r\n                    return item === index\r\n                });\r\n                if (isFind) {\r\n                    return findFreeIndex(indexes, ++index)\r\n                } else {\r\n                    return index\r\n                }\r\n            };\r\n            var startNewStack = function(currentItem) {\r\n                stack.items = [createItem(currentItem)];\r\n                stack.left = currentItem.left;\r\n                stack.right = currentItem.right;\r\n                stack.top = currentItem.top;\r\n                stack.bottom = currentItem.bottom\r\n            };\r\n            var createItem = function(currentItem, index) {\r\n                var currentIndex = index || 0;\r\n                return {\r\n                    index: currentIndex,\r\n                    i: currentItem.i,\r\n                    j: currentItem.j,\r\n                    left: currentItem.left,\r\n                    right: currentItem.right,\r\n                    top: currentItem.top,\r\n                    bottom: currentItem.bottom,\r\n                    sortedIndex: _this2._skipSortedIndex(currentIndex) ? null : sortedIndex++\r\n                }\r\n            };\r\n            var pushItemsInResult = function(items) {\r\n                items.forEach(function(item) {\r\n                    result.push({\r\n                        index: item.index,\r\n                        count: maxIndexInStack + 1,\r\n                        i: item.i,\r\n                        j: item.j,\r\n                        sortedIndex: item.sortedIndex\r\n                    })\r\n                })\r\n            };\r\n            for (i = 0; i < sortedArray.length; i++) {\r\n                currentItem = sortedArray[i];\r\n                indexes = [];\r\n                if (!stack.items) {\r\n                    startNewStack(currentItem)\r\n                } else {\r\n                    if (this._isItemsCross(stack, currentItem, orientation)) {\r\n                        stack.items.forEach(function(item, index) {\r\n                            if (_this2._isItemsCross(item, currentItem, orientation)) {\r\n                                indexes.push(item.index)\r\n                            }\r\n                        });\r\n                        itemIndex = indexes.length ? findFreeIndex(indexes, 0) : 0;\r\n                        stack.items.push(createItem(currentItem, itemIndex));\r\n                        maxIndexInStack = Math.max(itemIndex, maxIndexInStack);\r\n                        stack.left = Math.min(stack.left, currentItem.left);\r\n                        stack.right = Math.max(stack.right, currentItem.right);\r\n                        stack.top = Math.min(stack.top, currentItem.top);\r\n                        stack.bottom = Math.max(stack.bottom, currentItem.bottom)\r\n                    } else {\r\n                        pushItemsInResult(stack.items);\r\n                        stack = {};\r\n                        startNewStack(currentItem);\r\n                        maxIndexInStack = 0\r\n                    }\r\n                }\r\n            }\r\n            if (stack.items) {\r\n                pushItemsInResult(stack.items)\r\n            }\r\n            return result.sort(function(a, b) {\r\n                var columnCondition = a.j - b.j;\r\n                var rowCondition = a.i - b.i;\r\n                return rowCondition ? rowCondition : columnCondition\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_skipSortedIndex\",\r\n        value: function(index) {\r\n            return this.instance.fire(\"getMaxAppointmentsPerCell\") && index > this._getMaxAppointmentCountPerCell() - 1\r\n        }\r\n    }, {\r\n        key: \"_findIndexByKey\",\r\n        value: function(arr, iKey, jKey, iValue, jValue) {\r\n            var result = 0;\r\n            for (var i = 0, len = arr.length; i < len; i++) {\r\n                if (arr[i][iKey] === iValue && arr[i][jKey] === jValue) {\r\n                    result = i;\r\n                    break\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getExtendedPositionMap\",\r\n        value: function(map, positions) {\r\n            var positionCounter = 0;\r\n            var result = [];\r\n            for (var i = 0, mapLength = map.length; i < mapLength; i++) {\r\n                var resultString = [];\r\n                for (var j = 0, itemLength = map[i].length; j < itemLength; j++) {\r\n                    map[i][j].index = positions[positionCounter].index;\r\n                    map[i][j].sortedIndex = positions[positionCounter].sortedIndex;\r\n                    map[i][j].count = positions[positionCounter++].count;\r\n                    resultString.push(map[i][j]);\r\n                    this._checkLongCompactAppointment(map[i][j], resultString)\r\n                }\r\n                result.push(resultString)\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_checkLongCompactAppointment\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_splitLongCompactAppointment\",\r\n        value: function(item, result) {\r\n            var appointmentCountPerCell = this._getMaxAppointmentCountPerCellByType(item.allDay);\r\n            var compactCount = 0;\r\n            if (void 0 !== appointmentCountPerCell && item.index > appointmentCountPerCell - 1) {\r\n                item.isCompact = true;\r\n                compactCount = this._getCompactAppointmentParts(item.width);\r\n                for (var k = 1; k < compactCount; k++) {\r\n                    var compactPart = (0, _extend.extend)(true, {}, item);\r\n                    compactPart.left = this._getCompactLeftCoordinate(item.left, k);\r\n                    compactPart.cellIndex = compactPart.cellIndex + k;\r\n                    compactPart.sortedIndex = null;\r\n                    result.push(compactPart)\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"startDate\",\r\n        value: function startDate(appointment, skipNormalize, position) {\r\n            var startDate = position && position.startDate;\r\n            var rangeStartDate = this.instance._getStartDate(appointment, skipNormalize);\r\n            var text = this.instance.fire(\"getField\", \"text\", appointment);\r\n            if (startDate && rangeStartDate > startDate || !startDate) {\r\n                startDate = rangeStartDate\r\n            }\r\n            if (isNaN(startDate.getTime())) {\r\n                throw _ui2.default.Error(\"E1032\", text)\r\n            }\r\n            return startDate\r\n        }\r\n    }, {\r\n        key: \"endDate\",\r\n        value: function endDate(appointment, position, isRecurring) {\r\n            var ignoreViewDates = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;\r\n            var endDate = this.instance._getEndDate(appointment, ignoreViewDates);\r\n            var realStartDate = this.startDate(appointment, true);\r\n            var viewStartDate = this.startDate(appointment, false, position);\r\n            if (viewStartDate.getTime() > endDate.getTime() || isRecurring) {\r\n                var recurrencePartStartDate = position ? position.initialStartDate || position.startDate : realStartDate;\r\n                var recurrencePartCroppedByViewStartDate = position ? position.startDate : realStartDate;\r\n                var fullDuration = viewStartDate.getTime() > endDate.getTime() ? this.instance.fire(\"getField\", \"endDate\", appointment).getTime() - this.instance.fire(\"getField\", \"startDate\", appointment).getTime() : endDate.getTime() - realStartDate.getTime();\r\n                fullDuration = this._adjustDurationByDaylightDiff(fullDuration, realStartDate, endDate);\r\n                endDate = new Date(viewStartDate.getTime() >= recurrencePartStartDate.getTime() ? recurrencePartStartDate.getTime() : viewStartDate.getTime());\r\n                if (isRecurring) {\r\n                    endDate = new Date(endDate.getTime() + fullDuration)\r\n                }\r\n                if (!_date2.default.sameDate(realStartDate, endDate) && recurrencePartCroppedByViewStartDate.getTime() < viewStartDate.getTime()) {\r\n                    var headDuration = _date2.default.trimTime(endDate).getTime() - recurrencePartCroppedByViewStartDate.getTime();\r\n                    var tailDuration = fullDuration - headDuration || fullDuration;\r\n                    endDate = new Date(_date2.default.trimTime(viewStartDate).getTime() + tailDuration)\r\n                }\r\n            }\r\n            if (!this.isAllDay(appointment)) {\r\n                var viewEndDate = _date2.default.roundToHour(this.instance.fire(\"getEndViewDate\"));\r\n                if (endDate > viewEndDate) {\r\n                    endDate = viewEndDate\r\n                }\r\n                var currentViewEndTime = new Date(new Date(endDate).setHours(this.instance.option(\"endDayHour\"), 0, 0));\r\n                if (endDate.getTime() > currentViewEndTime.getTime()) {\r\n                    endDate = currentViewEndTime\r\n                }\r\n            }\r\n            return endDate\r\n        }\r\n    }, {\r\n        key: \"_adjustDurationByDaylightDiff\",\r\n        value: function(duration, startDate, endDate) {\r\n            var daylightDiff = this.instance.fire(\"getDaylightOffset\", startDate, endDate);\r\n            return this._needAdjustDuration(daylightDiff) ? this._calculateDurationByDaylightDiff(duration, daylightDiff) : duration\r\n        }\r\n    }, {\r\n        key: \"_needAdjustDuration\",\r\n        value: function(diff) {\r\n            return 0 !== diff\r\n        }\r\n    }, {\r\n        key: \"_calculateDurationByDaylightDiff\",\r\n        value: function(duration, diff) {\r\n            return duration + diff * toMs(\"minute\")\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentDurationInMs\",\r\n        value: function(startDate, endDate, allDay) {\r\n            return this.instance.fire(\"getAppointmentDurationInMs\", {\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                allDay: allDay\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_getMaxNeighborAppointmentCount\",\r\n        value: function() {\r\n            var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\r\n            if (!overlappingMode) {\r\n                var outerAppointmentWidth = this.getCompactAppointmentDefaultWidth() + this.getCompactAppointmentLeftOffset();\r\n                return Math.floor(this.getDropDownAppointmentWidth() / outerAppointmentWidth)\r\n            } else {\r\n                return 0\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_markAppointmentAsVirtual\",\r\n        value: function(coordinates, isAllDay) {\r\n            var countFullWidthAppointmentInCell = this._getMaxAppointmentCountPerCellByType(isAllDay);\r\n            if (coordinates.count - countFullWidthAppointmentInCell > this._getMaxNeighborAppointmentCount()) {\r\n                coordinates.virtual = {\r\n                    top: coordinates.top,\r\n                    left: coordinates.left,\r\n                    index: \"tail\" === coordinates.appointmentReduced ? coordinates.groupIndex + \"-\" + coordinates.rowIndex + \"-\" + coordinates.cellIndex : coordinates.groupIndex + \"-\" + coordinates.rowIndex + \"-\" + coordinates.cellIndex + \"-tail\",\r\n                    isAllDay: isAllDay\r\n                }\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getMaxAppointmentCountPerCellByType\",\r\n        value: function(isAllDay) {\r\n            var appointmentCountPerCell = this._getMaxAppointmentCountPerCell();\r\n            if (_type2.default.isObject(appointmentCountPerCell)) {\r\n                return isAllDay ? this._getMaxAppointmentCountPerCell().allDay : this._getMaxAppointmentCountPerCell().simple\r\n            } else {\r\n                return appointmentCountPerCell\r\n            }\r\n        }\r\n    }, {\r\n        key: \"getDropDownAppointmentWidth\",\r\n        value: function(intervalCount, isAllDay) {\r\n            return this.getPositioningStrategy().getDropDownAppointmentWidth(intervalCount, isAllDay)\r\n        }\r\n    }, {\r\n        key: \"getDropDownAppointmentHeight\",\r\n        value: function() {\r\n            return this.getPositioningStrategy().getDropDownAppointmentHeight()\r\n        }\r\n    }, {\r\n        key: \"getDropDownButtonAdaptiveSize\",\r\n        value: function() {\r\n            return DROP_DOWN_BUTTON_ADAPTIVE_SIZE\r\n        }\r\n    }, {\r\n        key: \"getDefaultCellWidth\",\r\n        value: function() {\r\n            return this._defaultWidth\r\n        }\r\n    }, {\r\n        key: \"getDefaultCellHeight\",\r\n        value: function() {\r\n            return this._defaultHeight\r\n        }\r\n    }, {\r\n        key: \"getDefaultAllDayCellHeight\",\r\n        value: function() {\r\n            return this._allDayHeight\r\n        }\r\n    }, {\r\n        key: \"getCompactAppointmentDefaultWidth\",\r\n        value: function() {\r\n            return COMPACT_APPOINTMENT_DEFAULT_WIDTH\r\n        }\r\n    }, {\r\n        key: \"getCompactAppointmentTopOffset\",\r\n        value: function(allDay) {\r\n            return this.getPositioningStrategy().getCompactAppointmentTopOffset(allDay)\r\n        }\r\n    }, {\r\n        key: \"getCompactAppointmentLeftOffset\",\r\n        value: function() {\r\n            return this.getPositioningStrategy().getCompactAppointmentLeftOffset()\r\n        }\r\n    }, {\r\n        key: \"getAppointmentDataCalculator\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_customizeCoordinates\",\r\n        value: function(coordinates, height, appointmentCountPerCell, topOffset, isAllDay) {\r\n            var index = coordinates.index;\r\n            var appointmentHeight = height / appointmentCountPerCell;\r\n            var appointmentTop = coordinates.top + index * appointmentHeight;\r\n            var top = appointmentTop + topOffset;\r\n            var width = coordinates.width;\r\n            var left = coordinates.left;\r\n            var compactAppointmentDefaultSize;\r\n            var compactAppointmentLeftOffset;\r\n            var compactAppointmentTopOffset = this.getCompactAppointmentTopOffset(isAllDay);\r\n            if (coordinates.isCompact) {\r\n                compactAppointmentDefaultSize = this.getCompactAppointmentDefaultWidth();\r\n                compactAppointmentLeftOffset = this.getCompactAppointmentLeftOffset();\r\n                top = coordinates.top + compactAppointmentTopOffset;\r\n                left = coordinates.left + (index - appointmentCountPerCell) * (compactAppointmentDefaultSize + compactAppointmentLeftOffset) + compactAppointmentLeftOffset;\r\n                this._isAdaptive() && this._correctCompactAppointmentCoordinatesInAdaptive(coordinates, isAllDay);\r\n                appointmentHeight = compactAppointmentDefaultSize;\r\n                width = compactAppointmentDefaultSize;\r\n                this._markAppointmentAsVirtual(coordinates, isAllDay)\r\n            }\r\n            return {\r\n                height: appointmentHeight,\r\n                width: width,\r\n                top: top,\r\n                left: left,\r\n                empty: this._isAppointmentEmpty(height, width)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_isAppointmentEmpty\",\r\n        value: function(height, width) {\r\n            return height < this._getAppointmentMinHeight() || width < this._getAppointmentMinWidth()\r\n        }\r\n    }, {\r\n        key: \"_calculateGeometryConfig\",\r\n        value: function(coordinates) {\r\n            var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\r\n            var offsets = this._getOffsets();\r\n            var appointmentDefaultOffset = this._getAppointmentDefaultOffset();\r\n            var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);\r\n            var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);\r\n            var maxHeight = this._getMaxHeight();\r\n            if (!(0, _type.isNumeric)(appointmentCountPerCell)) {\r\n                appointmentCountPerCell = coordinates.count;\r\n                ratio = (maxHeight - offsets.unlimited) / maxHeight\r\n            }\r\n            var topOffset = (1 - ratio) * maxHeight;\r\n            if (\"auto\" === overlappingMode || (0, _type.isNumeric)(overlappingMode)) {\r\n                ratio = 1;\r\n                maxHeight -= appointmentDefaultOffset;\r\n                topOffset = appointmentDefaultOffset\r\n            }\r\n            return {\r\n                height: ratio * maxHeight,\r\n                appointmentCountPerCell: appointmentCountPerCell,\r\n                offset: topOffset\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentCount\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_getDefaultRatio\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_getOffsets\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_getMaxHeight\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_needVerifyItemSize\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"needSeparateAppointment\",\r\n        value: function(allDay) {\r\n            return this.instance.fire(\"isGroupedByDate\") && allDay\r\n        }\r\n    }, {\r\n        key: \"_getMaxAppointmentCountPerCell\",\r\n        value: function() {\r\n            if (!this._maxAppointmentCountPerCell) {\r\n                var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\r\n                var appointmentCountPerCell;\r\n                if (!overlappingMode) {\r\n                    appointmentCountPerCell = 2\r\n                }\r\n                if ((0, _type.isNumeric)(overlappingMode)) {\r\n                    appointmentCountPerCell = overlappingMode\r\n                }\r\n                if (\"auto\" === overlappingMode) {\r\n                    appointmentCountPerCell = this._getDynamicAppointmentCountPerCell()\r\n                }\r\n                if (\"unlimited\" === overlappingMode) {\r\n                    appointmentCountPerCell = void 0\r\n                }\r\n                this._maxAppointmentCountPerCell = appointmentCountPerCell\r\n            }\r\n            return this._maxAppointmentCountPerCell\r\n        }\r\n    }, {\r\n        key: \"_getDynamicAppointmentCountPerCell\",\r\n        value: function() {\r\n            return this.getPositioningStrategy().getDynamicAppointmentCountPerCell()\r\n        }\r\n    }, {\r\n        key: \"hasAllDayAppointments\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"_isCompactTheme\",\r\n        value: function() {\r\n            return \"compact\" === (_themes2.default.current() || \"\").split(\".\").pop()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentDefaultOffset\",\r\n        value: function() {\r\n            return this.getPositioningStrategy().getAppointmentDefaultOffset()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentDefaultHeight\",\r\n        value: function() {\r\n            return this._getAppointmentHeightByTheme()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentMinHeight\",\r\n        value: function() {\r\n            return this._getAppointmentDefaultHeight()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentHeightByTheme\",\r\n        value: function() {\r\n            return this._isCompactTheme() ? COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT : APPOINTMENT_DEFAULT_HEIGHT\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentDefaultWidth\",\r\n        value: function() {\r\n            return this.getPositioningStrategy()._getAppointmentDefaultWidth()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentMinWidth\",\r\n        value: function() {\r\n            return this._getAppointmentDefaultWidth()\r\n        }\r\n    }, {\r\n        key: \"_needVerticalGroupBounds\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"_needHorizontalGroupBounds\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }]);\r\n    return BaseRenderingStrategy\r\n}();\r\nmodule.exports = BaseRenderingStrategy;\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/shaders/ui.scheduler.current_time_shader.vertical.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../../core/renderer\");\n\nvar Shader = require(\"./ui.scheduler.current_time_shader\");\n\nvar DATE_TIME_SHADER_ALL_DAY_CLASS = \"dx-scheduler-date-time-shader-all-day\";\nvar DATE_TIME_SHADER_TOP_CLASS = \"dx-scheduler-date-time-shader-top\";\nvar DATE_TIME_SHADER_BOTTOM_CLASS = \"dx-scheduler-date-time-shader-bottom\";\nvar VerticalCurrentTimeShader = Shader.inherit({\n  _renderShader: function () {\n    var shaderHeight = this._getShaderHeight();\n\n    var maxHeight = this._getShaderMaxHeight();\n\n    var renderSolidShader = false;\n\n    if (shaderHeight > maxHeight) {\n      shaderHeight = maxHeight;\n      renderSolidShader = true;\n    }\n\n    if (shaderHeight >= 0) {\n      this._$shader.height(shaderHeight);\n\n      var groupCount = this._workspace._getGroupCount() || 1;\n\n      if (renderSolidShader) {\n        this._renderTopShader(this._$shader, shaderHeight, this._$container.get(0).getBoundingClientRect().width, 0);\n\n        this._renderAllDayShader(this._$container.get(0).getBoundingClientRect().width, 0);\n      } else {\n        for (var i = 0; i < groupCount; i++) {\n          var shaderWidth = this._getShaderWidth(i);\n\n          this._renderTopShader(this._$shader, shaderHeight, shaderWidth, i);\n\n          this._renderBottomShader(this._$shader, maxHeight - shaderHeight, shaderWidth, i);\n\n          this._renderAllDayShader(shaderWidth, i);\n        }\n      }\n    }\n  },\n  _renderTopShader: function ($shader, height, width, i) {\n    this._$topShader = $(\"<div>\").addClass(DATE_TIME_SHADER_TOP_CLASS);\n    width && this._$topShader.width(width) && this._$topShader.height(height);\n\n    this._$topShader.css(\"marginTop\", this._getShaderTopOffset(i));\n\n    this._$topShader.css(\"left\", this._getShaderOffset(i, width));\n\n    $shader.append(this._$topShader);\n  },\n  _renderBottomShader: function ($shader, height, width, i) {\n    this._$bottomShader = $(\"<div>\").addClass(DATE_TIME_SHADER_BOTTOM_CLASS);\n    this._$bottomShader.width(width - this._workspace.getCellWidth()) && this._$bottomShader.height(height);\n\n    this._$bottomShader.css(\"left\", this._getShaderOffset(i, width - this._workspace.getCellWidth()));\n\n    $shader.append(this._$bottomShader);\n  },\n  _renderAllDayShader: function (shaderWidth, i) {\n    if (this._workspace.option(\"showAllDayPanel\")) {\n      this._$allDayIndicator = $(\"<div>\").addClass(DATE_TIME_SHADER_ALL_DAY_CLASS);\n\n      this._$allDayIndicator.height(this._workspace.getAllDayHeight());\n\n      this._$allDayIndicator.width(shaderWidth);\n\n      this._$allDayIndicator.css(\"left\", this._getShaderOffset(i, shaderWidth));\n\n      this._workspace._$allDayPanel.prepend(this._$allDayIndicator);\n    }\n  },\n  _getShaderOffset: function (i, width) {\n    return this._workspace.getGroupedStrategy().getShaderOffset(i, width);\n  },\n  _getShaderTopOffset: function (i) {\n    return this._workspace.getGroupedStrategy().getShaderTopOffset(i);\n  },\n  _getShaderHeight: function (i, width) {\n    return this._workspace.getGroupedStrategy().getShaderHeight();\n  },\n  _getShaderMaxHeight: function (i, width) {\n    return this._workspace.getGroupedStrategy().getShaderMaxHeight();\n  },\n  _getShaderWidth: function (i) {\n    return this._workspace.getGroupedStrategy().getShaderWidth(i);\n  },\n  clean: function () {\n    this.callBase();\n    this._workspace && this._workspace._$allDayPanel && this._workspace._$allDayPanel.find(\".\" + DATE_TIME_SHADER_ALL_DAY_CLASS).remove();\n  }\n});\nmodule.exports = VerticalCurrentTimeShader;","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/node_modules/devextreme/ui/scheduler/shaders/ui.scheduler.current_time_shader.vertical.js"],"names":["$","require","Shader","DATE_TIME_SHADER_ALL_DAY_CLASS","DATE_TIME_SHADER_TOP_CLASS","DATE_TIME_SHADER_BOTTOM_CLASS","VerticalCurrentTimeShader","inherit","_renderShader","shaderHeight","_getShaderHeight","maxHeight","_getShaderMaxHeight","renderSolidShader","_$shader","height","groupCount","_workspace","_getGroupCount","_renderTopShader","_$container","get","getBoundingClientRect","width","_renderAllDayShader","i","shaderWidth","_getShaderWidth","_renderBottomShader","$shader","_$topShader","addClass","css","_getShaderTopOffset","_getShaderOffset","append","_$bottomShader","getCellWidth","option","_$allDayIndicator","getAllDayHeight","_$allDayPanel","prepend","getGroupedStrategy","getShaderOffset","getShaderTopOffset","getShaderHeight","getShaderMaxHeight","getShaderWidth","clean","callBase","find","remove","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/shaders/ui.scheduler.current_time_shader.vertical.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../../core/renderer\");\r\nvar Shader = require(\"./ui.scheduler.current_time_shader\");\r\nvar DATE_TIME_SHADER_ALL_DAY_CLASS = \"dx-scheduler-date-time-shader-all-day\";\r\nvar DATE_TIME_SHADER_TOP_CLASS = \"dx-scheduler-date-time-shader-top\";\r\nvar DATE_TIME_SHADER_BOTTOM_CLASS = \"dx-scheduler-date-time-shader-bottom\";\r\nvar VerticalCurrentTimeShader = Shader.inherit({\r\n    _renderShader: function() {\r\n        var shaderHeight = this._getShaderHeight();\r\n        var maxHeight = this._getShaderMaxHeight();\r\n        var renderSolidShader = false;\r\n        if (shaderHeight > maxHeight) {\r\n            shaderHeight = maxHeight;\r\n            renderSolidShader = true\r\n        }\r\n        if (shaderHeight >= 0) {\r\n            this._$shader.height(shaderHeight);\r\n            var groupCount = this._workspace._getGroupCount() || 1;\r\n            if (renderSolidShader) {\r\n                this._renderTopShader(this._$shader, shaderHeight, this._$container.get(0).getBoundingClientRect().width, 0);\r\n                this._renderAllDayShader(this._$container.get(0).getBoundingClientRect().width, 0)\r\n            } else {\r\n                for (var i = 0; i < groupCount; i++) {\r\n                    var shaderWidth = this._getShaderWidth(i);\r\n                    this._renderTopShader(this._$shader, shaderHeight, shaderWidth, i);\r\n                    this._renderBottomShader(this._$shader, maxHeight - shaderHeight, shaderWidth, i);\r\n                    this._renderAllDayShader(shaderWidth, i)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _renderTopShader: function($shader, height, width, i) {\r\n        this._$topShader = $(\"<div>\").addClass(DATE_TIME_SHADER_TOP_CLASS);\r\n        width && this._$topShader.width(width) && this._$topShader.height(height);\r\n        this._$topShader.css(\"marginTop\", this._getShaderTopOffset(i));\r\n        this._$topShader.css(\"left\", this._getShaderOffset(i, width));\r\n        $shader.append(this._$topShader)\r\n    },\r\n    _renderBottomShader: function($shader, height, width, i) {\r\n        this._$bottomShader = $(\"<div>\").addClass(DATE_TIME_SHADER_BOTTOM_CLASS);\r\n        this._$bottomShader.width(width - this._workspace.getCellWidth()) && this._$bottomShader.height(height);\r\n        this._$bottomShader.css(\"left\", this._getShaderOffset(i, width - this._workspace.getCellWidth()));\r\n        $shader.append(this._$bottomShader)\r\n    },\r\n    _renderAllDayShader: function(shaderWidth, i) {\r\n        if (this._workspace.option(\"showAllDayPanel\")) {\r\n            this._$allDayIndicator = $(\"<div>\").addClass(DATE_TIME_SHADER_ALL_DAY_CLASS);\r\n            this._$allDayIndicator.height(this._workspace.getAllDayHeight());\r\n            this._$allDayIndicator.width(shaderWidth);\r\n            this._$allDayIndicator.css(\"left\", this._getShaderOffset(i, shaderWidth));\r\n            this._workspace._$allDayPanel.prepend(this._$allDayIndicator)\r\n        }\r\n    },\r\n    _getShaderOffset: function(i, width) {\r\n        return this._workspace.getGroupedStrategy().getShaderOffset(i, width)\r\n    },\r\n    _getShaderTopOffset: function(i) {\r\n        return this._workspace.getGroupedStrategy().getShaderTopOffset(i)\r\n    },\r\n    _getShaderHeight: function(i, width) {\r\n        return this._workspace.getGroupedStrategy().getShaderHeight()\r\n    },\r\n    _getShaderMaxHeight: function(i, width) {\r\n        return this._workspace.getGroupedStrategy().getShaderMaxHeight()\r\n    },\r\n    _getShaderWidth: function(i) {\r\n        return this._workspace.getGroupedStrategy().getShaderWidth(i)\r\n    },\r\n    clean: function() {\r\n        this.callBase();\r\n        this._workspace && this._workspace._$allDayPanel && this._workspace._$allDayPanel.find(\".\" + DATE_TIME_SHADER_ALL_DAY_CLASS).remove()\r\n    }\r\n});\r\nmodule.exports = VerticalCurrentTimeShader;\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Swizzle\\\\Desktop\\\\SE Project\\\\Application\\\\csh\\\\src\\\\components\\\\RemoveTrainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { removeTrainer } from '../store/courseActions';\nimport { Redirect } from 'react-router-dom';\n\nclass RemoveTrainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: this.props.location.state.course.id,\n      title: this.props.location.state.course.title,\n      description: this.props.location.state.course.description,\n      startDate: this.props.location.state.course.startDate,\n      startTime: this.props.location.state.course.startTime,\n      endDate: this.props.location.state.course.endDate,\n      endTime: this.props.location.state.course.endTime,\n      frequency: this.props.location.state.course.frequency,\n      skills: this.props.location.state.course.skills,\n      trainers: this.props.location.state.course.trainers,\n      trainer: '',\n      removable: false\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value,\n        removable: true\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.removable) {\n        this.props.removeTrainer(this.state);\n        this.props.history.push('/');\n      } else {\n        console.log(\"buster\");\n        this.props.history.push({\n          pathname: '/addtrainer',\n          state: {\n            course: this.state\n          }\n        });\n      }\n    };\n\n    this.getTrainers = users => {\n      var trainers = [];\n      users && users.forEach(user => {\n        if (user.userType === \"trainer\") {\n          trainers.push(user);\n        }\n      });\n      return trainers;\n    };\n  }\n\n  getAssignedTrainers(trainers, currentTrainers) {\n    var assigned = [];\n    currentTrainers.forEach(id => {\n      for (var i = 0; i < trainers.length; i++) {\n        if (trainers[i].id === id) {\n          assigned.push(trainers[i]);\n        }\n      }\n    });\n    return assigned;\n  }\n\n  getRemovable(currentTrainers) {\n    console.log(currentTrainers.length);\n\n    if (currentTrainers.length === 1 || currentTrainers.length === 0) {\n      return 'You must have at least two trainers to remove';\n    } else {\n      return '';\n    }\n  }\n\n  redirect(e, course) {\n    // const course = this.state\n    return React.createElement(Redirect, {\n      to: {\n        pathname: '/addtrainer',\n        state: {\n          course: course\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const {\n      auth,\n      users,\n      courses\n    } = this.props;\n    const course = this.props.location.state.course;\n    const trainers = this.getTrainers(users);\n    const currentTrainers = this.getAssignedTrainers(trainers, this.state.trainers);\n    const removable = this.getRemovable(currentTrainers);\n    if (!auth.uid) return React.createElement(Redirect, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Title: \", this.state.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Description: \", this.state.description), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Frequency: \", this.state.frequency), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Start: \", this.state.startDate + \" \" + this.state.startTime), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"End: \", this.state.endDate + \" \" + this.state.endTime), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Assigned Trainers: \"), currentTrainers && currentTrainers.map(trainer => {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, trainer.firstName + \" \" + trainer.lastName);\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Created by: \", course.author), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"grey-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Remove Trainer\"), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, removable === 'You must have at least two trainers to remove' && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, removable)), removable === '' && React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Choose a Trainer\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"trainer\",\n      className: \"browser-default\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, removable), currentTrainers.map(trainer => {\n      return React.createElement(\"option\", {\n        value: trainer.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, trainer.firstName + \" \" + trainer.lastName);\n    }))), removable === 'You must have at least two trainers to remove' && React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn blue lighten-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Add Trainer\")), removable === '' && React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn blue lighten-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Remove Trainer\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    users: state.firestore.ordered.users,\n    courses: state.firestore.ordered.courses\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeTrainer: course => dispatch(removeTrainer(course))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveTrainer);","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/src/components/RemoveTrainer.js"],"names":["React","Component","connect","removeTrainer","Redirect","RemoveTrainer","state","id","props","location","course","title","description","startDate","startTime","endDate","endTime","frequency","skills","trainers","trainer","removable","handleChange","e","setState","target","value","handleSubmit","preventDefault","history","push","console","log","pathname","getTrainers","users","forEach","user","userType","getAssignedTrainers","currentTrainers","assigned","i","length","getRemovable","redirect","render","auth","courses","uid","map","firstName","lastName","author","mapStateToProps","firebase","firestore","ordered","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {removeTrainer} from '../store/courseActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass RemoveTrainer extends Component {\r\n    state = {\r\n        id: this.props.location.state.course.id,\r\n        title: this.props.location.state.course.title,\r\n        description: this.props.location.state.course.description,\r\n        startDate: this.props.location.state.course.startDate,\r\n        startTime: this.props.location.state.course.startTime,\r\n        endDate: this.props.location.state.course.endDate,\r\n        endTime: this.props.location.state.course.endTime,\r\n        frequency: this.props.location.state.course.frequency,\r\n        skills: this.props.location.state.course.skills,\r\n        trainers: this.props.location.state.course.trainers,\r\n        trainer: '',\r\n        removable: false\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.id]: e.target.value, \r\n          removable: true\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.removable){\r\n            this.props.removeTrainer(this.state)\r\n            this.props.history.push('/')\r\n        }\r\n        else{\r\n            console.log(\"buster\")\r\n            this.props.history.push({pathname: '/addtrainer', state: {course: this.state}})\r\n        }\r\n    }\r\n    getTrainers = (users) =>{\r\n        var trainers = []\r\n        users && users.forEach(user => {\r\n            if(user.userType === \"trainer\"){\r\n                trainers.push(user)\r\n            }\r\n        })\r\n        return trainers\r\n    }\r\n    getAssignedTrainers(trainers, currentTrainers){\r\n        var assigned = []\r\n        currentTrainers.forEach(id => {\r\n            for(var i=0; i< trainers.length; i++){\r\n                if (trainers[i].id === id){assigned.push(trainers[i])}\r\n            }\r\n        });\r\n        return assigned\r\n    }\r\n    getRemovable(currentTrainers){\r\n        console.log(currentTrainers.length)\r\n        if(currentTrainers.length === 1 || currentTrainers.length === 0){\r\n            return 'You must have at least two trainers to remove'\r\n        }\r\n        else{\r\n            return ''\r\n        }\r\n    }\r\n    redirect(e, course){\r\n        // const course = this.state\r\n        return(<Redirect to={{\r\n            pathname: '/addtrainer',\r\n            state: { course: course}\r\n            }}\r\n        />)\r\n    }\r\n    render() {\r\n        const {auth, users, courses} = this.props;\r\n        const course = this.props.location.state.course\r\n        const trainers = this.getTrainers(users) \r\n        const currentTrainers = this.getAssignedTrainers(trainers, this.state.trainers)\r\n        const removable = this.getRemovable(currentTrainers)\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">Title: {this.state.title}</span>\r\n                        <p>Description: {this.state.description}</p>\r\n                        <p>Frequency: {this.state.frequency}</p><br/>\r\n                        <p>Start: {this.state.startDate+\" \"+this.state.startTime}</p>\r\n                        <p>End: {this.state.endDate+\" \"+this.state.endTime}</p><br/>\r\n                        <p>Assigned Trainers: </p>\r\n                        {currentTrainers && currentTrainers.map(trainer => {\r\n                            return(\r\n                                <p>{trainer.firstName + \" \" + trainer.lastName}</p>\r\n                            )\r\n                        })}<br/>\r\n                        <p>Created by: {course.author}</p><br/>\r\n                    </div>\r\n                </div>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Remove Trainer</h5>\r\n                    <div className=\"input-field\">\r\n                        {removable === 'You must have at least two trainers to remove' &&\r\n                        <p>{removable}</p>}\r\n                    </div>\r\n                    {removable === '' &&\r\n                    <div className=\"input-field\">\r\n                        <label>Choose a Trainer</label><br/><br/>\r\n                        <select id=\"trainer\" className=\"browser-default\" onChange={this.handleChange} required>\r\n                            <option value=\"\" disabled selected>{removable}</option>\r\n                            {currentTrainers.map(trainer => {\r\n                                return (\r\n                                    <option value={trainer.id}>{trainer.firstName + \" \" + trainer.lastName}</option>\r\n                                )\r\n                            })}\r\n                        </select> \r\n                    </div>}\r\n\r\n                    {removable === 'You must have at least two trainers to remove' &&\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn blue lighten-1\">Add Trainer</button>\r\n                        </div>\r\n                    }\r\n                    {removable === '' &&\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn blue lighten-1\">Remove Trainer</button>\r\n                        </div>\r\n                    }\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth,\r\n        users: state.firestore.ordered.users, \r\n        courses: state.firestore.ordered.courses\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeTrainer: (course) => dispatch(removeTrainer(course))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveTrainer)\r\n"]},"metadata":{},"sourceType":"module"}
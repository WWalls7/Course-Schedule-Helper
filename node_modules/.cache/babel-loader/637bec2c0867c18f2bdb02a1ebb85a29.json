{"ast":null,"code":"export const createCourse = course => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    //make async call to DB\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('courses').add({\n      title: course.title,\n      description: course.description,\n      startDate: course.startDate,\n      startTime: course.startTime,\n      endDate: course.endDate,\n      endTime: course.endTime,\n      frequency: course.frequency,\n      trainers: [course.trainers],\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({\n        type: 'CREATE_COURSE',\n        course\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'CREATE_COURSE_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const updateCourse = course => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    //make async call to DB\n    const firestore = getFirestore();\n    firestore.collection('courses').doc(course.id).update({\n      title: course.title,\n      description: course.description,\n      frequency: course.frequency\n    }).then(() => {\n      dispatch({\n        type: 'UPDATE_COURSE',\n        course\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'UPDATE_COURSE_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const addTrainer = course => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    //make async call to DB\n    const firestore = getFirestore(); //console.log(course.startDate)\n\n    firestore.collection('courses').doc(course.id).update({\n      trainers: [...course.trainers, course.newTrainer],\n      startDate: course.startDate,\n      startTime: course.startTime,\n      endDate: course.endDate,\n      endTime: course.endTime\n    }).then(() => {\n      dispatch({\n        type: 'ADD_TRAINER',\n        course\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'ADD_TRAINER_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const removeTrainer = course => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    //make async call to DB\n    const firestore = getFirestore();\n    var trainers = [...course.trainers];\n    var index = trainers.indexOf(course.trainer);\n\n    if (index !== -1) {\n      trainers.splice(index, 1);\n    }\n\n    firestore.collection('courses').doc(course.id).update({\n      trainers: trainers\n    }).then(() => {\n      dispatch({\n        type: 'UPDATE_COURSE',\n        course\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'UPDATE_COURSE_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const deleteCourse = course => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    //make async call to DB\n    const firestore = getFirestore();\n    var trainers = [...course.trainers];\n    var index = trainers.indexOf(course.trainer);\n\n    if (index !== -1) {\n      trainers.splice(index, 1);\n    }\n\n    firestore.collection('courses').doc(course.id).update({\n      trainers: trainers\n    }).then(() => {\n      dispatch({\n        type: 'UPDATE_COURSE',\n        course\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'UPDATE_COURSE_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/src/store/courseActions.js"],"names":["createCourse","course","dispatch","getState","getFirebase","getFirestore","firestore","profile","firebase","authorId","auth","uid","collection","add","title","description","startDate","startTime","endDate","endTime","frequency","trainers","authorFirstName","firstName","authorLastName","lastName","createdAt","Date","then","type","catch","err","updateCourse","doc","id","update","addTrainer","newTrainer","removeTrainer","index","indexOf","trainer","splice","deleteCourse"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,MAAD,IAAY;AACpC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAArB,KAAqD;AACxD;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACA,UAAME,OAAO,GAAGJ,QAAQ,GAAGK,QAAX,CAAoBD,OAApC;AACA,UAAME,QAAQ,GAAGN,QAAQ,GAAGK,QAAX,CAAoBE,IAApB,CAAyBC,GAA1C;AACAL,IAAAA,SAAS,CAACM,UAAV,CAAqB,SAArB,EAAgCC,GAAhC,CAAoC;AAChCC,MAAAA,KAAK,EAAEb,MAAM,CAACa,KADkB;AAEhCC,MAAAA,WAAW,EAAEd,MAAM,CAACc,WAFY;AAGhCC,MAAAA,SAAS,EAAEf,MAAM,CAACe,SAHc;AAIhCC,MAAAA,SAAS,EAAEhB,MAAM,CAACgB,SAJc;AAKhCC,MAAAA,OAAO,EAAEjB,MAAM,CAACiB,OALgB;AAMhCC,MAAAA,OAAO,EAAElB,MAAM,CAACkB,OANgB;AAOhCC,MAAAA,SAAS,EAAEnB,MAAM,CAACmB,SAPc;AAQhCC,MAAAA,QAAQ,EAAE,CAACpB,MAAM,CAACoB,QAAR,CARsB;AAShCC,MAAAA,eAAe,EAAEf,OAAO,CAACgB,SATO;AAUhCC,MAAAA,cAAc,EAAEjB,OAAO,CAACkB,QAVQ;AAWhChB,MAAAA,QAAQ,EAAEA,QAXsB;AAYhCiB,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAZqB,KAApC,EAaGC,IAbH,CAaQ,MAAM;AACV1B,MAAAA,QAAQ,CAAC;AAAE2B,QAAAA,IAAI,EAAE,eAAR;AAAyB5B,QAAAA;AAAzB,OAAD,CAAR;AACH,KAfD,EAeG6B,KAfH,CAeUC,GAAD,IAAS;AACd7B,MAAAA,QAAQ,CAAC;AAAE2B,QAAAA,IAAI,EAAE,qBAAR;AAA+BE,QAAAA;AAA/B,OAAD,CAAR;AACH,KAjBD;AAkBH,GAvBD;AAwBH,CAzBM;AA2BP,OAAO,MAAMC,YAAY,GAAI/B,MAAD,IAAY;AACpC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAArB,KAAqD;AACxD;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACM,UAAV,CAAqB,SAArB,EAAgCqB,GAAhC,CAAoChC,MAAM,CAACiC,EAA3C,EAA+CC,MAA/C,CAAsD;AAClDrB,MAAAA,KAAK,EAAEb,MAAM,CAACa,KADoC;AAElDC,MAAAA,WAAW,EAAEd,MAAM,CAACc,WAF8B;AAGlDK,MAAAA,SAAS,EAAEnB,MAAM,CAACmB;AAHgC,KAAtD,EAIGQ,IAJH,CAIQ,MAAM;AACV1B,MAAAA,QAAQ,CAAC;AAAE2B,QAAAA,IAAI,EAAE,eAAR;AAAyB5B,QAAAA;AAAzB,OAAD,CAAR;AACH,KAND,EAMG6B,KANH,CAMUC,GAAD,IAAS;AACd7B,MAAAA,QAAQ,CAAC;AAAE2B,QAAAA,IAAI,EAAE,qBAAR;AAA+BE,QAAAA;AAA/B,OAAD,CAAR;AACH,KARD;AASH,GAZD;AAaH,CAdM;AAgBP,OAAO,MAAMK,UAAU,GAAInC,MAAD,IAAY;AAClC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAArB,KAAqD;AACxD;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B,CAFwD,CAGxD;;AACAC,IAAAA,SAAS,CAACM,UAAV,CAAqB,SAArB,EAAgCqB,GAAhC,CAAoChC,MAAM,CAACiC,EAA3C,EAA+CC,MAA/C,CAAsD;AAClDd,MAAAA,QAAQ,EAAE,CAAC,GAAGpB,MAAM,CAACoB,QAAX,EAAqBpB,MAAM,CAACoC,UAA5B,CADwC;AAElDrB,MAAAA,SAAS,EAAEf,MAAM,CAACe,SAFgC;AAGlDC,MAAAA,SAAS,EAAEhB,MAAM,CAACgB,SAHgC;AAIlDC,MAAAA,OAAO,EAAEjB,MAAM,CAACiB,OAJkC;AAKlDC,MAAAA,OAAO,EAAElB,MAAM,CAACkB;AALkC,KAAtD,EAMGS,IANH,CAMQ,MAAM;AACV1B,MAAAA,QAAQ,CAAC;AAAE2B,QAAAA,IAAI,EAAE,aAAR;AAAuB5B,QAAAA;AAAvB,OAAD,CAAR;AACH,KARD,EAQG6B,KARH,CAQUC,GAAD,IAAS;AACd7B,MAAAA,QAAQ,CAAC;AAAE2B,QAAAA,IAAI,EAAE,mBAAR;AAA6BE,QAAAA;AAA7B,OAAD,CAAR;AACH,KAVD;AAWH,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAMO,aAAa,GAAIrC,MAAD,IAAY;AACrC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAArB,KAAqD;AACxD;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACA,QAAIgB,QAAQ,GAAG,CAAC,GAAGpB,MAAM,CAACoB,QAAX,CAAf;AACA,QAAIkB,KAAK,GAAGlB,QAAQ,CAACmB,OAAT,CAAiBvC,MAAM,CAACwC,OAAxB,CAAZ;;AACA,QAAIF,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdlB,MAAAA,QAAQ,CAACqB,MAAT,CAAgBH,KAAhB,EAAuB,CAAvB;AACH;;AACDjC,IAAAA,SAAS,CAACM,UAAV,CAAqB,SAArB,EAAgCqB,GAAhC,CAAoChC,MAAM,CAACiC,EAA3C,EAA+CC,MAA/C,CAAsD;AAClDd,MAAAA,QAAQ,EAAEA;AADwC,KAAtD,EAEGO,IAFH,CAEQ,MAAM;AACV1B,MAAAA,QAAQ,CAAC;AAAE2B,QAAAA,IAAI,EAAE,eAAR;AAAyB5B,QAAAA;AAAzB,OAAD,CAAR;AACH,KAJD,EAIG6B,KAJH,CAIUC,GAAD,IAAS;AACd7B,MAAAA,QAAQ,CAAC;AAAE2B,QAAAA,IAAI,EAAE,qBAAR;AAA+BE,QAAAA;AAA/B,OAAD,CAAR;AACH,KAND;AAOH,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAMY,YAAY,GAAI1C,MAAD,IAAY;AACpC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAArB,KAAqD;AACxD;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACA,QAAIgB,QAAQ,GAAG,CAAC,GAAGpB,MAAM,CAACoB,QAAX,CAAf;AACA,QAAIkB,KAAK,GAAGlB,QAAQ,CAACmB,OAAT,CAAiBvC,MAAM,CAACwC,OAAxB,CAAZ;;AACA,QAAIF,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdlB,MAAAA,QAAQ,CAACqB,MAAT,CAAgBH,KAAhB,EAAuB,CAAvB;AACH;;AACDjC,IAAAA,SAAS,CAACM,UAAV,CAAqB,SAArB,EAAgCqB,GAAhC,CAAoChC,MAAM,CAACiC,EAA3C,EAA+CC,MAA/C,CAAsD;AAClDd,MAAAA,QAAQ,EAAEA;AADwC,KAAtD,EAEGO,IAFH,CAEQ,MAAM;AACV1B,MAAAA,QAAQ,CAAC;AAAE2B,QAAAA,IAAI,EAAE,eAAR;AAAyB5B,QAAAA;AAAzB,OAAD,CAAR;AACH,KAJD,EAIG6B,KAJH,CAIUC,GAAD,IAAS;AACd7B,MAAAA,QAAQ,CAAC;AAAE2B,QAAAA,IAAI,EAAE,qBAAR;AAA+BE,QAAAA;AAA/B,OAAD,CAAR;AACH,KAND;AAOH,GAfD;AAgBH,CAjBM","sourcesContent":["export const createCourse = (course) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make async call to DB\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid\r\n        firestore.collection('courses').add({\r\n            title: course.title,\r\n            description: course.description,\r\n            startDate: course.startDate,\r\n            startTime: course.startTime,\r\n            endDate: course.endDate,\r\n            endTime: course.endTime,\r\n            frequency: course.frequency,\r\n            trainers: [course.trainers],\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_COURSE', course });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_COURSE_ERROR', err}); \r\n        })\r\n    }\r\n};\r\n\r\nexport const updateCourse = (course) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make async call to DB\r\n        const firestore = getFirestore();\r\n        firestore.collection('courses').doc(course.id).update({\r\n            title: course.title,\r\n            description: course.description,\r\n            frequency: course.frequency\r\n        }).then(() => {\r\n            dispatch({ type: 'UPDATE_COURSE', course });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'UPDATE_COURSE_ERROR', err}); \r\n        })\r\n    }\r\n};\r\n\r\nexport const addTrainer = (course) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make async call to DB\r\n        const firestore = getFirestore();\r\n        //console.log(course.startDate)\r\n        firestore.collection('courses').doc(course.id).update({\r\n            trainers: [...course.trainers, course.newTrainer],\r\n            startDate: course.startDate,\r\n            startTime: course.startTime,\r\n            endDate: course.endDate,\r\n            endTime: course.endTime\r\n        }).then(() => {\r\n            dispatch({ type: 'ADD_TRAINER', course });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'ADD_TRAINER_ERROR', err}); \r\n        })\r\n    }\r\n};\r\n\r\nexport const removeTrainer = (course) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make async call to DB\r\n        const firestore = getFirestore();\r\n        var trainers = [...course.trainers]\r\n        var index = trainers.indexOf(course.trainer)\r\n        if (index !== -1) {\r\n            trainers.splice(index, 1);\r\n        }\r\n        firestore.collection('courses').doc(course.id).update({\r\n            trainers: trainers\r\n        }).then(() => {\r\n            dispatch({ type: 'UPDATE_COURSE', course });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'UPDATE_COURSE_ERROR', err}); \r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteCourse = (course) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make async call to DB\r\n        const firestore = getFirestore();\r\n        var trainers = [...course.trainers]\r\n        var index = trainers.indexOf(course.trainer)\r\n        if (index !== -1) {\r\n            trainers.splice(index, 1);\r\n        }\r\n        firestore.collection('courses').doc(course.id).update({\r\n            trainers: trainers\r\n        }).then(() => {\r\n            dispatch({ type: 'UPDATE_COURSE', course });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'UPDATE_COURSE_ERROR', err}); \r\n        })\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export const signIn = credentials => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};\nexport const signUp = newUser => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(resp => {\n      if (newUser.userType === \"trainer\") {\n        return firestore.collection('users').doc(resp.user.uid).set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0],\n          userType: newUser.userType,\n          skills: newUser.skills,\n          email: newUser.email,\n          phoneNo: newUser.phoneNo\n        });\n      } else {\n        return firestore.collection('users').doc(resp.user.uid).set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0],\n          userType: newUser.userType,\n          email: newUser.email,\n          phoneNo: newUser.phoneNo\n        });\n      }\n    }).then(() => {\n      dispatch({\n        type: 'SIGNUP_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'SIGNUP_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const updateProfile = user => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const userInfo = '';\n\n    if (user.userType === \"trainer\") {\n      userInfo = {\n        firstName: user.firstName,\n        lastName: user.lastName,\n        skills: user.skills,\n        phoneNo: user.phoneNo\n      };\n    } else {\n      userInfo = {\n        firstName: user.firstName,\n        lastName: user.lastName,\n        phoneNo: user.phoneNo\n      };\n    }\n\n    firestore.collection('users').doc(user.id).update({\n      userInfo\n    }).then(() => {\n      dispatch({\n        type: 'UPDATE_PROFILE',\n        course\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'UPDATE_PROFILE_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/src/store/authActions.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","signOut","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","userType","collection","doc","user","uid","set","firstName","lastName","initials","skills","phoneNo","updateProfile","userInfo","id","update","course"],"mappings":"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","sourcesContent":["export const signIn = (credentials) => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email, \r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            if (newUser.userType === \"trainer\"){\r\n                return firestore.collection('users').doc(resp.user.uid).set({\r\n                    firstName: newUser.firstName,\r\n                    lastName: newUser.lastName,\r\n                    initials: newUser.firstName[0] + newUser.lastName[0],\r\n                    userType: newUser.userType,\r\n                    skills: newUser.skills,\r\n                    email: newUser.email,\r\n                    phoneNo: newUser.phoneNo\r\n                })\r\n            }\r\n            else {\r\n                return firestore.collection('users').doc(resp.user.uid).set({\r\n                    firstName: newUser.firstName,\r\n                    lastName: newUser.lastName,\r\n                    initials: newUser.firstName[0] + newUser.lastName[0],\r\n                    userType: newUser.userType,\r\n                    email: newUser.email,\r\n                    phoneNo: newUser.phoneNo\r\n                })\r\n            }\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProfile = (user) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        const userInfo = ''\r\n        if (user.userType === \"trainer\"){\r\n            userInfo = {firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            skills: user.skills,\r\n            phoneNo: user.phoneNo}\r\n        }\r\n        else {\r\n            userInfo= {firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            phoneNo: user.phoneNo}\r\n        }\r\n        firestore.collection('users').doc(user.id).update({\r\n            userInfo\r\n        }).then(() => {\r\n            dispatch({ type: 'UPDATE_PROFILE', course });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'UPDATE_PROFILE_ERROR', err}); \r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
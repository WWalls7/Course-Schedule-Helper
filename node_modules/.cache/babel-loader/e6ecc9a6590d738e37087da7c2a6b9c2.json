{"ast":null,"code":"/**\r\n * DevExtreme (ui/text_area.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _events_engine = require(\"../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _common = require(\"../core/utils/common\");\n\nvar _window = require(\"../core/utils/window\");\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _component_registrator = require(\"../core/component_registrator\");\n\nvar _component_registrator2 = _interopRequireDefault(_component_registrator);\n\nvar _extend = require(\"../core/utils/extend\");\n\nvar _type = require(\"../core/utils/type\");\n\nvar _utils = require(\"../events/utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _pointer = require(\"../events/pointer\");\n\nvar _pointer2 = _interopRequireDefault(_pointer);\n\nvar _uiEventsEmitterGesture = require(\"../ui/scroll_view/ui.events.emitter.gesture.scroll\");\n\nvar _uiEventsEmitterGesture2 = _interopRequireDefault(_uiEventsEmitterGesture);\n\nvar _size = require(\"../core/utils/size\");\n\nvar _size2 = _interopRequireDefault(_size);\n\nvar _utils3 = require(\"./text_box/utils.scroll\");\n\nvar _text_box = require(\"./text_box\");\n\nvar _text_box2 = _interopRequireDefault(_text_box);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar TEXTAREA_CLASS = \"dx-textarea\";\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\nvar TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE = \"dx-texteditor-input-auto-resize\";\n\nvar TextArea = _text_box2.default.inherit({\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      spellcheck: true,\n      minHeight: void 0,\n      maxHeight: void 0,\n      autoResizeEnabled: false\n    });\n  },\n  _initMarkup: function () {\n    this.$element().addClass(TEXTAREA_CLASS);\n    this.callBase();\n    this.setAria(\"multiline\", \"true\");\n  },\n  _renderContentImpl: function () {\n    this._updateInputHeight();\n\n    this.callBase();\n  },\n  _renderInput: function () {\n    this.callBase();\n\n    this._renderScrollHandler();\n  },\n  _createInput: function () {\n    var $input = (0, _renderer2.default)(\"<textarea>\");\n\n    this._applyInputAttributes($input, this.option(\"inputAttr\"));\n\n    this._updateInputAutoResizeAppearance($input);\n\n    return $input;\n  },\n  _applyInputAttributes: function ($input, customAttributes) {\n    $input.attr(customAttributes).addClass(TEXTEDITOR_INPUT_CLASS);\n  },\n  _renderScrollHandler: function () {\n    var _this = this;\n\n    this._eventY = 0;\n\n    var $input = this._input();\n\n    var initScrollData = {\n      validate: function (e) {\n        if (_utils2.default.isDxMouseWheelEvent(e) && (0, _renderer2.default)(e.target).is(_this._input())) {\n          if ((0, _utils3.allowScroll)($input, -e.delta, e.shiftKey)) {\n            e._needSkipEvent = true;\n            return true;\n          }\n\n          return false;\n        }\n      }\n    };\n\n    _events_engine2.default.on($input, _utils2.default.addNamespace(_uiEventsEmitterGesture2.default.init, this.NAME), initScrollData, _common.noop);\n\n    _events_engine2.default.on($input, _utils2.default.addNamespace(_pointer2.default.down, this.NAME), this._pointerDownHandler.bind(this));\n\n    _events_engine2.default.on($input, _utils2.default.addNamespace(_pointer2.default.move, this.NAME), this._pointerMoveHandler.bind(this));\n  },\n  _pointerDownHandler: function (e) {\n    this._eventY = _utils2.default.eventData(e).y;\n  },\n  _pointerMoveHandler: function (e) {\n    var currentEventY = _utils2.default.eventData(e).y;\n\n    var delta = this._eventY - currentEventY;\n\n    if ((0, _utils3.allowScroll)(this._input(), delta)) {\n      e.isScrollingEvent = true;\n      e.stopPropagation();\n    }\n\n    this._eventY = currentEventY;\n  },\n  _renderDimensions: function () {\n    var $element = this.$element();\n    var element = $element.get(0);\n\n    var width = this._getOptionValue(\"width\", element);\n\n    var height = this._getOptionValue(\"height\", element);\n\n    var minHeight = this.option(\"minHeight\");\n    var maxHeight = this.option(\"maxHeight\");\n    $element.css({\n      minHeight: void 0 !== minHeight ? minHeight : \"\",\n      maxHeight: void 0 !== maxHeight ? maxHeight : \"\",\n      width: width,\n      height: height\n    });\n  },\n  _resetDimensions: function () {\n    this.$element().css({\n      height: \"\",\n      minHeight: \"\",\n      maxHeight: \"\"\n    });\n  },\n  _renderEvents: function () {\n    if (this.option(\"autoResizeEnabled\")) {\n      _events_engine2.default.on(this._input(), _utils2.default.addNamespace(\"input paste\", this.NAME), this._updateInputHeight.bind(this));\n    }\n\n    this.callBase();\n  },\n  _refreshEvents: function () {\n    _events_engine2.default.off(this._input(), _utils2.default.addNamespace(\"input paste\", this.NAME));\n\n    this.callBase();\n  },\n  _getHeightDifference: function ($input) {\n    return _size2.default.getVerticalOffsets(this._$element.get(0), false) + _size2.default.getVerticalOffsets(this._$textEditorContainer.get(0), false) + _size2.default.getVerticalOffsets(this._$textEditorInputContainer.get(0), false) + _size2.default.getElementBoxParams(\"height\", _window2.default.getWindow().getComputedStyle($input.get(0))).margin;\n  },\n  _updateInputHeight: function () {\n    var $input = this._input();\n\n    var autoHeightResizing = void 0 === this.option(\"height\") && this.option(\"autoResizeEnabled\");\n\n    if (!autoHeightResizing) {\n      $input.css(\"height\", \"\");\n      return;\n    } else {\n      this._resetDimensions();\n\n      this._$element.css(\"height\", this._$element.outerHeight());\n    }\n\n    $input.css(\"height\", 0);\n\n    var heightDifference = this._getHeightDifference($input);\n\n    this._renderDimensions();\n\n    var minHeight = this._getBoundaryHeight(\"minHeight\");\n\n    var maxHeight = this._getBoundaryHeight(\"maxHeight\");\n\n    var inputHeight = $input[0].scrollHeight;\n\n    if (void 0 !== minHeight) {\n      inputHeight = Math.max(inputHeight, minHeight - heightDifference);\n    }\n\n    if (void 0 !== maxHeight) {\n      var adjustedMaxHeight = maxHeight - heightDifference;\n      var needScroll = inputHeight > adjustedMaxHeight;\n      inputHeight = Math.min(inputHeight, adjustedMaxHeight);\n\n      this._updateInputAutoResizeAppearance($input, !needScroll);\n    }\n\n    $input.css(\"height\", inputHeight);\n\n    if (autoHeightResizing) {\n      this._$element.css(\"height\", \"auto\");\n    }\n  },\n  _getBoundaryHeight: function (optionName) {\n    var boundaryValue = this.option(optionName);\n\n    if ((0, _type.isDefined)(boundaryValue)) {\n      return \"number\" === typeof boundaryValue ? boundaryValue : _size2.default.parseHeight(boundaryValue, this._$textEditorContainer.get(0));\n    }\n  },\n  _renderInputType: _common.noop,\n  _visibilityChanged: function (visible) {\n    if (visible) {\n      this._updateInputHeight();\n    }\n  },\n  _updateInputAutoResizeAppearance: function ($input, isAutoResizeEnabled) {\n    if ($input) {\n      var autoResizeEnabled = (0, _common.ensureDefined)(isAutoResizeEnabled, this.option(\"autoResizeEnabled\"));\n      $input.toggleClass(TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE, autoResizeEnabled);\n    }\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"autoResizeEnabled\":\n        this._updateInputAutoResizeAppearance(this._input(), args.value);\n\n        this._refreshEvents();\n\n        this._updateInputHeight();\n\n        break;\n\n      case \"value\":\n      case \"height\":\n        this.callBase(args);\n\n        this._updateInputHeight();\n\n        break;\n\n      case \"minHeight\":\n      case \"maxHeight\":\n        this._renderDimensions();\n\n        this._updateInputHeight();\n\n        break;\n\n      case \"visible\":\n        this.callBase(args);\n        args.value && this._updateInputHeight();\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\n\n(0, _component_registrator2.default)(\"dxTextArea\", TextArea);\nmodule.exports = TextArea;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/node_modules/devextreme/ui/text_area.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_events_engine","_events_engine2","_common","_window","_window2","_component_registrator","_component_registrator2","_extend","_type","_utils","_utils2","_pointer","_pointer2","_uiEventsEmitterGesture","_uiEventsEmitterGesture2","_size","_size2","_utils3","_text_box","_text_box2","obj","__esModule","TEXTAREA_CLASS","TEXTEDITOR_INPUT_CLASS","TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE","TextArea","default","inherit","_getDefaultOptions","extend","callBase","spellcheck","minHeight","maxHeight","autoResizeEnabled","_initMarkup","$element","addClass","setAria","_renderContentImpl","_updateInputHeight","_renderInput","_renderScrollHandler","_createInput","$input","_applyInputAttributes","option","_updateInputAutoResizeAppearance","customAttributes","attr","_this","_eventY","_input","initScrollData","validate","e","isDxMouseWheelEvent","target","is","allowScroll","delta","shiftKey","_needSkipEvent","on","addNamespace","init","NAME","noop","down","_pointerDownHandler","bind","move","_pointerMoveHandler","eventData","y","currentEventY","isScrollingEvent","stopPropagation","_renderDimensions","element","get","width","_getOptionValue","height","css","_resetDimensions","_renderEvents","_refreshEvents","off","_getHeightDifference","getVerticalOffsets","_$element","_$textEditorContainer","_$textEditorInputContainer","getElementBoxParams","getWindow","getComputedStyle","margin","autoHeightResizing","outerHeight","heightDifference","_getBoundaryHeight","inputHeight","scrollHeight","Math","max","adjustedMaxHeight","needScroll","min","optionName","boundaryValue","isDefined","parseHeight","_renderInputType","_visibilityChanged","visible","isAutoResizeEnabled","ensureDefined","toggleClass","_optionChanged","args","name","value","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/text_area.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _events_engine = require(\"../events/core/events_engine\");\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nvar _common = require(\"../core/utils/common\");\r\nvar _window = require(\"../core/utils/window\");\r\nvar _window2 = _interopRequireDefault(_window);\r\nvar _component_registrator = require(\"../core/component_registrator\");\r\nvar _component_registrator2 = _interopRequireDefault(_component_registrator);\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _utils = require(\"../events/utils\");\r\nvar _utils2 = _interopRequireDefault(_utils);\r\nvar _pointer = require(\"../events/pointer\");\r\nvar _pointer2 = _interopRequireDefault(_pointer);\r\nvar _uiEventsEmitterGesture = require(\"../ui/scroll_view/ui.events.emitter.gesture.scroll\");\r\nvar _uiEventsEmitterGesture2 = _interopRequireDefault(_uiEventsEmitterGesture);\r\nvar _size = require(\"../core/utils/size\");\r\nvar _size2 = _interopRequireDefault(_size);\r\nvar _utils3 = require(\"./text_box/utils.scroll\");\r\nvar _text_box = require(\"./text_box\");\r\nvar _text_box2 = _interopRequireDefault(_text_box);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TEXTAREA_CLASS = \"dx-textarea\";\r\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\r\nvar TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE = \"dx-texteditor-input-auto-resize\";\r\nvar TextArea = _text_box2.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            spellcheck: true,\r\n            minHeight: void 0,\r\n            maxHeight: void 0,\r\n            autoResizeEnabled: false\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(TEXTAREA_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"multiline\", \"true\")\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._updateInputHeight();\r\n        this.callBase()\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._renderScrollHandler()\r\n    },\r\n    _createInput: function() {\r\n        var $input = (0, _renderer2.default)(\"<textarea>\");\r\n        this._applyInputAttributes($input, this.option(\"inputAttr\"));\r\n        this._updateInputAutoResizeAppearance($input);\r\n        return $input\r\n    },\r\n    _applyInputAttributes: function($input, customAttributes) {\r\n        $input.attr(customAttributes).addClass(TEXTEDITOR_INPUT_CLASS)\r\n    },\r\n    _renderScrollHandler: function() {\r\n        var _this = this;\r\n        this._eventY = 0;\r\n        var $input = this._input();\r\n        var initScrollData = {\r\n            validate: function(e) {\r\n                if (_utils2.default.isDxMouseWheelEvent(e) && (0, _renderer2.default)(e.target).is(_this._input())) {\r\n                    if ((0, _utils3.allowScroll)($input, -e.delta, e.shiftKey)) {\r\n                        e._needSkipEvent = true;\r\n                        return true\r\n                    }\r\n                    return false\r\n                }\r\n            }\r\n        };\r\n        _events_engine2.default.on($input, _utils2.default.addNamespace(_uiEventsEmitterGesture2.default.init, this.NAME), initScrollData, _common.noop);\r\n        _events_engine2.default.on($input, _utils2.default.addNamespace(_pointer2.default.down, this.NAME), this._pointerDownHandler.bind(this));\r\n        _events_engine2.default.on($input, _utils2.default.addNamespace(_pointer2.default.move, this.NAME), this._pointerMoveHandler.bind(this))\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        this._eventY = _utils2.default.eventData(e).y\r\n    },\r\n    _pointerMoveHandler: function(e) {\r\n        var currentEventY = _utils2.default.eventData(e).y;\r\n        var delta = this._eventY - currentEventY;\r\n        if ((0, _utils3.allowScroll)(this._input(), delta)) {\r\n            e.isScrollingEvent = true;\r\n            e.stopPropagation()\r\n        }\r\n        this._eventY = currentEventY\r\n    },\r\n    _renderDimensions: function() {\r\n        var $element = this.$element();\r\n        var element = $element.get(0);\r\n        var width = this._getOptionValue(\"width\", element);\r\n        var height = this._getOptionValue(\"height\", element);\r\n        var minHeight = this.option(\"minHeight\");\r\n        var maxHeight = this.option(\"maxHeight\");\r\n        $element.css({\r\n            minHeight: void 0 !== minHeight ? minHeight : \"\",\r\n            maxHeight: void 0 !== maxHeight ? maxHeight : \"\",\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _resetDimensions: function() {\r\n        this.$element().css({\r\n            height: \"\",\r\n            minHeight: \"\",\r\n            maxHeight: \"\"\r\n        })\r\n    },\r\n    _renderEvents: function() {\r\n        if (this.option(\"autoResizeEnabled\")) {\r\n            _events_engine2.default.on(this._input(), _utils2.default.addNamespace(\"input paste\", this.NAME), this._updateInputHeight.bind(this))\r\n        }\r\n        this.callBase()\r\n    },\r\n    _refreshEvents: function() {\r\n        _events_engine2.default.off(this._input(), _utils2.default.addNamespace(\"input paste\", this.NAME));\r\n        this.callBase()\r\n    },\r\n    _getHeightDifference: function($input) {\r\n        return _size2.default.getVerticalOffsets(this._$element.get(0), false) + _size2.default.getVerticalOffsets(this._$textEditorContainer.get(0), false) + _size2.default.getVerticalOffsets(this._$textEditorInputContainer.get(0), false) + _size2.default.getElementBoxParams(\"height\", _window2.default.getWindow().getComputedStyle($input.get(0))).margin\r\n    },\r\n    _updateInputHeight: function() {\r\n        var $input = this._input();\r\n        var autoHeightResizing = void 0 === this.option(\"height\") && this.option(\"autoResizeEnabled\");\r\n        if (!autoHeightResizing) {\r\n            $input.css(\"height\", \"\");\r\n            return\r\n        } else {\r\n            this._resetDimensions();\r\n            this._$element.css(\"height\", this._$element.outerHeight())\r\n        }\r\n        $input.css(\"height\", 0);\r\n        var heightDifference = this._getHeightDifference($input);\r\n        this._renderDimensions();\r\n        var minHeight = this._getBoundaryHeight(\"minHeight\");\r\n        var maxHeight = this._getBoundaryHeight(\"maxHeight\");\r\n        var inputHeight = $input[0].scrollHeight;\r\n        if (void 0 !== minHeight) {\r\n            inputHeight = Math.max(inputHeight, minHeight - heightDifference)\r\n        }\r\n        if (void 0 !== maxHeight) {\r\n            var adjustedMaxHeight = maxHeight - heightDifference;\r\n            var needScroll = inputHeight > adjustedMaxHeight;\r\n            inputHeight = Math.min(inputHeight, adjustedMaxHeight);\r\n            this._updateInputAutoResizeAppearance($input, !needScroll)\r\n        }\r\n        $input.css(\"height\", inputHeight);\r\n        if (autoHeightResizing) {\r\n            this._$element.css(\"height\", \"auto\")\r\n        }\r\n    },\r\n    _getBoundaryHeight: function(optionName) {\r\n        var boundaryValue = this.option(optionName);\r\n        if ((0, _type.isDefined)(boundaryValue)) {\r\n            return \"number\" === typeof boundaryValue ? boundaryValue : _size2.default.parseHeight(boundaryValue, this._$textEditorContainer.get(0))\r\n        }\r\n    },\r\n    _renderInputType: _common.noop,\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._updateInputHeight()\r\n        }\r\n    },\r\n    _updateInputAutoResizeAppearance: function($input, isAutoResizeEnabled) {\r\n        if ($input) {\r\n            var autoResizeEnabled = (0, _common.ensureDefined)(isAutoResizeEnabled, this.option(\"autoResizeEnabled\"));\r\n            $input.toggleClass(TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE, autoResizeEnabled)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"autoResizeEnabled\":\r\n                this._updateInputAutoResizeAppearance(this._input(), args.value);\r\n                this._refreshEvents();\r\n                this._updateInputHeight();\r\n                break;\r\n            case \"value\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                this._updateInputHeight();\r\n                break;\r\n            case \"minHeight\":\r\n            case \"maxHeight\":\r\n                this._renderDimensions();\r\n                this._updateInputHeight();\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                args.value && this._updateInputHeight();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\n(0, _component_registrator2.default)(\"dxTextArea\", TextArea);\r\nmodule.exports = TextArea;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}
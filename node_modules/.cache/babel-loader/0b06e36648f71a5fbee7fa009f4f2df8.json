{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.timeline_work_week.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar registerComponent = require(\"../../../core/component_registrator\");\n\nvar SchedulerTimelineWeek = require(\"./ui.scheduler.timeline_week\");\n\nvar dateUtils = require(\"../../../core/utils/date\");\n\nvar toMs = dateUtils.dateToMilliseconds;\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-work-week\";\nvar MONDAY_INDEX = 1;\nvar SchedulerTimelineWorkWeek = SchedulerTimelineWeek.inherit({\n  _getElementClass: function () {\n    return TIMELINE_CLASS;\n  },\n  _getWeekDuration: function () {\n    return 5;\n  },\n  _firstDayOfWeek: function () {\n    return this.option(\"firstDayOfWeek\") || MONDAY_INDEX;\n  },\n  _incrementDate: function (date) {\n    var day = date.getDay();\n\n    if (5 === day) {\n      date.setDate(date.getDate() + 2);\n    }\n\n    this.callBase(date);\n  },\n  _getOffsetByCount: function (cellIndex, rowIndex) {\n    var weekendCount = Math.floor(cellIndex / (5 * this._getCellCountInDay()));\n\n    if (weekendCount > 0) {\n      return toMs(\"day\") * weekendCount * 2;\n    } else {\n      return 0;\n    }\n  },\n  _getWeekendsCount: function (days) {\n    return 2 * Math.floor(days / 7);\n  },\n  _setFirstViewDate: function () {\n    this._firstViewDate = dateUtils.getFirstWeekDate(this.option(\"currentDate\"), this._firstDayOfWeek());\n    this._firstViewDate = dateUtils.normalizeDateByWeek(this._firstViewDate, this.option(\"currentDate\"));\n\n    this._setStartDayHour(this._firstViewDate);\n  }\n});\nregisterComponent(\"dxSchedulerTimelineWorkWeek\", SchedulerTimelineWorkWeek);\nmodule.exports = SchedulerTimelineWorkWeek;","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/node_modules/devextreme/ui/scheduler/workspaces/ui.scheduler.timeline_work_week.js"],"names":["registerComponent","require","SchedulerTimelineWeek","dateUtils","toMs","dateToMilliseconds","TIMELINE_CLASS","MONDAY_INDEX","SchedulerTimelineWorkWeek","inherit","_getElementClass","_getWeekDuration","_firstDayOfWeek","option","_incrementDate","date","day","getDay","setDate","getDate","callBase","_getOffsetByCount","cellIndex","rowIndex","weekendCount","Math","floor","_getCellCountInDay","_getWeekendsCount","days","_setFirstViewDate","_firstViewDate","getFirstWeekDate","normalizeDateByWeek","_setStartDayHour","module","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qCAAD,CAA/B;;AACA,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,8BAAD,CAAnC;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,0BAAD,CAAvB;;AACA,IAAIG,IAAI,GAAGD,SAAS,CAACE,kBAArB;AACA,IAAIC,cAAc,GAAG,iCAArB;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAIC,yBAAyB,GAAGN,qBAAqB,CAACO,OAAtB,CAA8B;AAC1DC,EAAAA,gBAAgB,EAAE,YAAW;AACzB,WAAOJ,cAAP;AACH,GAHyD;AAI1DK,EAAAA,gBAAgB,EAAE,YAAW;AACzB,WAAO,CAAP;AACH,GANyD;AAO1DC,EAAAA,eAAe,EAAE,YAAW;AACxB,WAAO,KAAKC,MAAL,CAAY,gBAAZ,KAAiCN,YAAxC;AACH,GATyD;AAU1DO,EAAAA,cAAc,EAAE,UAASC,IAAT,EAAe;AAC3B,QAAIC,GAAG,GAAGD,IAAI,CAACE,MAAL,EAAV;;AACA,QAAI,MAAMD,GAAV,EAAe;AACXD,MAAAA,IAAI,CAACG,OAAL,CAAaH,IAAI,CAACI,OAAL,KAAiB,CAA9B;AACH;;AACD,SAAKC,QAAL,CAAcL,IAAd;AACH,GAhByD;AAiB1DM,EAAAA,iBAAiB,EAAE,UAASC,SAAT,EAAoBC,QAApB,EAA8B;AAC7C,QAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWJ,SAAS,IAAI,IAAI,KAAKK,kBAAL,EAAR,CAApB,CAAnB;;AACA,QAAIH,YAAY,GAAG,CAAnB,EAAsB;AAClB,aAAOpB,IAAI,CAAC,KAAD,CAAJ,GAAcoB,YAAd,GAA6B,CAApC;AACH,KAFD,MAEO;AACH,aAAO,CAAP;AACH;AACJ,GAxByD;AAyB1DI,EAAAA,iBAAiB,EAAE,UAASC,IAAT,EAAe;AAC9B,WAAO,IAAIJ,IAAI,CAACC,KAAL,CAAWG,IAAI,GAAG,CAAlB,CAAX;AACH,GA3ByD;AA4B1DC,EAAAA,iBAAiB,EAAE,YAAW;AAC1B,SAAKC,cAAL,GAAsB5B,SAAS,CAAC6B,gBAAV,CAA2B,KAAKnB,MAAL,CAAY,aAAZ,CAA3B,EAAuD,KAAKD,eAAL,EAAvD,CAAtB;AACA,SAAKmB,cAAL,GAAsB5B,SAAS,CAAC8B,mBAAV,CAA8B,KAAKF,cAAnC,EAAmD,KAAKlB,MAAL,CAAY,aAAZ,CAAnD,CAAtB;;AACA,SAAKqB,gBAAL,CAAsB,KAAKH,cAA3B;AACH;AAhCyD,CAA9B,CAAhC;AAkCA/B,iBAAiB,CAAC,6BAAD,EAAgCQ,yBAAhC,CAAjB;AACA2B,MAAM,CAACC,OAAP,GAAiB5B,yBAAjB","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.timeline_work_week.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar registerComponent = require(\"../../../core/component_registrator\");\r\nvar SchedulerTimelineWeek = require(\"./ui.scheduler.timeline_week\");\r\nvar dateUtils = require(\"../../../core/utils/date\");\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-work-week\";\r\nvar MONDAY_INDEX = 1;\r\nvar SchedulerTimelineWorkWeek = SchedulerTimelineWeek.inherit({\r\n    _getElementClass: function() {\r\n        return TIMELINE_CLASS\r\n    },\r\n    _getWeekDuration: function() {\r\n        return 5\r\n    },\r\n    _firstDayOfWeek: function() {\r\n        return this.option(\"firstDayOfWeek\") || MONDAY_INDEX\r\n    },\r\n    _incrementDate: function(date) {\r\n        var day = date.getDay();\r\n        if (5 === day) {\r\n            date.setDate(date.getDate() + 2)\r\n        }\r\n        this.callBase(date)\r\n    },\r\n    _getOffsetByCount: function(cellIndex, rowIndex) {\r\n        var weekendCount = Math.floor(cellIndex / (5 * this._getCellCountInDay()));\r\n        if (weekendCount > 0) {\r\n            return toMs(\"day\") * weekendCount * 2\r\n        } else {\r\n            return 0\r\n        }\r\n    },\r\n    _getWeekendsCount: function(days) {\r\n        return 2 * Math.floor(days / 7)\r\n    },\r\n    _setFirstViewDate: function() {\r\n        this._firstViewDate = dateUtils.getFirstWeekDate(this.option(\"currentDate\"), this._firstDayOfWeek());\r\n        this._firstViewDate = dateUtils.normalizeDateByWeek(this._firstViewDate, this.option(\"currentDate\"));\r\n        this._setStartDayHour(this._firstViewDate)\r\n    }\r\n});\r\nregisterComponent(\"dxSchedulerTimelineWorkWeek\", SchedulerTimelineWorkWeek);\r\nmodule.exports = SchedulerTimelineWorkWeek;\r\n"]},"metadata":{},"sourceType":"script"}
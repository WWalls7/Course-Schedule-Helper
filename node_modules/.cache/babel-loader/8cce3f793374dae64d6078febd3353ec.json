{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../../core/renderer\");\n\nvar domAdapter = require(\"../../../core/dom_adapter\");\n\nvar eventsEngine = require(\"../../../events/core/events_engine\");\n\nvar dataUtils = require(\"../../../core/element_data\");\n\nvar dateUtils = require(\"../../../core/utils/date\");\n\nvar typeUtils = require(\"../../../core/utils/type\");\n\nvar windowUtils = require(\"../../../core/utils/window\");\n\nvar getPublicElement = require(\"../../../core/utils/dom\").getPublicElement;\n\nvar extend = require(\"../../../core/utils/extend\").extend;\n\nvar each = require(\"../../../core/utils/iterator\").each;\n\nvar messageLocalization = require(\"../../../localization/message\");\n\nvar dateLocalization = require(\"../../../localization/date\");\n\nvar toMs = dateUtils.dateToMilliseconds;\n\nvar Widget = require(\"../../widget/ui.widget\");\n\nvar abstract = Widget.abstract;\n\nvar noop = require(\"../../../core/utils/common\").noop;\n\nvar isDefined = require(\"../../../core/utils/type\").isDefined;\n\nvar publisherMixin = require(\"../ui.scheduler.publisher_mixin\");\n\nvar eventUtils = require(\"../../../events/utils\");\n\nvar pointerEvents = require(\"../../../events/pointer\");\n\nvar errors = require(\"../../widget/ui.errors\");\n\nvar clickEvent = require(\"../../../events/click\");\n\nvar contextMenuEvent = require(\"../../../events/contextmenu\");\n\nvar dragEvents = require(\"../../../events/drag\");\n\nvar Scrollable = require(\"../../scroll_view/ui.scrollable\");\n\nvar HorizontalGroupedStrategy = require(\"./ui.scheduler.work_space.grouped.strategy.horizontal\");\n\nvar VerticalGroupedStrategy = require(\"./ui.scheduler.work_space.grouped.strategy.vertical\");\n\nvar tableCreator = require(\"../ui.scheduler.table_creator\");\n\nvar VerticalShader = require(\"../shaders/ui.scheduler.current_time_shader.vertical\");\n\nvar AppointmentDragBehavior = require(\"../appointmentDragBehavior\");\n\nvar FIXED_CONTAINER_CLASS = require(\"../constants\").FIXED_CONTAINER_CLASS;\n\nvar COMPONENT_CLASS = \"dx-scheduler-work-space\";\nvar GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-grouped\";\nvar VERTICAL_GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-vertical-grouped\";\nvar WORKSPACE_VERTICAL_GROUP_TABLE_CLASS = \"dx-scheduler-work-space-vertical-group-table\";\nvar WORKSPACE_WITH_BOTH_SCROLLS_CLASS = \"dx-scheduler-work-space-both-scrollbar\";\nvar WORKSPACE_WITH_COUNT_CLASS = \"dx-scheduler-work-space-count\";\nvar WORKSPACE_WITH_GROUP_BY_DATE_CLASS = \"dx-scheduler-work-space-group-by-date\";\nvar WORKSPACE_WITH_ODD_CELLS_CLASS = \"dx-scheduler-work-space-odd-cells\";\nvar WORKSPACE_WITH_OVERLAPPING_CLASS = \"dx-scheduler-work-space-overlapping\";\nvar TIME_PANEL_CLASS = \"dx-scheduler-time-panel\";\nvar TIME_PANEL_CELL_CLASS = \"dx-scheduler-time-panel-cell\";\nvar TIME_PANEL_ROW_CLASS = \"dx-scheduler-time-panel-row\";\nvar ALL_DAY_PANEL_CLASS = \"dx-scheduler-all-day-panel\";\nvar ALL_DAY_TABLE_CLASS = \"dx-scheduler-all-day-table\";\nvar ALL_DAY_CONTAINER_CLASS = \"dx-scheduler-all-day-appointments\";\nvar ALL_DAY_TITLE_CLASS = \"dx-scheduler-all-day-title\";\nvar ALL_DAY_TITLE_HIDDEN_CLASS = \"dx-scheduler-all-day-title-hidden\";\nvar ALL_DAY_TABLE_CELL_CLASS = \"dx-scheduler-all-day-table-cell\";\nvar ALL_DAY_TABLE_ROW_CLASS = \"dx-scheduler-all-day-table-row\";\nvar WORKSPACE_WITH_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day\";\nvar WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day-collapsed\";\nvar WORKSPACE_WITH_MOUSE_SELECTION_CLASS = \"dx-scheduler-work-space-mouse-selection\";\nvar HORIZONTAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-horizontal\";\nvar VERTICAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-vertical\";\nvar HEADER_PANEL_CLASS = \"dx-scheduler-header-panel\";\nvar HEADER_PANEL_CELL_CLASS = \"dx-scheduler-header-panel-cell\";\nvar HEADER_ROW_CLASS = \"dx-scheduler-header-row\";\nvar GROUP_ROW_CLASS = \"dx-scheduler-group-row\";\nvar GROUP_HEADER_CLASS = \"dx-scheduler-group-header\";\nvar GROUP_HEADER_CONTENT_CLASS = \"dx-scheduler-group-header-content\";\nvar DATE_TABLE_CLASS = \"dx-scheduler-date-table\";\nvar DATE_TABLE_CELL_CLASS = \"dx-scheduler-date-table-cell\";\nvar DATE_TABLE_ROW_CLASS = \"dx-scheduler-date-table-row\";\nvar DATE_TABLE_FOCUSED_CELL_CLASS = \"dx-scheduler-focused-cell\";\nvar DATE_TABLE_DROPPABLE_CELL_CLASS = \"dx-scheduler-date-table-droppable-cell\";\nvar SCHEDULER_HEADER_SCROLLABLE_CLASS = \"dx-scheduler-header-scrollable\";\nvar SCHEDULER_SIDEBAR_SCROLLABLE_CLASS = \"dx-scheduler-sidebar-scrollable\";\nvar SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS = \"dx-scheduler-date-table-scrollable\";\nvar SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, \"dxSchedulerWorkSpace\");\nvar SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME = eventUtils.addNamespace(dragEvents.enter, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXDROP_EVENT_NAME = eventUtils.addNamespace(dragEvents.drop, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXCLICK_EVENT_NAME = eventUtils.addNamespace(clickEvent.name, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME = eventUtils.addNamespace(pointerEvents.up, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME = eventUtils.addNamespace(pointerEvents.move, \"dxSchedulerDateTable\");\nvar CELL_DATA = \"dxCellData\";\nvar DATE_TABLE_CELL_BORDER = 1;\nvar DATE_TABLE_MIN_CELL_WIDTH = 75;\nvar DAY_MS = toMs(\"day\");\nvar HOUR_MS = toMs(\"hour\");\nvar SCHEDULER_DRAG_AND_DROP_SELECTOR = \".\".concat(DATE_TABLE_CLASS, \" td, .\").concat(ALL_DAY_TABLE_CLASS, \" td\");\n\nvar formatWeekday = function (date) {\n  return dateLocalization.getDayNames(\"abbreviated\")[date.getDay()];\n};\n\nvar SchedulerWorkSpace = Widget.inherit({\n  _supportedKeys: function () {\n    var clickHandler = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (this._focusedCells && this._focusedCells.length) {\n        var $itemElement = $(this.option(\"focusedElement\"));\n        var $cellElement = $itemElement.length ? $itemElement : this._focusedCells;\n        e.target = this._focusedCells;\n        this._showPopup = true;\n\n        this._cellClickAction({\n          event: e,\n          cellElement: $(this._focusedCells),\n          cellData: this.getCellData($cellElement)\n        });\n      }\n    };\n\n    var arrowPressHandler = function (e, cell) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      this._moveToCell(cell, e.shiftKey);\n    };\n\n    return extend(this.callBase(), {\n      enter: clickHandler,\n      space: clickHandler,\n      downArrow: function (e) {\n        var $cell = this._getCellFromNextRow(\"next\", e.shiftKey);\n\n        arrowPressHandler.call(this, e, $cell);\n      },\n      upArrow: function (e) {\n        var $cell = this._getCellFromNextRow(\"prev\", e.shiftKey);\n\n        arrowPressHandler.call(this, e, $cell);\n      },\n      rightArrow: function (e) {\n        var $rightCell = this._getRightCell(e.shiftKey);\n\n        arrowPressHandler.call(this, e, $rightCell);\n      },\n      leftArrow: function (e) {\n        var $leftCell = this._getLeftCell(e.shiftKey);\n\n        arrowPressHandler.call(this, e, $leftCell);\n      }\n    });\n  },\n  _isRTL: function () {\n    return this.option(\"rtlEnabled\");\n  },\n  _getFocusedCell: function () {\n    return this._$focusedCell || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0);\n  },\n  _getAllFocusedCells: function () {\n    return this._focusedCells || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0);\n  },\n  _getCellFromNextRow: function (direction) {\n    var $currentCell = this._$focusedCell;\n\n    if (isDefined($currentCell)) {\n      var cellIndex = $currentCell.index();\n      var $row = $currentCell.parent();\n      var $cell = $row[direction]().children().eq(cellIndex);\n      $cell = this._checkForViewBounds($cell);\n      return $cell;\n    }\n  },\n  _checkForViewBounds: function ($item) {\n    if (!$item.length) {\n      $item = this._$focusedCell;\n    }\n\n    return $item;\n  },\n  _getRightCell: function (isMultiSelection) {\n    if (!isDefined(this._$focusedCell)) {\n      return;\n    }\n\n    var $rightCell;\n    var $focusedCell = this._$focusedCell;\n\n    var groupCount = this._getGroupCount();\n\n    var rowCellCount = isMultiSelection ? this._getCellCount() : this._getTotalCellCount(groupCount);\n    var lastIndexInRow = rowCellCount - 1;\n    var edgeCellIndex = this._isRTL() ? 0 : lastIndexInRow;\n    var currentIndex = $focusedCell.index();\n    var direction = this._isRTL() ? \"prev\" : \"next\";\n\n    if (currentIndex === edgeCellIndex || isMultiSelection && this._isGroupEndCell($focusedCell)) {\n      var $row = $focusedCell.parent();\n      var sign = this._isRTL() ? 1 : -1;\n      $rightCell = $row[direction]().children().eq(currentIndex + sign * lastIndexInRow);\n      $rightCell = this._checkForViewBounds($rightCell);\n    } else {\n      $rightCell = $focusedCell[direction]();\n    }\n\n    return $rightCell;\n  },\n  _isGroupEndCell: function ($cell) {\n    var cellsInRow = this._getCellCount();\n\n    var currentCellIndex = $cell.index();\n    var result = currentCellIndex % cellsInRow;\n    return this._isRTL() ? 0 === result : result === cellsInRow - 1;\n  },\n  _getLeftCell: function (isMultiSelection) {\n    if (!isDefined(this._$focusedCell)) {\n      return;\n    }\n\n    var $leftCell;\n    var $focusedCell = this._$focusedCell;\n\n    var groupCount = this._getGroupCount();\n\n    var rowCellCount = isMultiSelection ? this._getCellCount() : this._getTotalCellCount(groupCount);\n    var lastIndexInRow = rowCellCount - 1;\n    var edgeCellIndex = this._isRTL() ? lastIndexInRow : 0;\n    var currentIndex = $focusedCell.index();\n    var direction = this._isRTL() ? \"next\" : \"prev\";\n\n    if (currentIndex === edgeCellIndex || isMultiSelection && this._isGroupStartCell($focusedCell)) {\n      var $row = $focusedCell.parent();\n      var sign = this._isRTL() ? -1 : 1;\n      $leftCell = $row[direction]().children().eq(currentIndex + sign * lastIndexInRow);\n      $leftCell = this._checkForViewBounds($leftCell);\n    } else {\n      $leftCell = $focusedCell[direction]();\n    }\n\n    return $leftCell;\n  },\n  _isGroupStartCell: function ($cell) {\n    var cellsInRow = this._getCellCount();\n\n    var currentCellIndex = $cell.index();\n    var result = currentCellIndex % cellsInRow;\n    return this._isRTL() ? result === cellsInRow - 1 : 0 === result;\n  },\n  _moveToCell: function ($cell, isMultiSelection) {\n    isMultiSelection = isMultiSelection && this.option(\"allowMultipleCellSelection\");\n\n    this._setFocusedCell($cell, isMultiSelection);\n\n    this._dateTableScrollable.scrollToElement($cell);\n  },\n  _setFocusedCell: function ($cell, isMultiSelection) {\n    if (!isDefined($cell) || !$cell.length) {\n      return;\n    }\n\n    this._releaseFocusedCell();\n\n    this._focusedCells = [];\n\n    if (isMultiSelection) {\n      $cell = this._correctCellForGroup($cell);\n      var orientation = \"day\" === this.option(\"type\") && (!this.option(\"groups\").length || \"vertical\" === this.option(\"groupOrientation\")) ? \"vertical\" : \"horizontal\";\n\n      var $targetCells = this._getCellsBetween($cell, this._$prevCell, orientation);\n\n      this._focusedCells = $targetCells.toArray();\n    } else {\n      this._focusedCells = [$cell.get(0)];\n      this._$prevCell = $cell;\n    }\n\n    var $focusedCells = $(this._focusedCells);\n\n    this._toggleFocusClass(true, $focusedCells);\n\n    this.setAria(\"label\", \"Add appointment\", $focusedCells);\n\n    this._toggleFocusedCellClass(true, $cell);\n\n    this._$focusedCell = $cell;\n    var selectedCellData = this.getFocusedCellData();\n    this.option(\"selectedCellData\", selectedCellData);\n\n    this._selectionChangedAction({\n      selectedCellData: selectedCellData\n    });\n  },\n  _correctCellForGroup: function ($cell) {\n    var $focusedCell = this._$focusedCell;\n\n    var cellGroupIndex = this._getGroupIndexByCell($cell);\n\n    var focusedCellGroupIndex = this._getGroupIndexByCell($focusedCell);\n\n    var isDifferentTables = this._hasAllDayClass($cell) !== this._hasAllDayClass($focusedCell);\n\n    return focusedCellGroupIndex !== cellGroupIndex || isDifferentTables ? $focusedCell : $cell;\n  },\n  _getCellsBetween: function ($first, $last, direction) {\n    var isAllDayTable = this._hasAllDayClass($last);\n\n    var $cells = this._getCells(isAllDayTable, direction);\n\n    var firstIndex = $cells.index($first);\n    var lastIndex = $cells.index($last);\n\n    if (firstIndex > lastIndex) {\n      var buffer = firstIndex;\n      firstIndex = lastIndex;\n      lastIndex = buffer;\n    }\n\n    $cells = $cells.slice(firstIndex, lastIndex + 1);\n\n    if (this._getGroupCount() > 1) {\n      var result = [];\n\n      var focusedGroupIndex = this._getGroupIndexByCell($first);\n\n      each($cells, function (_, cell) {\n        var groupIndex = this._getGroupIndexByCell($(cell));\n\n        if (focusedGroupIndex === groupIndex) {\n          result.push(cell);\n        }\n      }.bind(this));\n      $cells = $(result);\n    }\n\n    return $cells;\n  },\n  _hasAllDayClass: function ($cell) {\n    return $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS);\n  },\n  _getGroupIndexByCell: function ($cell) {\n    var cellsInRow = this._getCellCount();\n\n    var currentCellIndex = $cell.index() + 1;\n    var groupIndex = Math.ceil(currentCellIndex / cellsInRow);\n    return groupIndex;\n  },\n  _toggleFocusedCellClass: function (isFocused, $element) {\n    var $focusTarget = $element && $element.length ? $element : this._focusTarget();\n    $focusTarget.toggleClass(DATE_TABLE_FOCUSED_CELL_CLASS, isFocused);\n  },\n  _releaseFocusedCell: function ($cell) {\n    $cell = $cell || $(this._focusedCells);\n\n    if (isDefined($cell) && $cell.length) {\n      this._toggleFocusClass(false, $cell);\n\n      this._toggleFocusedCellClass(false, $cell);\n\n      this.setAria(\"label\", void 0, $cell);\n    }\n\n    this.option(\"selectedCellData\", []);\n  },\n  _focusInHandler: function (e) {\n    if ($(e.target).is(this._focusTarget()) && false !== this._isCellClick) {\n      delete this._isCellClick;\n      delete this._contextMenuHandled;\n      this.callBase.apply(this, arguments);\n\n      var $cell = this._getFocusedCell();\n\n      this._setFocusedCell($cell);\n    }\n  },\n  _focusOutHandler: function () {\n    this.callBase.apply(this, arguments);\n\n    if (!this._contextMenuHandled) {\n      this._releaseFocusedCell();\n    }\n  },\n  _focusTarget: function () {\n    return this.$element();\n  },\n  _activeStateUnit: \".\" + DATE_TABLE_CELL_CLASS + \", .\" + ALL_DAY_TABLE_CELL_CLASS,\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      currentDate: new Date(),\n      intervalCount: 1,\n      startDate: null,\n      firstDayOfWeek: void 0,\n      startDayHour: 0,\n      endDayHour: 24,\n      hoursInterval: .5,\n      activeStateEnabled: true,\n      hoverStateEnabled: true,\n      groups: [],\n      showAllDayPanel: true,\n      allDayExpanded: false,\n      onCellClick: null,\n      crossScrollingEnabled: false,\n      dataCellTemplate: null,\n      timeCellTemplate: null,\n      resourceCellTemplate: null,\n      dateCellTemplate: null,\n      allowMultipleCellSelection: true,\n      indicatorTime: new Date(),\n      indicatorUpdateInterval: 5 * toMs(\"minute\"),\n      shadeUntilCurrentTime: true,\n      groupOrientation: \"horizontal\",\n      selectedCellData: [],\n      groupByDate: false\n    });\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"dateCellTemplate\":\n      case \"resourceCellTemplate\":\n      case \"dataCellTemplate\":\n      case \"timeCellTemplate\":\n      case \"startDayHour\":\n      case \"endDayHour\":\n      case \"hoursInterval\":\n      case \"firstDayOfWeek\":\n      case \"currentDate\":\n      case \"startDate\":\n        this._cleanWorkSpace();\n\n        break;\n\n      case \"groups\":\n        this._cleanView();\n\n        this._removeAllDayElements();\n\n        this._initGrouping();\n\n        this.repaint();\n        break;\n\n      case \"groupOrientation\":\n        this._initGroupedStrategy();\n\n        this._createAllDayPanelElements();\n\n        this._removeAllDayElements();\n\n        this._cleanWorkSpace();\n\n        this._toggleGroupByDateClass();\n\n        break;\n\n      case \"showAllDayPanel\":\n        if (this._isVerticalGroupedWorkSpace()) {\n          this._cleanView();\n\n          this._removeAllDayElements();\n\n          this._initGrouping();\n\n          this.repaint();\n        } else {\n          this._toggleAllDayVisibility();\n        }\n\n        break;\n\n      case \"allDayExpanded\":\n        this._changeAllDayVisibility();\n\n        this._attachTablesEvents();\n\n        this.headerPanelOffsetRecalculate();\n\n        this._updateScrollable();\n\n        break;\n\n      case \"onSelectionChanged\":\n        this._createSelectionChangedAction();\n\n        break;\n\n      case \"onCellClick\":\n        this._createCellClickAction();\n\n        break;\n\n      case \"onCellContextMenu\":\n        this._attachContextMenuEvent();\n\n        break;\n\n      case \"intervalCount\":\n        this._cleanWorkSpace();\n\n        this._toggleWorkSpaceCountClass();\n\n        this._toggleFixedScrollableClass();\n\n        break;\n\n      case \"groupByDate\":\n        this._cleanWorkSpace();\n\n        this._toggleGroupByDateClass();\n\n        break;\n\n      case \"crossScrollingEnabled\":\n        this._toggleHorizontalScrollClass();\n\n        this._dateTableScrollable.option(this._dateTableScrollableConfig());\n\n        break;\n\n      case \"width\":\n        this.callBase(args);\n\n        this._dimensionChanged();\n\n        break;\n\n      case \"allowMultipleCellSelection\":\n        break;\n\n      case \"selectedCellData\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _cleanWorkSpace: function () {\n    this._cleanView();\n\n    this._toggleGroupedClass();\n\n    this._toggleWorkSpaceWithOddCells();\n\n    this._renderView();\n  },\n  _init: function () {\n    this.callBase();\n\n    this._initGrouping();\n\n    this._toggleHorizontalScrollClass();\n\n    this._toggleWorkSpaceCountClass();\n\n    this._toggleGroupByDateClass();\n\n    this._toggleWorkSpaceWithOddCells();\n\n    this._toggleWorkSpaceOverlappingClass();\n\n    this.$element().addClass(COMPONENT_CLASS).addClass(this._getElementClass());\n  },\n  _initGrouping: function () {\n    this._initGroupedStrategy();\n\n    this._toggleGroupingDirectionClass();\n\n    this._toggleGroupByDateClass();\n  },\n  _initGroupedStrategy: function () {\n    var strategyName = this.option(\"groups\").length ? this.option(\"groupOrientation\") : this._getDefaultGroupStrategy();\n    var Strategy = \"vertical\" === strategyName ? VerticalGroupedStrategy : HorizontalGroupedStrategy;\n    this._groupedStrategy = new Strategy(this);\n  },\n  _getDefaultGroupStrategy: function () {\n    return \"horizontal\";\n  },\n  _isVerticalGroupedWorkSpace: function () {\n    return !!this.option(\"groups\").length && \"vertical\" === this.option(\"groupOrientation\");\n  },\n  _isHorizontalGroupedWorkSpace: function () {\n    return !!this.option(\"groups\").length && \"horizontal\" === this.option(\"groupOrientation\");\n  },\n  _toggleHorizontalScrollClass: function () {\n    this.$element().toggleClass(WORKSPACE_WITH_BOTH_SCROLLS_CLASS, this.option(\"crossScrollingEnabled\"));\n  },\n  _toggleGroupByDateClass: function () {\n    this.$element().toggleClass(WORKSPACE_WITH_GROUP_BY_DATE_CLASS, this.isGroupedByDate());\n  },\n  _toggleWorkSpaceCountClass: function () {\n    this.$element().toggleClass(WORKSPACE_WITH_COUNT_CLASS, this._isWorkSpaceWithCount());\n  },\n  _isWorkSpaceWithCount: function () {\n    return this.option(\"intervalCount\") > 1;\n  },\n  _toggleWorkSpaceWithOddCells: function () {\n    this.$element().toggleClass(WORKSPACE_WITH_ODD_CELLS_CLASS, this._isWorkspaceWithOddCells());\n  },\n  _isWorkspaceWithOddCells: function () {\n    return .5 === this.option(\"hoursInterval\");\n  },\n  _toggleWorkSpaceOverlappingClass: function () {\n    this.$element().toggleClass(WORKSPACE_WITH_OVERLAPPING_CLASS, this._isWorkSpaceWithOverlapping());\n  },\n  _isWorkSpaceWithOverlapping: function () {\n    return null !== this.invoke(\"getMaxAppointmentsPerCell\");\n  },\n  _toggleGroupingDirectionClass: function () {\n    this.$element().toggleClass(VERTICAL_GROUPED_WORKSPACE_CLASS, this._isVerticalGroupedWorkSpace());\n  },\n  _getRealGroupOrientation: function () {\n    return this._isVerticalGroupedWorkSpace() ? \"vertical\" : \"horizontal\";\n  },\n  _getTimePanelClass: function () {\n    return TIME_PANEL_CLASS;\n  },\n  _getDateTableClass: function () {\n    return DATE_TABLE_CLASS;\n  },\n  _getDateTableRowClass: function () {\n    return DATE_TABLE_ROW_CLASS;\n  },\n  _getDateTableCellClass: function (i, j) {\n    var cellClass = DATE_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS + \" \" + VERTICAL_SIZES_CLASS;\n    return this._needApplyLastGroupCellClass() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1, i, j) : cellClass;\n  },\n  _needApplyLastGroupCellClass: function () {\n    return true;\n  },\n  _getGroupRowClass: function () {\n    return GROUP_ROW_CLASS;\n  },\n  _getGroupHeaderClass: function (i) {\n    var cellClass = GROUP_HEADER_CLASS;\n    return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1);\n  },\n  _getGroupHeaderContentClass: function () {\n    return GROUP_HEADER_CONTENT_CLASS;\n  },\n  _initWorkSpaceUnits: function () {\n    this._$headerPanel = $(\"<table>\");\n    this._$thead = $(\"<thead>\").appendTo(this._$headerPanel);\n    this._$fixedContainer = $(\"<div>\").addClass(FIXED_CONTAINER_CLASS);\n    this._$allDayContainer = $(\"<div>\").addClass(ALL_DAY_CONTAINER_CLASS);\n\n    this._initAllDayPanelElements();\n\n    this._createAllDayPanelElements();\n\n    this._$timePanel = $(\"<table>\").addClass(this._getTimePanelClass());\n    this._$dateTable = $(\"<table>\");\n    this._$groupTable = $(\"<div>\").addClass(WORKSPACE_VERTICAL_GROUP_TABLE_CLASS);\n  },\n  _initAllDayPanelElements: function () {\n    this._allDayTitles = [];\n    this._allDayTables = [];\n    this._allDayPanels = [];\n  },\n  _createAllDayPanelElements: function () {\n    var groupCount = this._getGroupCount();\n\n    if (this._isVerticalGroupedWorkSpace() && 0 !== groupCount) {\n      for (var i = 0; i < groupCount; i++) {\n        var $allDayTitle = $(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(messageLocalization.format(\"dxScheduler-allDay\"));\n\n        this._allDayTitles.push($allDayTitle);\n\n        this._$allDayTable = $(\"<table>\");\n\n        this._allDayTables.push(this._$allDayTable);\n\n        this._$allDayPanel = $(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);\n\n        this._allDayPanels.push(this._$allDayPanel);\n      }\n    } else {\n      this._$allDayTitle = $(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(messageLocalization.format(\"dxScheduler-allDay\")).appendTo(this.$element());\n      this._$allDayTable = $(\"<table>\");\n      this._$allDayPanel = $(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);\n    }\n  },\n  _initDateTableScrollable: function () {\n    var $dateTableScrollable = $(\"<div>\").addClass(SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS);\n    this._dateTableScrollable = this._createComponent($dateTableScrollable, Scrollable, this._dateTableScrollableConfig());\n  },\n  _dateTableScrollableConfig: function () {\n    var config = {\n      useKeyboard: false,\n      bounceEnabled: false,\n      updateManually: true,\n      pushBackValue: 0\n    };\n\n    if (this._needCreateCrossScrolling()) {\n      config = extend(config, this._createCrossScrollingConfig());\n    }\n\n    return config;\n  },\n  _createCrossScrollingConfig: function () {\n    var config = {};\n    var headerScrollableOnScroll;\n    var sidebarScrollableOnScroll;\n    config.direction = \"both\";\n\n    config.onStart = function (e) {\n      if (this._headerScrollable) {\n        headerScrollableOnScroll = this._headerScrollable.option(\"onScroll\");\n\n        this._headerScrollable.option(\"onScroll\", void 0);\n      }\n\n      if (this._sidebarScrollable) {\n        sidebarScrollableOnScroll = this._sidebarScrollable.option(\"onScroll\");\n\n        this._sidebarScrollable.option(\"onScroll\", void 0);\n      }\n    }.bind(this);\n\n    config.onScroll = function (e) {\n      this._sidebarScrollable && this._sidebarScrollable.scrollTo({\n        top: e.scrollOffset.top\n      });\n      this._headerScrollable && this._headerScrollable.scrollTo({\n        left: e.scrollOffset.left\n      });\n    }.bind(this);\n\n    config.onEnd = function () {\n      this.notifyObserver(\"updateResizableArea\", {});\n      this._headerScrollable && this._headerScrollable.option(\"onScroll\", headerScrollableOnScroll);\n      this._sidebarScrollable && this._sidebarScrollable.option(\"onScroll\", sidebarScrollableOnScroll);\n    }.bind(this);\n\n    return config;\n  },\n  _createWorkSpaceElements: function () {\n    if (this.option(\"crossScrollingEnabled\")) {\n      this._createWorkSpaceScrollableElements();\n    } else {\n      this._createWorkSpaceStaticElements();\n    }\n  },\n  _createWorkSpaceStaticElements: function () {\n    if (this._isVerticalGroupedWorkSpace()) {\n      this._dateTableScrollable.$content().append(this._$allDayContainer, this._$groupTable, this._$timePanel, this._$dateTable);\n\n      this.$element().append(this._$fixedContainer, this._$headerPanel, this._dateTableScrollable.$element());\n    } else {\n      this._dateTableScrollable.$content().append(this._$timePanel, this._$dateTable);\n\n      this.$element().append(this._$fixedContainer, this._$headerPanel, this._$allDayContainer, this._$allDayPanel, this._dateTableScrollable.$element());\n    }\n  },\n  _createWorkSpaceScrollableElements: function () {\n    this.$element().append(this._$fixedContainer);\n\n    this._createHeaderScrollable();\n\n    this._createSidebarScrollable();\n\n    this.$element().append(this._dateTableScrollable.$element());\n\n    this._headerScrollable.$content().append(this._$headerPanel);\n\n    this._dateTableScrollable.$content().append(this._$dateTable);\n\n    if (this._isVerticalGroupedWorkSpace()) {\n      this._dateTableScrollable.$content().prepend(this._$allDayContainer);\n\n      this._sidebarScrollable.$content().append(this._$groupTable, this._$timePanel);\n    } else {\n      this._headerScrollable.$content().append(this._$allDayContainer, this._$allDayPanel);\n    }\n\n    this._sidebarScrollable.$content().append(this._$timePanel);\n  },\n  _createHeaderScrollable: function () {\n    var $headerScrollable = $(\"<div>\").addClass(SCHEDULER_HEADER_SCROLLABLE_CLASS).appendTo(this.$element());\n    this._headerScrollable = this._createComponent($headerScrollable, Scrollable, this._headerScrollableConfig());\n  },\n  _headerScrollableConfig: function () {\n    var dateTableScrollableOnScroll;\n    var config = {\n      useKeyboard: false,\n      showScrollbar: false,\n      direction: \"horizontal\",\n      useNative: false,\n      updateManually: true,\n      bounceEnabled: false,\n      pushBackValue: 0,\n      onStart: function (e) {\n        dateTableScrollableOnScroll = this._dateTableScrollable.option(\"onScroll\");\n      }.bind(this),\n      onScroll: function (e) {\n        this._dateTableScrollable.option(\"onScroll\", void 0);\n\n        this._dateTableScrollable.scrollTo({\n          left: e.scrollOffset.left\n        });\n\n        this._dateTableScrollable.option(\"onScroll\", dateTableScrollableOnScroll);\n      }.bind(this)\n    };\n    return config;\n  },\n  _createSidebarScrollable: function () {\n    var dateTableScrollableOnScroll;\n    var $timePanelScrollable = $(\"<div>\").addClass(SCHEDULER_SIDEBAR_SCROLLABLE_CLASS).appendTo(this.$element());\n    this._sidebarScrollable = this._createComponent($timePanelScrollable, Scrollable, {\n      useKeyboard: false,\n      showScrollbar: false,\n      direction: \"vertical\",\n      useNative: false,\n      updateManually: true,\n      bounceEnabled: false,\n      pushBackValue: 0,\n      onStart: function (e) {\n        dateTableScrollableOnScroll = this._dateTableScrollable.option(\"onScroll\");\n\n        this._dateTableScrollable.option(\"onScroll\", void 0);\n      }.bind(this),\n      onScroll: function (e) {\n        this._dateTableScrollable.scrollTo({\n          top: e.scrollOffset.top\n        });\n      }.bind(this),\n      onEnd: function (e) {\n        this._dateTableScrollable.option(\"onScroll\", dateTableScrollableOnScroll);\n      }.bind(this)\n    });\n  },\n  _visibilityChanged: function (visible) {\n    if (visible && this._isVerticalGroupedWorkSpace()) {\n      this._setHorizontalGroupHeaderCellsHeight();\n    }\n\n    if (visible && this._needCreateCrossScrolling()) {\n      this._setTableSizes();\n    }\n  },\n  _attachTableClasses: function () {\n    this._addTableClass(this._$dateTable, this._getDateTableClass());\n\n    if (this._isVerticalGroupedWorkSpace()) {\n      var groupCount = this._getGroupCount();\n\n      for (var i = 0; i < groupCount; i++) {\n        this._addTableClass(this._allDayTables[i], ALL_DAY_TABLE_CLASS);\n      }\n    } else {\n      this._addTableClass(this._$allDayTable, ALL_DAY_TABLE_CLASS);\n    }\n  },\n  _attachHeaderTableClasses: function () {\n    this._addTableClass(this._$headerPanel, HEADER_PANEL_CLASS);\n  },\n  _addTableClass: function ($el, className) {\n    $el && !$el.hasClass(className) && $el.addClass(className);\n  },\n  _setTableSizes: function () {\n    this._attachTableClasses();\n\n    var cellWidth = this.getCellWidth();\n\n    if (cellWidth < this.getCellMinWidth()) {\n      cellWidth = this.getCellMinWidth();\n    }\n\n    var minWidth = this.getWorkSpaceMinWidth();\n\n    var $headerCells = this._$headerPanel.find(\"tr\").last().find(\"th\");\n\n    var width = cellWidth * $headerCells.length;\n\n    if (width < minWidth) {\n      width = minWidth;\n    }\n\n    this._$headerPanel.width(width);\n\n    this._$dateTable.width(width);\n\n    this._$allDayTable && this._$allDayTable.width(width);\n\n    this._attachHeaderTableClasses();\n\n    if (this._isVerticalGroupedWorkSpace()) {\n      this._setHorizontalGroupHeaderCellsHeight();\n    }\n  },\n  getWorkSpaceMinWidth: function () {\n    return this._groupedStrategy.getWorkSpaceMinWidth();\n  },\n  _dimensionChanged: function () {\n    if (this.option(\"crossScrollingEnabled\")) {\n      this._setTableSizes();\n    }\n\n    this.headerPanelOffsetRecalculate();\n\n    this._cleanCellDataCache();\n\n    this._cleanAllowedPositions();\n  },\n  _needCreateCrossScrolling: function () {\n    return this.option(\"crossScrollingEnabled\");\n  },\n  _getElementClass: noop,\n  _getRowCount: noop,\n  _getCellCount: noop,\n  _initMarkup: function () {\n    this._initWorkSpaceUnits();\n\n    this._initDateTableScrollable();\n\n    this._createWorkSpaceElements();\n\n    this.callBase();\n\n    if (!this.option(\"crossScrollingEnabled\")) {\n      this._attachTableClasses();\n\n      this._attachHeaderTableClasses();\n    }\n\n    this._toggleGroupedClass();\n\n    this._toggleFixedScrollableClass();\n\n    this._renderView();\n\n    this._attachEvents();\n\n    this._setFocusOnCellByOption(this.option(\"selectedCellData\"));\n  },\n  _render: function () {\n    this.callBase();\n\n    this._renderDateTimeIndication();\n\n    this._setIndicationUpdateInterval();\n  },\n  _toggleGroupedClass: function () {\n    this.$element().toggleClass(GROUPED_WORKSPACE_CLASS, this._getGroupCount() > 0);\n  },\n  _toggleFixedScrollableClass: noop,\n  _renderView: function () {\n    this._setFirstViewDate();\n\n    this._applyCellTemplates(this._renderGroupHeader());\n\n    this._renderDateHeader();\n\n    this._renderTimePanel();\n\n    if (this._isVerticalGroupedWorkSpace()) {\n      var groupCount = this._getGroupCount();\n\n      for (var i = 0; i < groupCount; i++) {\n        this._renderAllDayPanel(i);\n      }\n    }\n\n    this._renderDateTable();\n\n    this._renderAllDayPanel();\n\n    this._updateGroupTableHeight();\n\n    this._shader = new VerticalShader();\n  },\n  _updateGroupTableHeight: function () {\n    if (this._isVerticalGroupedWorkSpace() && windowUtils.hasWindow()) {\n      this._setHorizontalGroupHeaderCellsHeight();\n    }\n  },\n  _renderDateTimeIndication: noop,\n  _setIndicationUpdateInterval: noop,\n  _refreshDateTimeIndication: noop,\n  _setFocusOnCellByOption: function (data) {\n    var cells = [];\n\n    this._releaseFocusedCell();\n\n    for (var i = 0; i < data.length; i++) {\n      var groups = data[i].groups;\n      var groupIndex = this.option(\"groups\").length && groups ? this._getGroupIndexByResourceId(groups) : 0;\n      var allDay = !!data[i].allDay;\n      var coordinates = this.getCoordinatesByDate(data[i].startDate, groupIndex, allDay);\n\n      var $cell = this._getCellByCoordinates(coordinates, groupIndex);\n\n      if (isDefined($cell)) {\n        this._toggleFocusClass(true, $cell);\n\n        cells.push($cell.get(0));\n      }\n    }\n\n    this._focusedCells = cells;\n  },\n  _getGroupIndexByResourceId: function (id) {\n    var groups = this.option(\"groups\");\n    var groupKey = Object.keys(id)[0];\n    var groupValue = id[groupKey];\n    var tree = this.invoke(\"createResourcesTree\", groups);\n    var index = 0;\n\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i].name === groupKey && tree[i].value === groupValue) {\n        index = tree[i].leafIndex;\n      }\n    }\n\n    return index;\n  },\n  _setFirstViewDate: function () {\n    var firstDayOfWeek = isDefined(this._firstDayOfWeek()) ? this._firstDayOfWeek() : dateLocalization.firstDayOfWeekIndex();\n    this._firstViewDate = dateUtils.getFirstWeekDate(this._getViewStartByOptions(), firstDayOfWeek);\n\n    this._setStartDayHour(this._firstViewDate);\n  },\n  _getViewStartByOptions: function () {\n    if (!this.option(\"startDate\")) {\n      return this.option(\"currentDate\");\n    } else {\n      var startDate = dateUtils.trimTime(this._getStartViewDate());\n      var currentDate = this.option(\"currentDate\");\n      var diff = startDate.getTime() <= currentDate.getTime() ? 1 : -1;\n      var endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff);\n\n      while (!this._dateInRange(currentDate, startDate, endDate, diff)) {\n        startDate = endDate;\n        endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff);\n      }\n\n      return diff > 0 ? startDate : endDate;\n    }\n  },\n  _getHeaderDate: function () {\n    return this.getStartViewDate();\n  },\n  _getStartViewDate: function () {\n    return this.option(\"startDate\");\n  },\n  _dateInRange: function (date, startDate, endDate, diff) {\n    return diff > 0 ? dateUtils.dateInRange(date, startDate, new Date(endDate.getTime() - 1)) : dateUtils.dateInRange(date, endDate, startDate, \"date\");\n  },\n  _getIntervalDuration: function () {\n    return toMs(\"day\") * this.option(\"intervalCount\");\n  },\n  _setStartDayHour: function (date) {\n    var startDayHour = this.option(\"startDayHour\");\n\n    if (isDefined(startDayHour)) {\n      date.setHours(startDayHour, startDayHour % 1 * 60, 0, 0);\n    }\n  },\n  _firstDayOfWeek: function () {\n    return this.option(\"firstDayOfWeek\");\n  },\n  _attachEvents: function () {\n    this._createSelectionChangedAction();\n\n    this._attachClickEvent();\n\n    this._attachContextMenuEvent();\n  },\n  _attachClickEvent: function () {\n    var that = this;\n\n    var pointerDownAction = this._createAction(function (e) {\n      that._pointerDownHandler(e.event);\n    });\n\n    this._createCellClickAction();\n\n    var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\n    var $element = this.$element();\n    eventsEngine.off($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME);\n    eventsEngine.off($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME);\n    eventsEngine.on($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME, function (e) {\n      if (eventUtils.isMouseEvent(e) && e.which > 1) {\n        e.preventDefault();\n        return;\n      }\n\n      pointerDownAction({\n        event: e\n      });\n    });\n    eventsEngine.on($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME, cellSelector, function (e) {\n      var $cell = $(e.target);\n\n      that._cellClickAction({\n        event: e,\n        cellElement: getPublicElement($cell),\n        cellData: that.getCellData($cell)\n      });\n    });\n  },\n  _createCellClickAction: function () {\n    var that = this;\n    this._cellClickAction = this._createActionByOption(\"onCellClick\", {\n      afterExecute: function (e) {\n        that._moveToClosestNonStub(e.args[0].event);\n      }\n    });\n  },\n  _createSelectionChangedAction: function () {\n    this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\");\n  },\n  _moveToClosestNonStub: function (e) {\n    var $target = $(e.target);\n\n    if (this._showPopup && this._hasFocusClass($target)) {\n      delete this._showPopup;\n\n      this._showAddAppointmentPopup($target);\n    }\n  },\n  _pointerDownHandler: function (e) {\n    var $target = $(e.target);\n\n    if (!$target.hasClass(DATE_TABLE_CELL_CLASS) && !$target.hasClass(ALL_DAY_TABLE_CELL_CLASS)) {\n      this._isCellClick = false;\n      return;\n    }\n\n    this._isCellClick = true;\n\n    if ($target.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {\n      this._showPopup = true;\n    } else {\n      this._setFocusedCell($target);\n    }\n  },\n  _showAddAppointmentPopup: function ($cell) {\n    var firstCellData = this.getCellData($cell.first());\n    var lastCellData = this.getCellData($cell.last());\n    var args = {\n      startDate: firstCellData.startDate,\n      endDate: lastCellData.endDate\n    };\n\n    if (isDefined(lastCellData.allDay)) {\n      args.allDay = lastCellData.allDay;\n    }\n\n    extend(args, lastCellData.groups);\n    this.notifyObserver(\"showAddAppointmentPopup\", args);\n  },\n  _attachContextMenuEvent: function () {\n    this._createContextMenuAction();\n\n    var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\n    var $element = this.$element();\n    var eventName = eventUtils.addNamespace(contextMenuEvent.name, this.NAME);\n    eventsEngine.off($element, eventName, cellSelector);\n    eventsEngine.on($element, eventName, cellSelector, this._contextMenuHandler.bind(this));\n  },\n  _contextMenuHandler: function (e) {\n    var $cell = $(e.target);\n\n    this._contextMenuAction({\n      event: e,\n      cellElement: getPublicElement($cell),\n      cellData: this.getCellData($cell)\n    });\n\n    this._contextMenuHandled = true;\n  },\n  _createContextMenuAction: function () {\n    this._contextMenuAction = this._createActionByOption(\"onCellContextMenu\");\n  },\n  _getGroupHeaderContainer: function () {\n    if (this._isVerticalGroupedWorkSpace()) {\n      return this._$groupTable;\n    }\n\n    return this._$thead;\n  },\n  _getDateHeaderContainer: function () {\n    return this._$thead;\n  },\n  _renderGroupHeader: function () {\n    var $container = this._getGroupHeaderContainer();\n\n    var groupCount = this._getGroupCount();\n\n    var cellTemplates = [];\n\n    if (groupCount) {\n      var groupRows = this._makeGroupRows(this.option(\"groups\"), this.option(\"groupByDate\"));\n\n      this._attachGroupCountAttr(groupCount, groupRows);\n\n      $container.append(groupRows.elements);\n      cellTemplates = groupRows.cellTemplates;\n    } else {\n      this._detachGroupCountAttr();\n    }\n\n    return cellTemplates;\n  },\n  _applyCellTemplates: function (templates) {\n    templates.forEach(function (template) {\n      template();\n    });\n  },\n  _detachGroupCountAttr: function () {\n    var groupedAttr = this._groupedStrategy.getGroupCountAttr();\n\n    this.$element().removeAttr(groupedAttr.attr);\n  },\n  _attachGroupCountAttr: function (groupRowCount, groupRows) {\n    var groupedAttr = this._groupedStrategy.getGroupCountAttr(groupRowCount, groupRows);\n\n    this.$element().attr(groupedAttr.attr, groupedAttr.count);\n  },\n  headerPanelOffsetRecalculate: function () {\n    if (!this.option(\"resourceCellTemplate\") && !this.option(\"dateCellTemplate\")) {\n      return;\n    }\n\n    var headerPanelHeight = this.getHeaderPanelHeight();\n    var headerHeight = this.invoke(\"getHeaderHeight\");\n    var allDayPanelHeight = this.supportAllDayRow() && this.option(\"showAllDayPanel\") ? this._groupedStrategy.getAllDayTableHeight() : 0;\n    headerPanelHeight && this._headerScrollable && this._headerScrollable.$element().height(headerPanelHeight + allDayPanelHeight);\n    headerPanelHeight && this._dateTableScrollable.$element().css({\n      paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\n      marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\n    });\n    headerPanelHeight && this._sidebarScrollable && this._sidebarScrollable.$element().css({\n      paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\n      marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\n    });\n    this._$allDayTitle && this._$allDayTitle.css(\"top\", headerHeight + headerPanelHeight + \"px\");\n  },\n  _makeGroupRows: function (groups, groupByDate) {\n    var tableCreatorStrategy = this._isVerticalGroupedWorkSpace() ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;\n    return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {\n      groupHeaderRowClass: this._getGroupRowClass(),\n      groupRowClass: this._getGroupRowClass(),\n      groupHeaderClass: this._getGroupHeaderClass.bind(this),\n      groupHeaderContentClass: this._getGroupHeaderContentClass()\n    }, this._getCellCount() || 1, this.option(\"resourceCellTemplate\"), this._getGroupCount(), groupByDate);\n  },\n  _getDateHeaderTemplate: function () {\n    return this.option(\"dateCellTemplate\");\n  },\n  _renderDateHeader: function () {\n    var $container = this._getDateHeaderContainer();\n\n    var $headerRow = $(\"<tr>\").addClass(HEADER_ROW_CLASS);\n\n    var count = this._getCellCount();\n\n    var cellTemplate = this._getDateHeaderTemplate();\n\n    var repeatCount = this._calculateHeaderCellRepeatCount();\n\n    var templateCallbacks = [];\n    var colspan = this.option(\"groupByDate\") ? this._getGroupCount() : 1;\n    var groupByDate = this.option(\"groupByDate\");\n    var i;\n    var j;\n\n    if (!groupByDate) {\n      for (j = 0; j < repeatCount; j++) {\n        for (i = 0; i < count; i++) {\n          this._renderDateHeaderTemplate($headerRow, i, j * repeatCount + i, cellTemplate, templateCallbacks);\n        }\n      }\n\n      $container.append($headerRow);\n    } else {\n      for (i = 0; i < count; i++) {\n        var $cell = this._renderDateHeaderTemplate($headerRow, i, i * repeatCount, cellTemplate, templateCallbacks);\n\n        $cell.attr(\"colSpan\", colspan);\n      }\n\n      $container.prepend($headerRow);\n    }\n\n    this._applyCellTemplates(templateCallbacks);\n\n    return $headerRow;\n  },\n  _renderDateHeaderTemplate: function ($container, i, calculatedIndex, cellTemplate, templateCallbacks) {\n    var text = this._getHeaderText(i);\n\n    var $cell = $(\"<th>\").addClass(this._getHeaderPanelCellClass(i)).attr(\"title\", text);\n\n    if (cellTemplate && cellTemplate.render) {\n      templateCallbacks.push(cellTemplate.render.bind(cellTemplate, {\n        model: {\n          text: text,\n          date: this._getDateByIndex(i)\n        },\n        index: calculatedIndex,\n        container: getPublicElement($cell)\n      }));\n    } else {\n      $cell.text(text);\n    }\n\n    $container.append($cell);\n    return $cell;\n  },\n  _getHeaderPanelCellClass: function (i) {\n    var cellClass = HEADER_PANEL_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\n    return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1);\n  },\n  _calculateHeaderCellRepeatCount: function () {\n    return this._groupedStrategy.calculateHeaderCellRepeatCount();\n  },\n  _renderAllDayPanel: function (index) {\n    var cellCount = this._getCellCount();\n\n    if (!this._isVerticalGroupedWorkSpace()) {\n      cellCount *= this._getGroupCount() || 1;\n    }\n\n    var cellTemplates = this._renderTableBody({\n      container: this._allDayPanels.length ? getPublicElement(this._allDayTables[index]) : getPublicElement(this._$allDayTable),\n      rowCount: 1,\n      cellCount: cellCount,\n      cellClass: this._getAllDayPanelCellClass.bind(this),\n      rowClass: ALL_DAY_TABLE_ROW_CLASS,\n      cellTemplate: this.option(\"dataCellTemplate\"),\n      getCellData: this._getAllDayCellData.bind(this),\n      groupIndex: index\n    }, true);\n\n    this._toggleAllDayVisibility();\n\n    this._applyCellTemplates(cellTemplates);\n  },\n  _getAllDayPanelCellClass: function (i, j) {\n    var cellClass = ALL_DAY_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\n    return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1);\n  },\n  _getAllDayCellData: function (cell, rowIndex, cellIndex, groupIndex) {\n    var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\n\n    startDate = dateUtils.trimTime(startDate);\n    var data = {\n      startDate: startDate,\n      endDate: new Date(startDate.getTime() + DAY_MS),\n      allDay: true\n    };\n\n    var groups = this._getCellGroups(groupIndex || this._getGroupIndex(rowIndex, cellIndex));\n\n    if (groups.length) {\n      data.groups = {};\n    }\n\n    for (var i = 0; i < groups.length; i++) {\n      data.groups[groups[i].name] = groups[i].id;\n    }\n\n    return {\n      key: CELL_DATA,\n      value: data\n    };\n  },\n  _toggleAllDayVisibility: function () {\n    var showAllDayPanel = this.option(\"showAllDayPanel\");\n\n    this._$allDayPanel.toggle(showAllDayPanel);\n\n    this._$allDayTitle && this._$allDayTitle.toggleClass(ALL_DAY_TITLE_HIDDEN_CLASS, !showAllDayPanel);\n    this.$element().toggleClass(WORKSPACE_WITH_ALL_DAY_CLASS, showAllDayPanel);\n\n    this._changeAllDayVisibility();\n\n    this._updateScrollable();\n  },\n  _changeAllDayVisibility: function () {\n    this.$element().toggleClass(WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS, !this.option(\"allDayExpanded\") && this.option(\"showAllDayPanel\"));\n  },\n  _updateScrollable: function () {\n    this._dateTableScrollable.update();\n\n    this._headerScrollable && this._headerScrollable.update();\n    this._sidebarScrollable && this._sidebarScrollable.update();\n  },\n  _renderTimePanel: function () {\n    var repeatCount = this._groupedStrategy.calculateTimeCellRepeatCount();\n\n    this._renderTableBody({\n      container: getPublicElement(this._$timePanel),\n      rowCount: this._getTimePanelRowCount() * repeatCount,\n      cellCount: 1,\n      cellClass: this._getTimeCellClass.bind(this),\n      rowClass: TIME_PANEL_ROW_CLASS,\n      cellTemplate: this.option(\"timeCellTemplate\"),\n      getCellText: this._getTimeText.bind(this),\n      getCellDate: this._getTimeCellDate.bind(this),\n      groupCount: this._getGroupCount(),\n      allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0\n    });\n  },\n  _getTimePanelRowCount: function () {\n    return this._getCellCountInDay();\n  },\n  _getCellCountInDay: function () {\n    return Math.ceil(this._calculateDayDuration() / this.option(\"hoursInterval\"));\n  },\n  _calculateDayDuration: function () {\n    return this.option(\"endDayHour\") - this.option(\"startDayHour\");\n  },\n  _getTimeCellClass: function (i) {\n    var cellClass = TIME_PANEL_CELL_CLASS + \" \" + VERTICAL_SIZES_CLASS;\n    return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i, i);\n  },\n  _getTimeText: function (i) {\n    var startViewDate = this._getTimeCellDate(i);\n\n    var index = i % this._getRowCount();\n\n    if (index % 2 === 0) {\n      return dateLocalization.format(startViewDate, \"shorttime\");\n    }\n\n    return \"\";\n  },\n  _getTimeCellDate: function (i) {\n    var startViewDate = new Date(this.getStartViewDate());\n    var timeCellDuration = Math.round(this.getCellDuration());\n    var lastCellInDay = this._calculateDayDuration() / this.option(\"hoursInterval\");\n    startViewDate.setMilliseconds(startViewDate.getMilliseconds() + timeCellDuration * (i % lastCellInDay));\n    return startViewDate;\n  },\n  _renderDateTable: function () {\n    var groupCount = this._getGroupCount();\n\n    this._renderTableBody({\n      container: getPublicElement(this._$dateTable),\n      rowCount: this._getTotalRowCount(groupCount),\n      cellCount: this._getTotalCellCount(groupCount),\n      cellClass: this._getDateTableCellClass.bind(this),\n      rowClass: this._getDateTableRowClass(),\n      cellTemplate: this.option(\"dataCellTemplate\"),\n      getCellData: this._getCellData.bind(this),\n      allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayPanels : void 0,\n      groupCount: groupCount,\n      groupByDate: this.option(\"groupByDate\")\n    });\n  },\n  _insertAllDayRowsIntoDateTable: function () {\n    return this._groupedStrategy.insertAllDayRowsIntoDateTable();\n  },\n  _getTotalCellCount: function (groupCount) {\n    return this._groupedStrategy.getTotalCellCount(groupCount);\n  },\n  _getTotalRowCount: function () {\n    return this._groupedStrategy.getTotalRowCount();\n  },\n  _getCellData: function (cell, rowIndex, cellIndex) {\n    var data = this._prepareCellData(rowIndex, cellIndex, cell);\n\n    return {\n      key: CELL_DATA,\n      value: data\n    };\n  },\n  _prepareCellData: function (rowIndex, cellIndex) {\n    var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\n\n    var endDate = this.calculateEndDate(startDate);\n    var data = {\n      startDate: startDate,\n      endDate: endDate,\n      allDay: this._getTableAllDay()\n    };\n\n    var groups = this._getCellGroups(this._getGroupIndex(rowIndex, cellIndex));\n\n    if (groups.length) {\n      data.groups = {};\n    }\n\n    for (var i = 0; i < groups.length; i++) {\n      data.groups[groups[i].name] = groups[i].id;\n    }\n\n    return data;\n  },\n  _getGroupIndex: function (rowIndex, cellIndex) {\n    return this._groupedStrategy.getGroupIndex(rowIndex, cellIndex);\n  },\n  _getTableAllDay: function () {\n    return false;\n  },\n  calculateEndDate: function (startDate) {\n    var result = new Date(startDate);\n    result.setMilliseconds(result.getMilliseconds() + Math.round(this._getInterval()));\n    return result;\n  },\n  _getGroupCount: function () {\n    var groups = this.option(\"groups\");\n    var result = 0;\n\n    for (var i = 0, len = groups.length; i < len; i++) {\n      if (!i) {\n        result = groups[i].items.length;\n      } else {\n        result *= groups[i].items.length;\n      }\n    }\n\n    return result;\n  },\n  _getPathToLeaf: function (leafIndex) {\n    var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\n\n    function findLeafByIndex(data, index) {\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].leafIndex === index) {\n          return data[i];\n        } else {\n          var _leaf = findLeafByIndex(data[i].children, index);\n\n          if (_leaf) {\n            return _leaf;\n          }\n        }\n      }\n    }\n\n    function makeBranch(leaf, result) {\n      result = result || [];\n      result.push(leaf.value);\n\n      if (leaf.parent) {\n        makeBranch(leaf.parent, result);\n      }\n\n      return result;\n    }\n\n    var leaf = findLeafByIndex(tree, leafIndex);\n    return makeBranch(leaf).reverse();\n  },\n  _getCellGroups: function (groupIndex) {\n    var result = [];\n\n    if (this._getGroupCount()) {\n      var groups = this.option(\"groups\");\n\n      if (groupIndex < 0) {\n        return;\n      }\n\n      var path = this._getPathToLeaf(groupIndex);\n\n      for (var i = 0; i < groups.length; i++) {\n        result.push({\n          name: groups[i].name,\n          id: path[i]\n        });\n      }\n    }\n\n    return result;\n  },\n  _attachTablesEvents: function () {\n    var that = this;\n    var isPointerDown = false;\n    var cellHeight;\n    var cellWidth;\n    var $element = this.$element();\n    eventsEngine.off($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME);\n    eventsEngine.off($element, SCHEDULER_CELL_DXDROP_EVENT_NAME);\n    eventsEngine.off($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME);\n    eventsEngine.off($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME);\n    eventsEngine.on($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, {\n      itemSizeFunc: function ($element) {\n        if (!cellHeight) {\n          cellHeight = $element.get(0).getBoundingClientRect().height;\n        }\n\n        if (!cellWidth) {\n          cellWidth = $element.get(0).getBoundingClientRect().width;\n        }\n\n        return {\n          width: cellWidth,\n          height: cellHeight\n        };\n      }\n    }, function (e) {\n      if (that._$currentTableTarget) {\n        that._$currentTableTarget.removeClass(DATE_TABLE_DROPPABLE_CELL_CLASS);\n      }\n\n      that._$currentTableTarget = $(e.target);\n\n      that._$currentTableTarget.addClass(DATE_TABLE_DROPPABLE_CELL_CLASS);\n    });\n    eventsEngine.on($element, SCHEDULER_CELL_DXDROP_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function (e) {\n      $(e.target).removeClass(DATE_TABLE_DROPPABLE_CELL_CLASS);\n      cellHeight = 0;\n      cellWidth = 0;\n    });\n    eventsEngine.on($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function (e) {\n      if (eventUtils.isMouseEvent(e) && 1 === e.which) {\n        isPointerDown = true;\n        that.$element().addClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);\n        eventsEngine.off(domAdapter.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\n        eventsEngine.on(domAdapter.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME, function () {\n          isPointerDown = false;\n          that.$element().removeClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);\n        });\n      }\n    });\n    eventsEngine.on($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function (e) {\n      if (isPointerDown && that._dateTableScrollable && !that._dateTableScrollable.option(\"scrollByContent\")) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        that._moveToCell($(e.target), true);\n      }\n    });\n  },\n  _getDateTables: function () {\n    return this._$dateTable.add(this._$allDayTable);\n  },\n  _getDateTable: function () {\n    return this._$dateTable;\n  },\n  _getAllDayTable: function () {\n    return this._$allDayTable;\n  },\n  _getInterval: function () {\n    if (void 0 === this._interval) {\n      this._interval = this.option(\"hoursInterval\") * HOUR_MS;\n    }\n\n    return this._interval;\n  },\n  _getHeaderText: function (headerIndex) {\n    return dateLocalization.format(this._getDateByIndex(headerIndex), this._getFormat());\n  },\n  _getDateByIndex: abstract,\n  _getFormat: abstract,\n  _calculateCellIndex: function (rowIndex, cellIndex) {\n    return this._groupedStrategy.calculateCellIndex(rowIndex, cellIndex);\n  },\n  _renderTableBody: function (options, delayCellTemplateRendering) {\n    var result = [];\n\n    if (!delayCellTemplateRendering) {\n      this._applyCellTemplates(tableCreator.makeTable(options));\n    } else {\n      result = tableCreator.makeTable(options);\n    }\n\n    return result;\n  },\n  _removeAllDayElements: function () {\n    this._$allDayTable && this._$allDayTable.remove();\n    this._$allDayTitle && this._$allDayTitle.remove();\n  },\n  _cleanView: function () {\n    this._cleanCellDataCache();\n\n    this._cleanAllowedPositions();\n\n    this._$thead.empty();\n\n    this._$dateTable.empty();\n\n    this._shader && this._shader.clean();\n\n    this._$timePanel.empty();\n\n    this._$allDayTable && this._$allDayTable.empty();\n\n    this._$groupTable.empty();\n\n    delete this._hiddenInterval;\n    delete this._interval;\n  },\n  _clean: function () {\n    eventsEngine.off(domAdapter.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\n    this.callBase();\n  },\n  getWorkArea: function () {\n    return this._dateTableScrollable.$content();\n  },\n  getScrollable: function () {\n    return this._dateTableScrollable;\n  },\n  getScrollableScrollTop: function () {\n    return this._dateTableScrollable.scrollTop();\n  },\n  getGroupedScrollableScrollTop: function (allDay) {\n    return this._groupedStrategy.getScrollableScrollTop(allDay);\n  },\n  getScrollableScrollLeft: function () {\n    return this._dateTableScrollable.scrollLeft();\n  },\n  getScrollableOuterWidth: function () {\n    return this._dateTableScrollable.scrollWidth();\n  },\n  getScrollableContainer: function () {\n    return this._dateTableScrollable._container();\n  },\n  getHeaderPanelHeight: function () {\n    return this._$headerPanel && this._$headerPanel.outerHeight(true);\n  },\n  getTimePanelWidth: function () {\n    return this._$timePanel && this._$timePanel.get(0).getBoundingClientRect().width;\n  },\n  getGroupTableWidth: function () {\n    return this._$groupTable ? this._$groupTable.outerWidth() : 0;\n  },\n  getWorkSpaceLeftOffset: function () {\n    return this._groupedStrategy.getLeftOffset();\n  },\n  getGroupedStrategy: function () {\n    return this._groupedStrategy;\n  },\n  _getCellCoordinatesByIndex: function (index) {\n    var cellIndex = Math.floor(index / this._getRowCount());\n    var rowIndex = index - this._getRowCount() * cellIndex;\n    return {\n      cellIndex: cellIndex,\n      rowIndex: rowIndex\n    };\n  },\n  _getDateByCellIndexes: function (rowIndex, cellIndex, patchedIndexes) {\n    cellIndex = !patchedIndexes ? this._patchCellIndex(cellIndex) : cellIndex;\n    var firstViewDate = this.getStartViewDate();\n    var currentDate = new Date(firstViewDate.getTime() + this._getMillisecondsOffset(rowIndex, cellIndex) + this._getOffsetByCount(cellIndex));\n    currentDate.setTime(currentDate.getTime() + dateUtils.getTimezonesDifference(firstViewDate, currentDate));\n    return currentDate;\n  },\n  _patchCellIndex: function (cellIndex) {\n    if (this.isGroupedByDate()) {\n      cellIndex = Math.floor(cellIndex / this._getGroupCount());\n    }\n\n    return cellIndex;\n  },\n  _getOffsetByCount: function () {\n    return 0;\n  },\n  _getMillisecondsOffset: function (rowIndex, cellIndex) {\n    return this._getInterval() * this._calculateCellIndex(rowIndex, cellIndex) + this._calculateHiddenInterval(rowIndex, cellIndex);\n  },\n  _calculateHiddenInterval: function (rowIndex, cellIndex) {\n    var dayCount = cellIndex % this._getCellCount();\n\n    return dayCount * this._getHiddenInterval();\n  },\n  _getHiddenInterval: function () {\n    if (void 0 === this._hiddenInterval) {\n      this._hiddenInterval = DAY_MS - this.getVisibleDayDuration();\n    }\n\n    return this._hiddenInterval;\n  },\n  _getIntervalBetween: function (currentDate, allDay) {\n    var firstViewDate = this.getStartViewDate();\n    var startDayTime = this.option(\"startDayHour\") * HOUR_MS;\n    var timeZoneOffset = dateUtils.getTimezonesDifference(firstViewDate, currentDate);\n    var fullInterval = currentDate.getTime() - firstViewDate.getTime() - timeZoneOffset;\n\n    var days = this._getDaysOfInterval(fullInterval, startDayTime);\n\n    var weekendsCount = this._getWeekendsCount(days);\n\n    var result = (days - weekendsCount) * DAY_MS;\n\n    if (!allDay) {\n      result = fullInterval - days * this._getHiddenInterval() - weekendsCount * this.getVisibleDayDuration();\n    }\n\n    return result;\n  },\n  _getWeekendsCount: function () {\n    return 0;\n  },\n  _getDaysOfInterval: function (fullInterval, startDayTime) {\n    return Math.floor((fullInterval + startDayTime) / DAY_MS);\n  },\n  _getGroupIndexes: function (appointmentResources) {\n    var result = [];\n\n    if (appointmentResources && this.option(\"groups\").length) {\n      var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\n      result = this.invoke(\"getResourceTreeLeaves\", tree, appointmentResources);\n    }\n\n    return result;\n  },\n  _updateIndex: function (index) {\n    return index * this._getRowCount();\n  },\n  _getDroppableCell: function () {\n    return this._getDateTables().find(\".\" + DATE_TABLE_DROPPABLE_CELL_CLASS);\n  },\n  _getWorkSpaceWidth: function () {\n    if (this._needCreateCrossScrolling()) {\n      return this._$dateTable.get(0).getBoundingClientRect().width;\n    }\n\n    return this.$element().get(0).getBoundingClientRect().width - this.getTimePanelWidth();\n  },\n  _getCellPositionByIndex: function (index, groupIndex, inAllDayRow) {\n    var cellCoordinates = this._getCellCoordinatesByIndex(index);\n\n    var $cell = this._getCellByCoordinates(cellCoordinates, groupIndex, inAllDayRow);\n\n    var result = this._getCellPosition($cell);\n\n    this.setCellDataCache(cellCoordinates, groupIndex, $cell);\n\n    if (result) {\n      result.rowIndex = cellCoordinates.rowIndex;\n      result.cellIndex = cellCoordinates.cellIndex;\n    }\n\n    return result;\n  },\n  _getCellPosition: function ($cell) {\n    var position = $cell.position();\n\n    if (this.option(\"rtlEnabled\")) {\n      position.left += $cell.get(0).getBoundingClientRect().width;\n    }\n\n    return position;\n  },\n  _getCellByCoordinates: function (cellCoordinates, groupIndex, inAllDayRow) {\n    var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex, inAllDayRow);\n\n    return this._$dateTable.find(\"tr\").eq(indexes.rowIndex).find(\"td\").eq(indexes.cellIndex);\n  },\n  _getCells: function (allDay, direction) {\n    var cellClass = allDay ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;\n\n    if (\"vertical\" === direction) {\n      var result = [];\n\n      for (var i = 1;; i++) {\n        var cells = this.$element().find(\"tr .\".concat(cellClass, \":nth-child(\").concat(i, \")\"));\n\n        if (!cells.length) {\n          break;\n        }\n\n        result = result.concat(cells.toArray());\n      }\n\n      return $(result);\n    } else {\n      return this.$element().find(\".\" + cellClass);\n    }\n  },\n  _setHorizontalGroupHeaderCellsHeight: function () {\n    var height = this._$dateTable.get(0).getBoundingClientRect().height;\n\n    this._$groupTable.outerHeight(height);\n  },\n  _getDateTableBorder: function () {\n    return DATE_TABLE_CELL_BORDER;\n  },\n  _getDateTableBorderOffset: function () {\n    return 2 * this._getDateTableBorder();\n  },\n  _getGroupHeaderCellsContent: function () {\n    return this.$element().find(\".\" + GROUP_HEADER_CONTENT_CLASS);\n  },\n  _getGroupHeaderCells: function () {\n    return this.$element().find(\".\" + GROUP_HEADER_CLASS);\n  },\n  _getScrollCoordinates: function (hours, minutes, date) {\n    var currentDate = date || new Date(this.option(\"currentDate\"));\n    var startDayHour = this.option(\"startDayHour\");\n    var endDayHour = this.option(\"endDayHour\");\n\n    if (hours < startDayHour) {\n      hours = startDayHour;\n    }\n\n    if (hours >= endDayHour) {\n      hours = endDayHour - 1;\n    }\n\n    currentDate.setHours(hours, minutes, 0, 0);\n    return this.getCoordinatesByDate(currentDate);\n  },\n  setCellDataCache: function (cellCoordinates, groupIndex, $cell) {\n    var cache = this.getCellDataCache();\n    var data = this.getCellData($cell);\n    var key = JSON.stringify({\n      rowIndex: cellCoordinates.rowIndex,\n      cellIndex: cellCoordinates.cellIndex,\n      groupIndex: groupIndex\n    });\n    cache[key] = data;\n  },\n  setCellDataCacheAlias: function (appointment, geometry) {\n    var key = JSON.stringify({\n      rowIndex: appointment.rowIndex,\n      cellIndex: appointment.cellIndex,\n      groupIndex: appointment.groupIndex\n    });\n    var aliasKey = JSON.stringify({\n      top: geometry.top,\n      left: geometry.left\n    });\n    var cache = this.getCellDataCache();\n\n    if (cache[key]) {\n      cache[aliasKey] = cache[key];\n    }\n  },\n  getCellDataCache: function (key) {\n    if (!this._cache) {\n      this._cache = {};\n    }\n\n    return key ? this._cache[key] : this._cache;\n  },\n  _cleanCellDataCache: function () {\n    delete this._cache;\n  },\n  _cleanAllowedPositions: function () {\n    delete this._maxAllowedVerticalPosition;\n    delete this._maxAllowedPosition;\n  },\n  supportAllDayRow: function () {\n    return true;\n  },\n  keepOriginalHours: function () {\n    return false;\n  },\n  getFocusedCellData: function () {\n    var $focusedCells = this._getAllFocusedCells();\n\n    var result = [];\n\n    if ($focusedCells.length > 1) {\n      result = this._getMultipleCellsData($focusedCells);\n    } else {\n      var data = this.getCellData($focusedCells);\n      data && result.push(data);\n    }\n\n    return result;\n  },\n  _getMultipleCellsData: function ($cells) {\n    var data = [];\n\n    for (var i = 0; i < $cells.length; i++) {\n      data.push(dataUtils.data($cells[i], CELL_DATA));\n    }\n\n    return data;\n  },\n  getCellData: function ($cell) {\n    var data = $cell[0] ? dataUtils.data($cell[0], CELL_DATA) : void 0;\n    return extend(true, {}, data);\n  },\n  _getHorizontalMax: function (groupIndex) {\n    groupIndex = this.option(\"groupByDate\") ? this._getGroupCount() - 1 : groupIndex;\n    return this._groupedStrategy.getHorizontalMax(groupIndex);\n  },\n  getCoordinatesByDate: function (date, groupIndex, inAllDayRow) {\n    groupIndex = groupIndex || 0;\n    var index = this.getCellIndexByDate(date, inAllDayRow);\n\n    var position = this._getCellPositionByIndex(index, groupIndex, inAllDayRow);\n\n    var shift = this.getPositionShift(inAllDayRow ? 0 : this.getTimeShift(date), inAllDayRow);\n\n    var horizontalHMax = this._getHorizontalMax(groupIndex, date);\n\n    if (!position) {\n      throw errors.Error(\"E1039\");\n    }\n\n    var coordinates = {\n      cellPosition: position.left + shift.cellPosition,\n      top: position.top + shift.top,\n      left: position.left + shift.left,\n      rowIndex: position.rowIndex,\n      cellIndex: position.cellIndex,\n      hMax: horizontalHMax,\n      vMax: this.getVerticalMax(groupIndex),\n      groupIndex: groupIndex\n    };\n    return coordinates;\n  },\n  getVerticalMax: function (groupIndex) {\n    return this._groupedStrategy.getVerticalMax(groupIndex);\n  },\n  _getOffsetByAllDayPanel: function (groupIndex) {\n    return this._groupedStrategy._getOffsetByAllDayPanel(groupIndex);\n  },\n  _getGroupTop: function (groupIndex) {\n    return this._groupedStrategy._getGroupTop(groupIndex);\n  },\n  isGroupedByDate: function () {\n    return this.option(\"groupByDate\") && this._isHorizontalGroupedWorkSpace() && this._getGroupCount() > 0;\n  },\n  getCellIndexByDate: function (date, inAllDayRow) {\n    var timeInterval = inAllDayRow ? 864e5 : this._getInterval();\n\n    var dateTimeStamp = this._getIntervalBetween(date, inAllDayRow);\n\n    var index = Math.floor(dateTimeStamp / timeInterval);\n\n    if (inAllDayRow) {\n      index = this._updateIndex(index);\n    }\n\n    if (index < 0) {\n      index = 0;\n    }\n\n    return index;\n  },\n  getPositionShift: function (timeShift, isAllDay) {\n    return {\n      top: timeShift * this.getCellHeight(),\n      left: 0,\n      cellPosition: 0\n    };\n  },\n  getTimeShift: function (date) {\n    var cellDuration = this.getCellDuration();\n    var currentDayStart = new Date(date);\n    var currentDayEndHour = new Date(new Date(date).setHours(this.option(\"endDayHour\"), 0, 0));\n\n    if (date.getTime() <= currentDayEndHour.getTime()) {\n      currentDayStart.setHours(this.option(\"startDayHour\"), 0, 0, 0);\n    }\n\n    var currentDateTime = date.getTime();\n    var currentDayStartTime = currentDayStart.getTime();\n\n    var minTime = this._firstViewDate.getTime();\n\n    return currentDateTime > minTime ? (currentDateTime - currentDayStartTime) % cellDuration / cellDuration : 0;\n  },\n  getCoordinatesByDateInGroup: function (date, appointmentResources, inAllDayRow) {\n    var indexes = this._getGroupIndexes(appointmentResources);\n\n    var result = [];\n\n    if (indexes.length) {\n      for (var i = 0; i < indexes.length; i++) {\n        result.push(this.getCoordinatesByDate(date, indexes[i], inAllDayRow));\n      }\n    } else {\n      result.push(this.getCoordinatesByDate(date, 0, inAllDayRow));\n    }\n\n    return result;\n  },\n  getDroppableCellIndex: function () {\n    var $droppableCell = this._getDroppableCell();\n\n    var $row = $droppableCell.parent();\n    var rowIndex = $row.index();\n    return rowIndex * $row.find(\"td\").length + $droppableCell.index();\n  },\n  getDataByDroppableCell: function () {\n    var cellData = this.getCellData(this._getDroppableCell());\n    return {\n      date: cellData.startDate,\n      allDay: cellData.allDay,\n      groups: cellData.groups\n    };\n  },\n  getDateRange: function () {\n    return [this.getStartViewDate(), this.getEndViewDate()];\n  },\n  getCellWidth: function () {\n    var cell = this._getCells().first().get(0);\n\n    return cell && cell.getBoundingClientRect().width;\n  },\n  getCellMinWidth: function () {\n    return DATE_TABLE_MIN_CELL_WIDTH;\n  },\n  getRoundedCellWidth: function (groupIndex, startIndex, cellCount) {\n    if (groupIndex < 0) {\n      return 0;\n    }\n\n    var $row = this.$element().find(\".\" + this._getDateTableRowClass()).eq(0);\n    var width = 0;\n    var $cells = $row.find(\".\" + DATE_TABLE_CELL_CLASS);\n    var totalCellCount = this._getCellCount() * groupIndex;\n    cellCount = cellCount || this._getCellCount();\n\n    if (!typeUtils.isDefined(startIndex)) {\n      startIndex = totalCellCount;\n    }\n\n    for (var i = startIndex; i < totalCellCount + cellCount; i++) {\n      width += $($cells).eq(i).get(0).getBoundingClientRect().width;\n    }\n\n    return width / (totalCellCount + cellCount - startIndex);\n  },\n  getCellHeight: function () {\n    var cell = this._getCells().first().get(0);\n\n    return cell && cell.getBoundingClientRect().height;\n  },\n  getAllDayHeight: function () {\n    var cell = this._getCells(true).first().get(0);\n\n    return this.option(\"showAllDayPanel\") ? cell && cell.getBoundingClientRect().height || 0 : 0;\n  },\n  getAllDayOffset: function () {\n    return this._groupedStrategy.getAllDayOffset();\n  },\n  getMaxAllowedPosition: function () {\n    if (!this._maxAllowedPosition) {\n      var isRtl = this.option(\"rtlEnabled\");\n      this._maxAllowedPosition = [];\n\n      this._$dateTable.find(\"tr\").first().find(\"td:nth-child(\" + this._getCellCount() + \"n)\").each(function (_, cell) {\n        var maxPosition = $(cell).position().left;\n\n        if (!isRtl) {\n          maxPosition += $(cell).get(0).getBoundingClientRect().width;\n        }\n\n        this._maxAllowedPosition.push(Math.round(maxPosition));\n      }.bind(this));\n    }\n\n    return this._maxAllowedPosition;\n  },\n  getMaxAllowedVerticalPosition: function () {\n    if (!this._maxAllowedVerticalPosition) {\n      var that = this;\n      this._maxAllowedVerticalPosition = [];\n\n      var rows = this._getRowCount();\n\n      this._$dateTable.find(\"tr:nth-child(\" + rows + \"n)\").each(function (_, row) {\n        var maxPosition = $(row).position().top + $(row).get(0).getBoundingClientRect().height;\n\n        that._maxAllowedVerticalPosition.push(Math.round(maxPosition));\n      });\n    }\n\n    return this._maxAllowedVerticalPosition;\n  },\n  getFixedContainer: function () {\n    return this._$fixedContainer;\n  },\n  getAllDayContainer: function () {\n    return this._$allDayContainer;\n  },\n  getCellIndexByCoordinates: function (coordinates, allDay) {\n    var cellCount = this._getTotalCellCount(this._getGroupCount());\n\n    var cellWidth = Math.floor(this._getWorkSpaceWidth() / cellCount);\n    var cellHeight = allDay ? this.getAllDayHeight() : this.getCellHeight();\n    var leftOffset = this._isRTL() || this.option(\"crossScrollingEnabled\") ? 0 : this.getWorkSpaceLeftOffset();\n    var topIndex = Math.floor(Math.floor(coordinates.top) / Math.floor(cellHeight));\n    var leftIndex = Math.floor((coordinates.left + 5 - leftOffset) / cellWidth);\n\n    if (this._isRTL()) {\n      leftIndex = cellCount - leftIndex - 1;\n    }\n\n    return cellCount * topIndex + leftIndex;\n  },\n  getStartViewDate: function () {\n    return this._firstViewDate;\n  },\n  getEndViewDate: function () {\n    var dateOfLastViewCell = this.getDateOfLastViewCell();\n    var endDateOfLastViewCell = this.calculateEndViewDate(dateOfLastViewCell);\n    return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell);\n  },\n  calculateEndViewDate: function (dateOfLastViewCell) {\n    return new Date(dateOfLastViewCell.getTime() + this.getCellDuration());\n  },\n  _adjustEndViewDateByDaylightDiff: function (startDate, endDate) {\n    var daylightDiff = this.invoke(\"getDaylightOffset\", startDate, endDate) * toMs(\"minute\") || 0;\n    var endDateOfLastViewCell = new Date(endDate.getTime() - daylightDiff);\n    return new Date(endDateOfLastViewCell.getTime() - toMs(\"minute\"));\n  },\n  getDateOfLastViewCell: function () {\n    var rowIndex = this._getRowCount() - 1;\n\n    var cellIndex = this._getCellCount();\n\n    if (this.option(\"groupByDate\") && this._getGroupCount() > 0) {\n      cellIndex = cellIndex * this._getGroupCount() - 1;\n    } else {\n      cellIndex -= 1;\n    }\n\n    return this._getDateByCellIndexes(rowIndex, cellIndex, true);\n  },\n  getCellDuration: function () {\n    return 36e5 * this.option(\"hoursInterval\");\n  },\n  getIntervalDuration: function (allDay) {\n    return allDay ? toMs(\"day\") : this.getCellDuration();\n  },\n  getVisibleDayDuration: function () {\n    return this.option(\"hoursInterval\") * this._getCellCountInDay() * HOUR_MS;\n  },\n  getGroupBounds: function (coordinates) {\n    var cellCount = this._getCellCount();\n\n    var $cells = this._getCells();\n\n    var cellWidth = this.getCellWidth();\n\n    var result = this._groupedStrategy.getGroupBoundsOffset(cellCount, $cells, cellWidth, coordinates);\n\n    if (this._isRTL()) {\n      var startOffset = result.left;\n      result.left = result.right - 2 * cellWidth;\n      result.right = startOffset + 2 * cellWidth;\n    }\n\n    return result;\n  },\n  needRecalculateResizableArea: function () {\n    return this._isVerticalGroupedWorkSpace() && 0 !== this.getScrollable().scrollTop();\n  },\n  getCellDataByCoordinates: function (coordinates, allDay) {\n    var key = JSON.stringify({\n      top: coordinates.top,\n      left: coordinates.left\n    });\n    var data = this.getCellDataCache(key);\n\n    if (data) {\n      return data;\n    }\n\n    var $cells = this._getCells(allDay);\n\n    var cellIndex = this.getCellIndexByCoordinates(coordinates, allDay);\n    var $cell = $cells.eq(cellIndex);\n    return this.getCellData($cell);\n  },\n  getVisibleBounds: function () {\n    var result = {};\n    var $scrollable = this.getScrollable().$element();\n    var cellHeight = this.getCellHeight();\n    var scrolledCellCount = this.getScrollableScrollTop() / cellHeight;\n    var totalCellCount = scrolledCellCount + $scrollable.height() / cellHeight;\n    result.top = {\n      hours: Math.floor(scrolledCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\n      minutes: scrolledCellCount % 2 ? 30 : 0\n    };\n    result.bottom = {\n      hours: Math.floor(totalCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\n      minutes: Math.floor(totalCellCount) % 2 ? 30 : 0\n    };\n    return result;\n  },\n  updateScrollPosition: function (date) {\n    date = this.invoke(\"convertDateByTimezone\", date);\n    var bounds = this.getVisibleBounds();\n    var startDateHour = date.getHours();\n    var startDateMinutes = date.getMinutes();\n\n    if (this.needUpdateScrollPosition(startDateHour, startDateMinutes, bounds, date)) {\n      this.scrollToTime(startDateHour, startDateMinutes, date);\n    }\n  },\n  needUpdateScrollPosition: function (hours, minutes, bounds) {\n    var isUpdateNeeded = false;\n\n    if (hours < bounds.top.hours || hours > bounds.bottom.hours) {\n      isUpdateNeeded = true;\n    }\n\n    if (hours === bounds.top.hours && minutes < bounds.top.minutes) {\n      isUpdateNeeded = true;\n    }\n\n    if (hours === bounds.bottom.hours && minutes > bounds.top.minutes) {\n      isUpdateNeeded = true;\n    }\n\n    return isUpdateNeeded;\n  },\n  getGroupWidth: function (groupIndex) {\n    var result = this._getCellCount() * this.getCellWidth();\n    var position = this.getMaxAllowedPosition();\n    var currentPosition = position[groupIndex];\n\n    if (position.length && currentPosition) {\n      if (this._isRTL()) {\n        result = currentPosition - position[groupIndex + 1];\n      } else {\n        if (0 === groupIndex) {\n          result = currentPosition;\n        } else {\n          result = currentPosition - position[groupIndex - 1];\n        }\n      }\n    }\n\n    return result;\n  },\n  restoreScrollTop: function () {\n    this.$element().scrollTop(0);\n  },\n  scrollToTime: function (hours, minutes, date) {\n    var min = this.getStartViewDate();\n    var max = this.getEndViewDate();\n\n    if (date < min || date > max) {\n      errors.log(\"W1008\", date);\n      return;\n    }\n\n    var coordinates = this._getScrollCoordinates(hours, minutes, date);\n\n    var scrollable = this.getScrollable();\n    scrollable.scrollBy({\n      top: coordinates.top - scrollable.scrollTop(),\n      left: 0\n    });\n  },\n  getDistanceBetweenCells: function (startIndex, endIndex) {\n    var result = 0;\n    this.$element().find(\".\" + this._getDateTableRowClass()).first().find(\".\" + DATE_TABLE_CELL_CLASS).each(function (index) {\n      if (index < startIndex || index > endIndex) {\n        return true;\n      }\n\n      result += $(this).get(0).getBoundingClientRect().width;\n    });\n    return result;\n  },\n  needApplyCollectorOffset: function () {\n    return false;\n  },\n  initDragBehavior: function (scheduler) {\n    if (!this.dragBehavior && scheduler) {\n      this.dragBehavior = new AppointmentDragBehavior(scheduler);\n      this.dragBehavior.addTo(this.getWorkArea());\n      this.dragBehavior.addTo(this.getAllDayContainer());\n      this.dragBehavior.addTo(this._$allDayPanel);\n    }\n\n    this._attachTablesEvents();\n  },\n  _isApplyCompactAppointmentOffset: function () {\n    return this._supportCompactDropDownAppointments();\n  },\n  _supportCompactDropDownAppointments: function () {\n    return true;\n  },\n  _formatWeekday: function (date) {\n    return formatWeekday(date);\n  },\n  _formatWeekdayAndDay: function (date) {\n    return formatWeekday(date) + \" \" + dateLocalization.format(date, \"day\");\n  }\n}).include(publisherMixin);\nmodule.exports = SchedulerWorkSpace;","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/node_modules/devextreme/ui/scheduler/workspaces/ui.scheduler.work_space.js"],"names":["$","require","domAdapter","eventsEngine","dataUtils","dateUtils","typeUtils","windowUtils","getPublicElement","extend","each","messageLocalization","dateLocalization","toMs","dateToMilliseconds","Widget","abstract","noop","isDefined","publisherMixin","eventUtils","pointerEvents","errors","clickEvent","contextMenuEvent","dragEvents","Scrollable","HorizontalGroupedStrategy","VerticalGroupedStrategy","tableCreator","VerticalShader","AppointmentDragBehavior","FIXED_CONTAINER_CLASS","COMPONENT_CLASS","GROUPED_WORKSPACE_CLASS","VERTICAL_GROUPED_WORKSPACE_CLASS","WORKSPACE_VERTICAL_GROUP_TABLE_CLASS","WORKSPACE_WITH_BOTH_SCROLLS_CLASS","WORKSPACE_WITH_COUNT_CLASS","WORKSPACE_WITH_GROUP_BY_DATE_CLASS","WORKSPACE_WITH_ODD_CELLS_CLASS","WORKSPACE_WITH_OVERLAPPING_CLASS","TIME_PANEL_CLASS","TIME_PANEL_CELL_CLASS","TIME_PANEL_ROW_CLASS","ALL_DAY_PANEL_CLASS","ALL_DAY_TABLE_CLASS","ALL_DAY_CONTAINER_CLASS","ALL_DAY_TITLE_CLASS","ALL_DAY_TITLE_HIDDEN_CLASS","ALL_DAY_TABLE_CELL_CLASS","ALL_DAY_TABLE_ROW_CLASS","WORKSPACE_WITH_ALL_DAY_CLASS","WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS","WORKSPACE_WITH_MOUSE_SELECTION_CLASS","HORIZONTAL_SIZES_CLASS","VERTICAL_SIZES_CLASS","HEADER_PANEL_CLASS","HEADER_PANEL_CELL_CLASS","HEADER_ROW_CLASS","GROUP_ROW_CLASS","GROUP_HEADER_CLASS","GROUP_HEADER_CONTENT_CLASS","DATE_TABLE_CLASS","DATE_TABLE_CELL_CLASS","DATE_TABLE_ROW_CLASS","DATE_TABLE_FOCUSED_CELL_CLASS","DATE_TABLE_DROPPABLE_CELL_CLASS","SCHEDULER_HEADER_SCROLLABLE_CLASS","SCHEDULER_SIDEBAR_SCROLLABLE_CLASS","SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS","SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME","addNamespace","down","SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME","enter","SCHEDULER_CELL_DXDROP_EVENT_NAME","drop","SCHEDULER_CELL_DXCLICK_EVENT_NAME","name","SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME","SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME","up","SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME","move","CELL_DATA","DATE_TABLE_CELL_BORDER","DATE_TABLE_MIN_CELL_WIDTH","DAY_MS","HOUR_MS","SCHEDULER_DRAG_AND_DROP_SELECTOR","concat","formatWeekday","date","getDayNames","getDay","SchedulerWorkSpace","inherit","_supportedKeys","clickHandler","e","preventDefault","stopPropagation","_focusedCells","length","$itemElement","option","$cellElement","target","_showPopup","_cellClickAction","event","cellElement","cellData","getCellData","arrowPressHandler","cell","_moveToCell","shiftKey","callBase","space","downArrow","$cell","_getCellFromNextRow","call","upArrow","rightArrow","$rightCell","_getRightCell","leftArrow","$leftCell","_getLeftCell","_isRTL","_getFocusedCell","_$focusedCell","_$dateTable","find","eq","_getAllFocusedCells","direction","$currentCell","cellIndex","index","$row","parent","children","_checkForViewBounds","$item","isMultiSelection","$focusedCell","groupCount","_getGroupCount","rowCellCount","_getCellCount","_getTotalCellCount","lastIndexInRow","edgeCellIndex","currentIndex","_isGroupEndCell","sign","cellsInRow","currentCellIndex","result","_isGroupStartCell","_setFocusedCell","_dateTableScrollable","scrollToElement","_releaseFocusedCell","_correctCellForGroup","orientation","$targetCells","_getCellsBetween","_$prevCell","toArray","get","$focusedCells","_toggleFocusClass","setAria","_toggleFocusedCellClass","selectedCellData","getFocusedCellData","_selectionChangedAction","cellGroupIndex","_getGroupIndexByCell","focusedCellGroupIndex","isDifferentTables","_hasAllDayClass","$first","$last","isAllDayTable","$cells","_getCells","firstIndex","lastIndex","buffer","slice","focusedGroupIndex","_","groupIndex","push","bind","hasClass","Math","ceil","isFocused","$element","$focusTarget","_focusTarget","toggleClass","_focusInHandler","is","_isCellClick","_contextMenuHandled","apply","arguments","_focusOutHandler","_activeStateUnit","_getDefaultOptions","currentDate","Date","intervalCount","startDate","firstDayOfWeek","startDayHour","endDayHour","hoursInterval","activeStateEnabled","hoverStateEnabled","groups","showAllDayPanel","allDayExpanded","onCellClick","crossScrollingEnabled","dataCellTemplate","timeCellTemplate","resourceCellTemplate","dateCellTemplate","allowMultipleCellSelection","indicatorTime","indicatorUpdateInterval","shadeUntilCurrentTime","groupOrientation","groupByDate","_optionChanged","args","_cleanWorkSpace","_cleanView","_removeAllDayElements","_initGrouping","repaint","_initGroupedStrategy","_createAllDayPanelElements","_toggleGroupByDateClass","_isVerticalGroupedWorkSpace","_toggleAllDayVisibility","_changeAllDayVisibility","_attachTablesEvents","headerPanelOffsetRecalculate","_updateScrollable","_createSelectionChangedAction","_createCellClickAction","_attachContextMenuEvent","_toggleWorkSpaceCountClass","_toggleFixedScrollableClass","_toggleHorizontalScrollClass","_dateTableScrollableConfig","_dimensionChanged","_toggleGroupedClass","_toggleWorkSpaceWithOddCells","_renderView","_init","_toggleWorkSpaceOverlappingClass","addClass","_getElementClass","_toggleGroupingDirectionClass","strategyName","_getDefaultGroupStrategy","Strategy","_groupedStrategy","_isHorizontalGroupedWorkSpace","isGroupedByDate","_isWorkSpaceWithCount","_isWorkspaceWithOddCells","_isWorkSpaceWithOverlapping","invoke","_getRealGroupOrientation","_getTimePanelClass","_getDateTableClass","_getDateTableRowClass","_getDateTableCellClass","i","j","cellClass","_needApplyLastGroupCellClass","addAdditionalGroupCellClasses","_getGroupRowClass","_getGroupHeaderClass","_getGroupHeaderContentClass","_initWorkSpaceUnits","_$headerPanel","_$thead","appendTo","_$fixedContainer","_$allDayContainer","_initAllDayPanelElements","_$timePanel","_$groupTable","_allDayTitles","_allDayTables","_allDayPanels","$allDayTitle","text","format","_$allDayTable","_$allDayPanel","append","_$allDayTitle","_initDateTableScrollable","$dateTableScrollable","_createComponent","config","useKeyboard","bounceEnabled","updateManually","pushBackValue","_needCreateCrossScrolling","_createCrossScrollingConfig","headerScrollableOnScroll","sidebarScrollableOnScroll","onStart","_headerScrollable","_sidebarScrollable","onScroll","scrollTo","top","scrollOffset","left","onEnd","notifyObserver","_createWorkSpaceElements","_createWorkSpaceScrollableElements","_createWorkSpaceStaticElements","$content","_createHeaderScrollable","_createSidebarScrollable","prepend","$headerScrollable","_headerScrollableConfig","dateTableScrollableOnScroll","showScrollbar","useNative","$timePanelScrollable","_visibilityChanged","visible","_setHorizontalGroupHeaderCellsHeight","_setTableSizes","_attachTableClasses","_addTableClass","_attachHeaderTableClasses","$el","className","cellWidth","getCellWidth","getCellMinWidth","minWidth","getWorkSpaceMinWidth","$headerCells","last","width","_cleanCellDataCache","_cleanAllowedPositions","_getRowCount","_initMarkup","_attachEvents","_setFocusOnCellByOption","_render","_renderDateTimeIndication","_setIndicationUpdateInterval","_setFirstViewDate","_applyCellTemplates","_renderGroupHeader","_renderDateHeader","_renderTimePanel","_renderAllDayPanel","_renderDateTable","_updateGroupTableHeight","_shader","hasWindow","_refreshDateTimeIndication","data","cells","_getGroupIndexByResourceId","allDay","coordinates","getCoordinatesByDate","_getCellByCoordinates","id","groupKey","Object","keys","groupValue","tree","value","leafIndex","_firstDayOfWeek","firstDayOfWeekIndex","_firstViewDate","getFirstWeekDate","_getViewStartByOptions","_setStartDayHour","trimTime","_getStartViewDate","diff","getTime","endDate","_getIntervalDuration","_dateInRange","_getHeaderDate","getStartViewDate","dateInRange","setHours","_attachClickEvent","that","pointerDownAction","_createAction","_pointerDownHandler","cellSelector","off","on","isMouseEvent","which","_createActionByOption","afterExecute","_moveToClosestNonStub","$target","_hasFocusClass","_showAddAppointmentPopup","firstCellData","first","lastCellData","_createContextMenuAction","eventName","NAME","_contextMenuHandler","_contextMenuAction","_getGroupHeaderContainer","_getDateHeaderContainer","$container","cellTemplates","groupRows","_makeGroupRows","_attachGroupCountAttr","elements","_detachGroupCountAttr","templates","forEach","template","groupedAttr","getGroupCountAttr","removeAttr","attr","groupRowCount","count","headerPanelHeight","getHeaderPanelHeight","headerHeight","allDayPanelHeight","supportAllDayRow","getAllDayTableHeight","height","css","paddingBottom","marginBottom","parseInt","tableCreatorStrategy","VERTICAL","HORIZONTAL","makeGroupedTable","groupHeaderRowClass","groupRowClass","groupHeaderClass","groupHeaderContentClass","_getDateHeaderTemplate","$headerRow","cellTemplate","repeatCount","_calculateHeaderCellRepeatCount","templateCallbacks","colspan","_renderDateHeaderTemplate","calculatedIndex","_getHeaderText","_getHeaderPanelCellClass","render","model","_getDateByIndex","container","calculateHeaderCellRepeatCount","cellCount","_renderTableBody","rowCount","_getAllDayPanelCellClass","rowClass","_getAllDayCellData","rowIndex","_getDateByCellIndexes","_getCellGroups","_getGroupIndex","key","toggle","update","calculateTimeCellRepeatCount","_getTimePanelRowCount","_getTimeCellClass","getCellText","_getTimeText","getCellDate","_getTimeCellDate","allDayElements","_insertAllDayRowsIntoDateTable","_getCellCountInDay","_calculateDayDuration","startViewDate","timeCellDuration","round","getCellDuration","lastCellInDay","setMilliseconds","getMilliseconds","_getTotalRowCount","_getCellData","insertAllDayRowsIntoDateTable","getTotalCellCount","getTotalRowCount","_prepareCellData","calculateEndDate","_getTableAllDay","getGroupIndex","_getInterval","len","items","_getPathToLeaf","findLeafByIndex","_leaf","makeBranch","leaf","reverse","path","isPointerDown","cellHeight","itemSizeFunc","getBoundingClientRect","_$currentTableTarget","removeClass","getDocument","_getDateTables","add","_getDateTable","_getAllDayTable","_interval","headerIndex","_getFormat","_calculateCellIndex","calculateCellIndex","options","delayCellTemplateRendering","makeTable","remove","empty","clean","_hiddenInterval","_clean","getWorkArea","getScrollable","getScrollableScrollTop","scrollTop","getGroupedScrollableScrollTop","getScrollableScrollLeft","scrollLeft","getScrollableOuterWidth","scrollWidth","getScrollableContainer","_container","outerHeight","getTimePanelWidth","getGroupTableWidth","outerWidth","getWorkSpaceLeftOffset","getLeftOffset","getGroupedStrategy","_getCellCoordinatesByIndex","floor","patchedIndexes","_patchCellIndex","firstViewDate","_getMillisecondsOffset","_getOffsetByCount","setTime","getTimezonesDifference","_calculateHiddenInterval","dayCount","_getHiddenInterval","getVisibleDayDuration","_getIntervalBetween","startDayTime","timeZoneOffset","fullInterval","days","_getDaysOfInterval","weekendsCount","_getWeekendsCount","_getGroupIndexes","appointmentResources","_updateIndex","_getDroppableCell","_getWorkSpaceWidth","_getCellPositionByIndex","inAllDayRow","cellCoordinates","_getCellPosition","setCellDataCache","position","indexes","prepareCellIndexes","_getDateTableBorder","_getDateTableBorderOffset","_getGroupHeaderCellsContent","_getGroupHeaderCells","_getScrollCoordinates","hours","minutes","cache","getCellDataCache","JSON","stringify","setCellDataCacheAlias","appointment","geometry","aliasKey","_cache","_maxAllowedVerticalPosition","_maxAllowedPosition","keepOriginalHours","_getMultipleCellsData","_getHorizontalMax","getHorizontalMax","getCellIndexByDate","shift","getPositionShift","getTimeShift","horizontalHMax","Error","cellPosition","hMax","vMax","getVerticalMax","_getOffsetByAllDayPanel","_getGroupTop","timeInterval","dateTimeStamp","timeShift","isAllDay","getCellHeight","cellDuration","currentDayStart","currentDayEndHour","currentDateTime","currentDayStartTime","minTime","getCoordinatesByDateInGroup","getDroppableCellIndex","$droppableCell","getDataByDroppableCell","getDateRange","getEndViewDate","getRoundedCellWidth","startIndex","totalCellCount","getAllDayHeight","getAllDayOffset","getMaxAllowedPosition","isRtl","maxPosition","getMaxAllowedVerticalPosition","rows","row","getFixedContainer","getAllDayContainer","getCellIndexByCoordinates","leftOffset","topIndex","leftIndex","dateOfLastViewCell","getDateOfLastViewCell","endDateOfLastViewCell","calculateEndViewDate","_adjustEndViewDateByDaylightDiff","daylightDiff","getIntervalDuration","getGroupBounds","getGroupBoundsOffset","startOffset","right","needRecalculateResizableArea","getCellDataByCoordinates","getVisibleBounds","$scrollable","scrolledCellCount","bottom","updateScrollPosition","bounds","startDateHour","getHours","startDateMinutes","getMinutes","needUpdateScrollPosition","scrollToTime","isUpdateNeeded","getGroupWidth","currentPosition","restoreScrollTop","min","max","log","scrollable","scrollBy","getDistanceBetweenCells","endIndex","needApplyCollectorOffset","initDragBehavior","scheduler","dragBehavior","addTo","_isApplyCompactAppointmentOffset","_supportCompactDropDownAppointments","_formatWeekday","_formatWeekdayAndDay","include","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../../core/renderer\");\r\nvar domAdapter = require(\"../../../core/dom_adapter\");\r\nvar eventsEngine = require(\"../../../events/core/events_engine\");\r\nvar dataUtils = require(\"../../../core/element_data\");\r\nvar dateUtils = require(\"../../../core/utils/date\");\r\nvar typeUtils = require(\"../../../core/utils/type\");\r\nvar windowUtils = require(\"../../../core/utils/window\");\r\nvar getPublicElement = require(\"../../../core/utils/dom\").getPublicElement;\r\nvar extend = require(\"../../../core/utils/extend\").extend;\r\nvar each = require(\"../../../core/utils/iterator\").each;\r\nvar messageLocalization = require(\"../../../localization/message\");\r\nvar dateLocalization = require(\"../../../localization/date\");\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nvar Widget = require(\"../../widget/ui.widget\");\r\nvar abstract = Widget.abstract;\r\nvar noop = require(\"../../../core/utils/common\").noop;\r\nvar isDefined = require(\"../../../core/utils/type\").isDefined;\r\nvar publisherMixin = require(\"../ui.scheduler.publisher_mixin\");\r\nvar eventUtils = require(\"../../../events/utils\");\r\nvar pointerEvents = require(\"../../../events/pointer\");\r\nvar errors = require(\"../../widget/ui.errors\");\r\nvar clickEvent = require(\"../../../events/click\");\r\nvar contextMenuEvent = require(\"../../../events/contextmenu\");\r\nvar dragEvents = require(\"../../../events/drag\");\r\nvar Scrollable = require(\"../../scroll_view/ui.scrollable\");\r\nvar HorizontalGroupedStrategy = require(\"./ui.scheduler.work_space.grouped.strategy.horizontal\");\r\nvar VerticalGroupedStrategy = require(\"./ui.scheduler.work_space.grouped.strategy.vertical\");\r\nvar tableCreator = require(\"../ui.scheduler.table_creator\");\r\nvar VerticalShader = require(\"../shaders/ui.scheduler.current_time_shader.vertical\");\r\nvar AppointmentDragBehavior = require(\"../appointmentDragBehavior\");\r\nvar FIXED_CONTAINER_CLASS = require(\"../constants\").FIXED_CONTAINER_CLASS;\r\nvar COMPONENT_CLASS = \"dx-scheduler-work-space\";\r\nvar GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-grouped\";\r\nvar VERTICAL_GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-vertical-grouped\";\r\nvar WORKSPACE_VERTICAL_GROUP_TABLE_CLASS = \"dx-scheduler-work-space-vertical-group-table\";\r\nvar WORKSPACE_WITH_BOTH_SCROLLS_CLASS = \"dx-scheduler-work-space-both-scrollbar\";\r\nvar WORKSPACE_WITH_COUNT_CLASS = \"dx-scheduler-work-space-count\";\r\nvar WORKSPACE_WITH_GROUP_BY_DATE_CLASS = \"dx-scheduler-work-space-group-by-date\";\r\nvar WORKSPACE_WITH_ODD_CELLS_CLASS = \"dx-scheduler-work-space-odd-cells\";\r\nvar WORKSPACE_WITH_OVERLAPPING_CLASS = \"dx-scheduler-work-space-overlapping\";\r\nvar TIME_PANEL_CLASS = \"dx-scheduler-time-panel\";\r\nvar TIME_PANEL_CELL_CLASS = \"dx-scheduler-time-panel-cell\";\r\nvar TIME_PANEL_ROW_CLASS = \"dx-scheduler-time-panel-row\";\r\nvar ALL_DAY_PANEL_CLASS = \"dx-scheduler-all-day-panel\";\r\nvar ALL_DAY_TABLE_CLASS = \"dx-scheduler-all-day-table\";\r\nvar ALL_DAY_CONTAINER_CLASS = \"dx-scheduler-all-day-appointments\";\r\nvar ALL_DAY_TITLE_CLASS = \"dx-scheduler-all-day-title\";\r\nvar ALL_DAY_TITLE_HIDDEN_CLASS = \"dx-scheduler-all-day-title-hidden\";\r\nvar ALL_DAY_TABLE_CELL_CLASS = \"dx-scheduler-all-day-table-cell\";\r\nvar ALL_DAY_TABLE_ROW_CLASS = \"dx-scheduler-all-day-table-row\";\r\nvar WORKSPACE_WITH_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day\";\r\nvar WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day-collapsed\";\r\nvar WORKSPACE_WITH_MOUSE_SELECTION_CLASS = \"dx-scheduler-work-space-mouse-selection\";\r\nvar HORIZONTAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-horizontal\";\r\nvar VERTICAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-vertical\";\r\nvar HEADER_PANEL_CLASS = \"dx-scheduler-header-panel\";\r\nvar HEADER_PANEL_CELL_CLASS = \"dx-scheduler-header-panel-cell\";\r\nvar HEADER_ROW_CLASS = \"dx-scheduler-header-row\";\r\nvar GROUP_ROW_CLASS = \"dx-scheduler-group-row\";\r\nvar GROUP_HEADER_CLASS = \"dx-scheduler-group-header\";\r\nvar GROUP_HEADER_CONTENT_CLASS = \"dx-scheduler-group-header-content\";\r\nvar DATE_TABLE_CLASS = \"dx-scheduler-date-table\";\r\nvar DATE_TABLE_CELL_CLASS = \"dx-scheduler-date-table-cell\";\r\nvar DATE_TABLE_ROW_CLASS = \"dx-scheduler-date-table-row\";\r\nvar DATE_TABLE_FOCUSED_CELL_CLASS = \"dx-scheduler-focused-cell\";\r\nvar DATE_TABLE_DROPPABLE_CELL_CLASS = \"dx-scheduler-date-table-droppable-cell\";\r\nvar SCHEDULER_HEADER_SCROLLABLE_CLASS = \"dx-scheduler-header-scrollable\";\r\nvar SCHEDULER_SIDEBAR_SCROLLABLE_CLASS = \"dx-scheduler-sidebar-scrollable\";\r\nvar SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS = \"dx-scheduler-date-table-scrollable\";\r\nvar SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, \"dxSchedulerWorkSpace\");\r\nvar SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME = eventUtils.addNamespace(dragEvents.enter, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXDROP_EVENT_NAME = eventUtils.addNamespace(dragEvents.drop, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXCLICK_EVENT_NAME = eventUtils.addNamespace(clickEvent.name, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME = eventUtils.addNamespace(pointerEvents.up, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME = eventUtils.addNamespace(pointerEvents.move, \"dxSchedulerDateTable\");\r\nvar CELL_DATA = \"dxCellData\";\r\nvar DATE_TABLE_CELL_BORDER = 1;\r\nvar DATE_TABLE_MIN_CELL_WIDTH = 75;\r\nvar DAY_MS = toMs(\"day\");\r\nvar HOUR_MS = toMs(\"hour\");\r\nvar SCHEDULER_DRAG_AND_DROP_SELECTOR = \".\".concat(DATE_TABLE_CLASS, \" td, .\").concat(ALL_DAY_TABLE_CLASS, \" td\");\r\nvar formatWeekday = function(date) {\r\n    return dateLocalization.getDayNames(\"abbreviated\")[date.getDay()]\r\n};\r\nvar SchedulerWorkSpace = Widget.inherit({\r\n    _supportedKeys: function() {\r\n        var clickHandler = function(e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (this._focusedCells && this._focusedCells.length) {\r\n                var $itemElement = $(this.option(\"focusedElement\"));\r\n                var $cellElement = $itemElement.length ? $itemElement : this._focusedCells;\r\n                e.target = this._focusedCells;\r\n                this._showPopup = true;\r\n                this._cellClickAction({\r\n                    event: e,\r\n                    cellElement: $(this._focusedCells),\r\n                    cellData: this.getCellData($cellElement)\r\n                })\r\n            }\r\n        };\r\n        var arrowPressHandler = function(e, cell) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this._moveToCell(cell, e.shiftKey)\r\n        };\r\n        return extend(this.callBase(), {\r\n            enter: clickHandler,\r\n            space: clickHandler,\r\n            downArrow: function(e) {\r\n                var $cell = this._getCellFromNextRow(\"next\", e.shiftKey);\r\n                arrowPressHandler.call(this, e, $cell)\r\n            },\r\n            upArrow: function(e) {\r\n                var $cell = this._getCellFromNextRow(\"prev\", e.shiftKey);\r\n                arrowPressHandler.call(this, e, $cell)\r\n            },\r\n            rightArrow: function(e) {\r\n                var $rightCell = this._getRightCell(e.shiftKey);\r\n                arrowPressHandler.call(this, e, $rightCell)\r\n            },\r\n            leftArrow: function(e) {\r\n                var $leftCell = this._getLeftCell(e.shiftKey);\r\n                arrowPressHandler.call(this, e, $leftCell)\r\n            }\r\n        })\r\n    },\r\n    _isRTL: function() {\r\n        return this.option(\"rtlEnabled\")\r\n    },\r\n    _getFocusedCell: function() {\r\n        return this._$focusedCell || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0)\r\n    },\r\n    _getAllFocusedCells: function() {\r\n        return this._focusedCells || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0)\r\n    },\r\n    _getCellFromNextRow: function(direction) {\r\n        var $currentCell = this._$focusedCell;\r\n        if (isDefined($currentCell)) {\r\n            var cellIndex = $currentCell.index();\r\n            var $row = $currentCell.parent();\r\n            var $cell = $row[direction]().children().eq(cellIndex);\r\n            $cell = this._checkForViewBounds($cell);\r\n            return $cell\r\n        }\r\n    },\r\n    _checkForViewBounds: function($item) {\r\n        if (!$item.length) {\r\n            $item = this._$focusedCell\r\n        }\r\n        return $item\r\n    },\r\n    _getRightCell: function(isMultiSelection) {\r\n        if (!isDefined(this._$focusedCell)) {\r\n            return\r\n        }\r\n        var $rightCell;\r\n        var $focusedCell = this._$focusedCell;\r\n        var groupCount = this._getGroupCount();\r\n        var rowCellCount = isMultiSelection ? this._getCellCount() : this._getTotalCellCount(groupCount);\r\n        var lastIndexInRow = rowCellCount - 1;\r\n        var edgeCellIndex = this._isRTL() ? 0 : lastIndexInRow;\r\n        var currentIndex = $focusedCell.index();\r\n        var direction = this._isRTL() ? \"prev\" : \"next\";\r\n        if (currentIndex === edgeCellIndex || isMultiSelection && this._isGroupEndCell($focusedCell)) {\r\n            var $row = $focusedCell.parent();\r\n            var sign = this._isRTL() ? 1 : -1;\r\n            $rightCell = $row[direction]().children().eq(currentIndex + sign * lastIndexInRow);\r\n            $rightCell = this._checkForViewBounds($rightCell)\r\n        } else {\r\n            $rightCell = $focusedCell[direction]()\r\n        }\r\n        return $rightCell\r\n    },\r\n    _isGroupEndCell: function($cell) {\r\n        var cellsInRow = this._getCellCount();\r\n        var currentCellIndex = $cell.index();\r\n        var result = currentCellIndex % cellsInRow;\r\n        return this._isRTL() ? 0 === result : result === cellsInRow - 1\r\n    },\r\n    _getLeftCell: function(isMultiSelection) {\r\n        if (!isDefined(this._$focusedCell)) {\r\n            return\r\n        }\r\n        var $leftCell;\r\n        var $focusedCell = this._$focusedCell;\r\n        var groupCount = this._getGroupCount();\r\n        var rowCellCount = isMultiSelection ? this._getCellCount() : this._getTotalCellCount(groupCount);\r\n        var lastIndexInRow = rowCellCount - 1;\r\n        var edgeCellIndex = this._isRTL() ? lastIndexInRow : 0;\r\n        var currentIndex = $focusedCell.index();\r\n        var direction = this._isRTL() ? \"next\" : \"prev\";\r\n        if (currentIndex === edgeCellIndex || isMultiSelection && this._isGroupStartCell($focusedCell)) {\r\n            var $row = $focusedCell.parent();\r\n            var sign = this._isRTL() ? -1 : 1;\r\n            $leftCell = $row[direction]().children().eq(currentIndex + sign * lastIndexInRow);\r\n            $leftCell = this._checkForViewBounds($leftCell)\r\n        } else {\r\n            $leftCell = $focusedCell[direction]()\r\n        }\r\n        return $leftCell\r\n    },\r\n    _isGroupStartCell: function($cell) {\r\n        var cellsInRow = this._getCellCount();\r\n        var currentCellIndex = $cell.index();\r\n        var result = currentCellIndex % cellsInRow;\r\n        return this._isRTL() ? result === cellsInRow - 1 : 0 === result\r\n    },\r\n    _moveToCell: function($cell, isMultiSelection) {\r\n        isMultiSelection = isMultiSelection && this.option(\"allowMultipleCellSelection\");\r\n        this._setFocusedCell($cell, isMultiSelection);\r\n        this._dateTableScrollable.scrollToElement($cell)\r\n    },\r\n    _setFocusedCell: function($cell, isMultiSelection) {\r\n        if (!isDefined($cell) || !$cell.length) {\r\n            return\r\n        }\r\n        this._releaseFocusedCell();\r\n        this._focusedCells = [];\r\n        if (isMultiSelection) {\r\n            $cell = this._correctCellForGroup($cell);\r\n            var orientation = \"day\" === this.option(\"type\") && (!this.option(\"groups\").length || \"vertical\" === this.option(\"groupOrientation\")) ? \"vertical\" : \"horizontal\";\r\n            var $targetCells = this._getCellsBetween($cell, this._$prevCell, orientation);\r\n            this._focusedCells = $targetCells.toArray()\r\n        } else {\r\n            this._focusedCells = [$cell.get(0)];\r\n            this._$prevCell = $cell\r\n        }\r\n        var $focusedCells = $(this._focusedCells);\r\n        this._toggleFocusClass(true, $focusedCells);\r\n        this.setAria(\"label\", \"Add appointment\", $focusedCells);\r\n        this._toggleFocusedCellClass(true, $cell);\r\n        this._$focusedCell = $cell;\r\n        var selectedCellData = this.getFocusedCellData();\r\n        this.option(\"selectedCellData\", selectedCellData);\r\n        this._selectionChangedAction({\r\n            selectedCellData: selectedCellData\r\n        })\r\n    },\r\n    _correctCellForGroup: function($cell) {\r\n        var $focusedCell = this._$focusedCell;\r\n        var cellGroupIndex = this._getGroupIndexByCell($cell);\r\n        var focusedCellGroupIndex = this._getGroupIndexByCell($focusedCell);\r\n        var isDifferentTables = this._hasAllDayClass($cell) !== this._hasAllDayClass($focusedCell);\r\n        return focusedCellGroupIndex !== cellGroupIndex || isDifferentTables ? $focusedCell : $cell\r\n    },\r\n    _getCellsBetween: function($first, $last, direction) {\r\n        var isAllDayTable = this._hasAllDayClass($last);\r\n        var $cells = this._getCells(isAllDayTable, direction);\r\n        var firstIndex = $cells.index($first);\r\n        var lastIndex = $cells.index($last);\r\n        if (firstIndex > lastIndex) {\r\n            var buffer = firstIndex;\r\n            firstIndex = lastIndex;\r\n            lastIndex = buffer\r\n        }\r\n        $cells = $cells.slice(firstIndex, lastIndex + 1);\r\n        if (this._getGroupCount() > 1) {\r\n            var result = [];\r\n            var focusedGroupIndex = this._getGroupIndexByCell($first);\r\n            each($cells, function(_, cell) {\r\n                var groupIndex = this._getGroupIndexByCell($(cell));\r\n                if (focusedGroupIndex === groupIndex) {\r\n                    result.push(cell)\r\n                }\r\n            }.bind(this));\r\n            $cells = $(result)\r\n        }\r\n        return $cells\r\n    },\r\n    _hasAllDayClass: function($cell) {\r\n        return $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS)\r\n    },\r\n    _getGroupIndexByCell: function($cell) {\r\n        var cellsInRow = this._getCellCount();\r\n        var currentCellIndex = $cell.index() + 1;\r\n        var groupIndex = Math.ceil(currentCellIndex / cellsInRow);\r\n        return groupIndex\r\n    },\r\n    _toggleFocusedCellClass: function(isFocused, $element) {\r\n        var $focusTarget = $element && $element.length ? $element : this._focusTarget();\r\n        $focusTarget.toggleClass(DATE_TABLE_FOCUSED_CELL_CLASS, isFocused)\r\n    },\r\n    _releaseFocusedCell: function($cell) {\r\n        $cell = $cell || $(this._focusedCells);\r\n        if (isDefined($cell) && $cell.length) {\r\n            this._toggleFocusClass(false, $cell);\r\n            this._toggleFocusedCellClass(false, $cell);\r\n            this.setAria(\"label\", void 0, $cell)\r\n        }\r\n        this.option(\"selectedCellData\", [])\r\n    },\r\n    _focusInHandler: function(e) {\r\n        if ($(e.target).is(this._focusTarget()) && false !== this._isCellClick) {\r\n            delete this._isCellClick;\r\n            delete this._contextMenuHandled;\r\n            this.callBase.apply(this, arguments);\r\n            var $cell = this._getFocusedCell();\r\n            this._setFocusedCell($cell)\r\n        }\r\n    },\r\n    _focusOutHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._contextMenuHandled) {\r\n            this._releaseFocusedCell()\r\n        }\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _activeStateUnit: \".\" + DATE_TABLE_CELL_CLASS + \", .\" + ALL_DAY_TABLE_CELL_CLASS,\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            currentDate: new Date,\r\n            intervalCount: 1,\r\n            startDate: null,\r\n            firstDayOfWeek: void 0,\r\n            startDayHour: 0,\r\n            endDayHour: 24,\r\n            hoursInterval: .5,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            groups: [],\r\n            showAllDayPanel: true,\r\n            allDayExpanded: false,\r\n            onCellClick: null,\r\n            crossScrollingEnabled: false,\r\n            dataCellTemplate: null,\r\n            timeCellTemplate: null,\r\n            resourceCellTemplate: null,\r\n            dateCellTemplate: null,\r\n            allowMultipleCellSelection: true,\r\n            indicatorTime: new Date,\r\n            indicatorUpdateInterval: 5 * toMs(\"minute\"),\r\n            shadeUntilCurrentTime: true,\r\n            groupOrientation: \"horizontal\",\r\n            selectedCellData: [],\r\n            groupByDate: false\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"dateCellTemplate\":\r\n            case \"resourceCellTemplate\":\r\n            case \"dataCellTemplate\":\r\n            case \"timeCellTemplate\":\r\n            case \"startDayHour\":\r\n            case \"endDayHour\":\r\n            case \"hoursInterval\":\r\n            case \"firstDayOfWeek\":\r\n            case \"currentDate\":\r\n            case \"startDate\":\r\n                this._cleanWorkSpace();\r\n                break;\r\n            case \"groups\":\r\n                this._cleanView();\r\n                this._removeAllDayElements();\r\n                this._initGrouping();\r\n                this.repaint();\r\n                break;\r\n            case \"groupOrientation\":\r\n                this._initGroupedStrategy();\r\n                this._createAllDayPanelElements();\r\n                this._removeAllDayElements();\r\n                this._cleanWorkSpace();\r\n                this._toggleGroupByDateClass();\r\n                break;\r\n            case \"showAllDayPanel\":\r\n                if (this._isVerticalGroupedWorkSpace()) {\r\n                    this._cleanView();\r\n                    this._removeAllDayElements();\r\n                    this._initGrouping();\r\n                    this.repaint()\r\n                } else {\r\n                    this._toggleAllDayVisibility()\r\n                }\r\n                break;\r\n            case \"allDayExpanded\":\r\n                this._changeAllDayVisibility();\r\n                this._attachTablesEvents();\r\n                this.headerPanelOffsetRecalculate();\r\n                this._updateScrollable();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._createSelectionChangedAction();\r\n                break;\r\n            case \"onCellClick\":\r\n                this._createCellClickAction();\r\n                break;\r\n            case \"onCellContextMenu\":\r\n                this._attachContextMenuEvent();\r\n                break;\r\n            case \"intervalCount\":\r\n                this._cleanWorkSpace();\r\n                this._toggleWorkSpaceCountClass();\r\n                this._toggleFixedScrollableClass();\r\n                break;\r\n            case \"groupByDate\":\r\n                this._cleanWorkSpace();\r\n                this._toggleGroupByDateClass();\r\n                break;\r\n            case \"crossScrollingEnabled\":\r\n                this._toggleHorizontalScrollClass();\r\n                this._dateTableScrollable.option(this._dateTableScrollableConfig());\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"allowMultipleCellSelection\":\r\n                break;\r\n            case \"selectedCellData\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _cleanWorkSpace: function() {\r\n        this._cleanView();\r\n        this._toggleGroupedClass();\r\n        this._toggleWorkSpaceWithOddCells();\r\n        this._renderView()\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initGrouping();\r\n        this._toggleHorizontalScrollClass();\r\n        this._toggleWorkSpaceCountClass();\r\n        this._toggleGroupByDateClass();\r\n        this._toggleWorkSpaceWithOddCells();\r\n        this._toggleWorkSpaceOverlappingClass();\r\n        this.$element().addClass(COMPONENT_CLASS).addClass(this._getElementClass())\r\n    },\r\n    _initGrouping: function() {\r\n        this._initGroupedStrategy();\r\n        this._toggleGroupingDirectionClass();\r\n        this._toggleGroupByDateClass()\r\n    },\r\n    _initGroupedStrategy: function() {\r\n        var strategyName = this.option(\"groups\").length ? this.option(\"groupOrientation\") : this._getDefaultGroupStrategy();\r\n        var Strategy = \"vertical\" === strategyName ? VerticalGroupedStrategy : HorizontalGroupedStrategy;\r\n        this._groupedStrategy = new Strategy(this)\r\n    },\r\n    _getDefaultGroupStrategy: function() {\r\n        return \"horizontal\"\r\n    },\r\n    _isVerticalGroupedWorkSpace: function() {\r\n        return !!this.option(\"groups\").length && \"vertical\" === this.option(\"groupOrientation\")\r\n    },\r\n    _isHorizontalGroupedWorkSpace: function() {\r\n        return !!this.option(\"groups\").length && \"horizontal\" === this.option(\"groupOrientation\")\r\n    },\r\n    _toggleHorizontalScrollClass: function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_BOTH_SCROLLS_CLASS, this.option(\"crossScrollingEnabled\"))\r\n    },\r\n    _toggleGroupByDateClass: function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_GROUP_BY_DATE_CLASS, this.isGroupedByDate())\r\n    },\r\n    _toggleWorkSpaceCountClass: function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_COUNT_CLASS, this._isWorkSpaceWithCount())\r\n    },\r\n    _isWorkSpaceWithCount: function() {\r\n        return this.option(\"intervalCount\") > 1\r\n    },\r\n    _toggleWorkSpaceWithOddCells: function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_ODD_CELLS_CLASS, this._isWorkspaceWithOddCells())\r\n    },\r\n    _isWorkspaceWithOddCells: function() {\r\n        return .5 === this.option(\"hoursInterval\")\r\n    },\r\n    _toggleWorkSpaceOverlappingClass: function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_OVERLAPPING_CLASS, this._isWorkSpaceWithOverlapping())\r\n    },\r\n    _isWorkSpaceWithOverlapping: function() {\r\n        return null !== this.invoke(\"getMaxAppointmentsPerCell\")\r\n    },\r\n    _toggleGroupingDirectionClass: function() {\r\n        this.$element().toggleClass(VERTICAL_GROUPED_WORKSPACE_CLASS, this._isVerticalGroupedWorkSpace())\r\n    },\r\n    _getRealGroupOrientation: function() {\r\n        return this._isVerticalGroupedWorkSpace() ? \"vertical\" : \"horizontal\"\r\n    },\r\n    _getTimePanelClass: function() {\r\n        return TIME_PANEL_CLASS\r\n    },\r\n    _getDateTableClass: function() {\r\n        return DATE_TABLE_CLASS\r\n    },\r\n    _getDateTableRowClass: function() {\r\n        return DATE_TABLE_ROW_CLASS\r\n    },\r\n    _getDateTableCellClass: function(i, j) {\r\n        var cellClass = DATE_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS + \" \" + VERTICAL_SIZES_CLASS;\r\n        return this._needApplyLastGroupCellClass() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1, i, j) : cellClass\r\n    },\r\n    _needApplyLastGroupCellClass: function() {\r\n        return true\r\n    },\r\n    _getGroupRowClass: function() {\r\n        return GROUP_ROW_CLASS\r\n    },\r\n    _getGroupHeaderClass: function(i) {\r\n        var cellClass = GROUP_HEADER_CLASS;\r\n        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1)\r\n    },\r\n    _getGroupHeaderContentClass: function() {\r\n        return GROUP_HEADER_CONTENT_CLASS\r\n    },\r\n    _initWorkSpaceUnits: function() {\r\n        this._$headerPanel = $(\"<table>\");\r\n        this._$thead = $(\"<thead>\").appendTo(this._$headerPanel);\r\n        this._$fixedContainer = $(\"<div>\").addClass(FIXED_CONTAINER_CLASS);\r\n        this._$allDayContainer = $(\"<div>\").addClass(ALL_DAY_CONTAINER_CLASS);\r\n        this._initAllDayPanelElements();\r\n        this._createAllDayPanelElements();\r\n        this._$timePanel = $(\"<table>\").addClass(this._getTimePanelClass());\r\n        this._$dateTable = $(\"<table>\");\r\n        this._$groupTable = $(\"<div>\").addClass(WORKSPACE_VERTICAL_GROUP_TABLE_CLASS)\r\n    },\r\n    _initAllDayPanelElements: function() {\r\n        this._allDayTitles = [];\r\n        this._allDayTables = [];\r\n        this._allDayPanels = []\r\n    },\r\n    _createAllDayPanelElements: function() {\r\n        var groupCount = this._getGroupCount();\r\n        if (this._isVerticalGroupedWorkSpace() && 0 !== groupCount) {\r\n            for (var i = 0; i < groupCount; i++) {\r\n                var $allDayTitle = $(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(messageLocalization.format(\"dxScheduler-allDay\"));\r\n                this._allDayTitles.push($allDayTitle);\r\n                this._$allDayTable = $(\"<table>\");\r\n                this._allDayTables.push(this._$allDayTable);\r\n                this._$allDayPanel = $(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);\r\n                this._allDayPanels.push(this._$allDayPanel)\r\n            }\r\n        } else {\r\n            this._$allDayTitle = $(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(messageLocalization.format(\"dxScheduler-allDay\")).appendTo(this.$element());\r\n            this._$allDayTable = $(\"<table>\");\r\n            this._$allDayPanel = $(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable)\r\n        }\r\n    },\r\n    _initDateTableScrollable: function() {\r\n        var $dateTableScrollable = $(\"<div>\").addClass(SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS);\r\n        this._dateTableScrollable = this._createComponent($dateTableScrollable, Scrollable, this._dateTableScrollableConfig())\r\n    },\r\n    _dateTableScrollableConfig: function() {\r\n        var config = {\r\n            useKeyboard: false,\r\n            bounceEnabled: false,\r\n            updateManually: true,\r\n            pushBackValue: 0\r\n        };\r\n        if (this._needCreateCrossScrolling()) {\r\n            config = extend(config, this._createCrossScrollingConfig())\r\n        }\r\n        return config\r\n    },\r\n    _createCrossScrollingConfig: function() {\r\n        var config = {};\r\n        var headerScrollableOnScroll;\r\n        var sidebarScrollableOnScroll;\r\n        config.direction = \"both\";\r\n        config.onStart = function(e) {\r\n            if (this._headerScrollable) {\r\n                headerScrollableOnScroll = this._headerScrollable.option(\"onScroll\");\r\n                this._headerScrollable.option(\"onScroll\", void 0)\r\n            }\r\n            if (this._sidebarScrollable) {\r\n                sidebarScrollableOnScroll = this._sidebarScrollable.option(\"onScroll\");\r\n                this._sidebarScrollable.option(\"onScroll\", void 0)\r\n            }\r\n        }.bind(this);\r\n        config.onScroll = function(e) {\r\n            this._sidebarScrollable && this._sidebarScrollable.scrollTo({\r\n                top: e.scrollOffset.top\r\n            });\r\n            this._headerScrollable && this._headerScrollable.scrollTo({\r\n                left: e.scrollOffset.left\r\n            })\r\n        }.bind(this);\r\n        config.onEnd = function() {\r\n            this.notifyObserver(\"updateResizableArea\", {});\r\n            this._headerScrollable && this._headerScrollable.option(\"onScroll\", headerScrollableOnScroll);\r\n            this._sidebarScrollable && this._sidebarScrollable.option(\"onScroll\", sidebarScrollableOnScroll)\r\n        }.bind(this);\r\n        return config\r\n    },\r\n    _createWorkSpaceElements: function() {\r\n        if (this.option(\"crossScrollingEnabled\")) {\r\n            this._createWorkSpaceScrollableElements()\r\n        } else {\r\n            this._createWorkSpaceStaticElements()\r\n        }\r\n    },\r\n    _createWorkSpaceStaticElements: function() {\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            this._dateTableScrollable.$content().append(this._$allDayContainer, this._$groupTable, this._$timePanel, this._$dateTable);\r\n            this.$element().append(this._$fixedContainer, this._$headerPanel, this._dateTableScrollable.$element())\r\n        } else {\r\n            this._dateTableScrollable.$content().append(this._$timePanel, this._$dateTable);\r\n            this.$element().append(this._$fixedContainer, this._$headerPanel, this._$allDayContainer, this._$allDayPanel, this._dateTableScrollable.$element())\r\n        }\r\n    },\r\n    _createWorkSpaceScrollableElements: function() {\r\n        this.$element().append(this._$fixedContainer);\r\n        this._createHeaderScrollable();\r\n        this._createSidebarScrollable();\r\n        this.$element().append(this._dateTableScrollable.$element());\r\n        this._headerScrollable.$content().append(this._$headerPanel);\r\n        this._dateTableScrollable.$content().append(this._$dateTable);\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            this._dateTableScrollable.$content().prepend(this._$allDayContainer);\r\n            this._sidebarScrollable.$content().append(this._$groupTable, this._$timePanel)\r\n        } else {\r\n            this._headerScrollable.$content().append(this._$allDayContainer, this._$allDayPanel)\r\n        }\r\n        this._sidebarScrollable.$content().append(this._$timePanel)\r\n    },\r\n    _createHeaderScrollable: function() {\r\n        var $headerScrollable = $(\"<div>\").addClass(SCHEDULER_HEADER_SCROLLABLE_CLASS).appendTo(this.$element());\r\n        this._headerScrollable = this._createComponent($headerScrollable, Scrollable, this._headerScrollableConfig())\r\n    },\r\n    _headerScrollableConfig: function() {\r\n        var dateTableScrollableOnScroll;\r\n        var config = {\r\n            useKeyboard: false,\r\n            showScrollbar: false,\r\n            direction: \"horizontal\",\r\n            useNative: false,\r\n            updateManually: true,\r\n            bounceEnabled: false,\r\n            pushBackValue: 0,\r\n            onStart: function(e) {\r\n                dateTableScrollableOnScroll = this._dateTableScrollable.option(\"onScroll\")\r\n            }.bind(this),\r\n            onScroll: function(e) {\r\n                this._dateTableScrollable.option(\"onScroll\", void 0);\r\n                this._dateTableScrollable.scrollTo({\r\n                    left: e.scrollOffset.left\r\n                });\r\n                this._dateTableScrollable.option(\"onScroll\", dateTableScrollableOnScroll)\r\n            }.bind(this)\r\n        };\r\n        return config\r\n    },\r\n    _createSidebarScrollable: function() {\r\n        var dateTableScrollableOnScroll;\r\n        var $timePanelScrollable = $(\"<div>\").addClass(SCHEDULER_SIDEBAR_SCROLLABLE_CLASS).appendTo(this.$element());\r\n        this._sidebarScrollable = this._createComponent($timePanelScrollable, Scrollable, {\r\n            useKeyboard: false,\r\n            showScrollbar: false,\r\n            direction: \"vertical\",\r\n            useNative: false,\r\n            updateManually: true,\r\n            bounceEnabled: false,\r\n            pushBackValue: 0,\r\n            onStart: function(e) {\r\n                dateTableScrollableOnScroll = this._dateTableScrollable.option(\"onScroll\");\r\n                this._dateTableScrollable.option(\"onScroll\", void 0)\r\n            }.bind(this),\r\n            onScroll: function(e) {\r\n                this._dateTableScrollable.scrollTo({\r\n                    top: e.scrollOffset.top\r\n                })\r\n            }.bind(this),\r\n            onEnd: function(e) {\r\n                this._dateTableScrollable.option(\"onScroll\", dateTableScrollableOnScroll)\r\n            }.bind(this)\r\n        })\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible && this._isVerticalGroupedWorkSpace()) {\r\n            this._setHorizontalGroupHeaderCellsHeight()\r\n        }\r\n        if (visible && this._needCreateCrossScrolling()) {\r\n            this._setTableSizes()\r\n        }\r\n    },\r\n    _attachTableClasses: function() {\r\n        this._addTableClass(this._$dateTable, this._getDateTableClass());\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            var groupCount = this._getGroupCount();\r\n            for (var i = 0; i < groupCount; i++) {\r\n                this._addTableClass(this._allDayTables[i], ALL_DAY_TABLE_CLASS)\r\n            }\r\n        } else {\r\n            this._addTableClass(this._$allDayTable, ALL_DAY_TABLE_CLASS)\r\n        }\r\n    },\r\n    _attachHeaderTableClasses: function() {\r\n        this._addTableClass(this._$headerPanel, HEADER_PANEL_CLASS)\r\n    },\r\n    _addTableClass: function($el, className) {\r\n        $el && !$el.hasClass(className) && $el.addClass(className)\r\n    },\r\n    _setTableSizes: function() {\r\n        this._attachTableClasses();\r\n        var cellWidth = this.getCellWidth();\r\n        if (cellWidth < this.getCellMinWidth()) {\r\n            cellWidth = this.getCellMinWidth()\r\n        }\r\n        var minWidth = this.getWorkSpaceMinWidth();\r\n        var $headerCells = this._$headerPanel.find(\"tr\").last().find(\"th\");\r\n        var width = cellWidth * $headerCells.length;\r\n        if (width < minWidth) {\r\n            width = minWidth\r\n        }\r\n        this._$headerPanel.width(width);\r\n        this._$dateTable.width(width);\r\n        this._$allDayTable && this._$allDayTable.width(width);\r\n        this._attachHeaderTableClasses();\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            this._setHorizontalGroupHeaderCellsHeight()\r\n        }\r\n    },\r\n    getWorkSpaceMinWidth: function() {\r\n        return this._groupedStrategy.getWorkSpaceMinWidth()\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this.option(\"crossScrollingEnabled\")) {\r\n            this._setTableSizes()\r\n        }\r\n        this.headerPanelOffsetRecalculate();\r\n        this._cleanCellDataCache();\r\n        this._cleanAllowedPositions()\r\n    },\r\n    _needCreateCrossScrolling: function() {\r\n        return this.option(\"crossScrollingEnabled\")\r\n    },\r\n    _getElementClass: noop,\r\n    _getRowCount: noop,\r\n    _getCellCount: noop,\r\n    _initMarkup: function() {\r\n        this._initWorkSpaceUnits();\r\n        this._initDateTableScrollable();\r\n        this._createWorkSpaceElements();\r\n        this.callBase();\r\n        if (!this.option(\"crossScrollingEnabled\")) {\r\n            this._attachTableClasses();\r\n            this._attachHeaderTableClasses()\r\n        }\r\n        this._toggleGroupedClass();\r\n        this._toggleFixedScrollableClass();\r\n        this._renderView();\r\n        this._attachEvents();\r\n        this._setFocusOnCellByOption(this.option(\"selectedCellData\"))\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderDateTimeIndication();\r\n        this._setIndicationUpdateInterval()\r\n    },\r\n    _toggleGroupedClass: function() {\r\n        this.$element().toggleClass(GROUPED_WORKSPACE_CLASS, this._getGroupCount() > 0)\r\n    },\r\n    _toggleFixedScrollableClass: noop,\r\n    _renderView: function() {\r\n        this._setFirstViewDate();\r\n        this._applyCellTemplates(this._renderGroupHeader());\r\n        this._renderDateHeader();\r\n        this._renderTimePanel();\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            var groupCount = this._getGroupCount();\r\n            for (var i = 0; i < groupCount; i++) {\r\n                this._renderAllDayPanel(i)\r\n            }\r\n        }\r\n        this._renderDateTable();\r\n        this._renderAllDayPanel();\r\n        this._updateGroupTableHeight();\r\n        this._shader = new VerticalShader\r\n    },\r\n    _updateGroupTableHeight: function() {\r\n        if (this._isVerticalGroupedWorkSpace() && windowUtils.hasWindow()) {\r\n            this._setHorizontalGroupHeaderCellsHeight()\r\n        }\r\n    },\r\n    _renderDateTimeIndication: noop,\r\n    _setIndicationUpdateInterval: noop,\r\n    _refreshDateTimeIndication: noop,\r\n    _setFocusOnCellByOption: function(data) {\r\n        var cells = [];\r\n        this._releaseFocusedCell();\r\n        for (var i = 0; i < data.length; i++) {\r\n            var groups = data[i].groups;\r\n            var groupIndex = this.option(\"groups\").length && groups ? this._getGroupIndexByResourceId(groups) : 0;\r\n            var allDay = !!data[i].allDay;\r\n            var coordinates = this.getCoordinatesByDate(data[i].startDate, groupIndex, allDay);\r\n            var $cell = this._getCellByCoordinates(coordinates, groupIndex);\r\n            if (isDefined($cell)) {\r\n                this._toggleFocusClass(true, $cell);\r\n                cells.push($cell.get(0))\r\n            }\r\n        }\r\n        this._focusedCells = cells\r\n    },\r\n    _getGroupIndexByResourceId: function(id) {\r\n        var groups = this.option(\"groups\");\r\n        var groupKey = Object.keys(id)[0];\r\n        var groupValue = id[groupKey];\r\n        var tree = this.invoke(\"createResourcesTree\", groups);\r\n        var index = 0;\r\n        for (var i = 0; i < tree.length; i++) {\r\n            if (tree[i].name === groupKey && tree[i].value === groupValue) {\r\n                index = tree[i].leafIndex\r\n            }\r\n        }\r\n        return index\r\n    },\r\n    _setFirstViewDate: function() {\r\n        var firstDayOfWeek = isDefined(this._firstDayOfWeek()) ? this._firstDayOfWeek() : dateLocalization.firstDayOfWeekIndex();\r\n        this._firstViewDate = dateUtils.getFirstWeekDate(this._getViewStartByOptions(), firstDayOfWeek);\r\n        this._setStartDayHour(this._firstViewDate)\r\n    },\r\n    _getViewStartByOptions: function() {\r\n        if (!this.option(\"startDate\")) {\r\n            return this.option(\"currentDate\")\r\n        } else {\r\n            var startDate = dateUtils.trimTime(this._getStartViewDate());\r\n            var currentDate = this.option(\"currentDate\");\r\n            var diff = startDate.getTime() <= currentDate.getTime() ? 1 : -1;\r\n            var endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff);\r\n            while (!this._dateInRange(currentDate, startDate, endDate, diff)) {\r\n                startDate = endDate;\r\n                endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff)\r\n            }\r\n            return diff > 0 ? startDate : endDate\r\n        }\r\n    },\r\n    _getHeaderDate: function() {\r\n        return this.getStartViewDate()\r\n    },\r\n    _getStartViewDate: function() {\r\n        return this.option(\"startDate\")\r\n    },\r\n    _dateInRange: function(date, startDate, endDate, diff) {\r\n        return diff > 0 ? dateUtils.dateInRange(date, startDate, new Date(endDate.getTime() - 1)) : dateUtils.dateInRange(date, endDate, startDate, \"date\")\r\n    },\r\n    _getIntervalDuration: function() {\r\n        return toMs(\"day\") * this.option(\"intervalCount\")\r\n    },\r\n    _setStartDayHour: function(date) {\r\n        var startDayHour = this.option(\"startDayHour\");\r\n        if (isDefined(startDayHour)) {\r\n            date.setHours(startDayHour, startDayHour % 1 * 60, 0, 0)\r\n        }\r\n    },\r\n    _firstDayOfWeek: function() {\r\n        return this.option(\"firstDayOfWeek\")\r\n    },\r\n    _attachEvents: function() {\r\n        this._createSelectionChangedAction();\r\n        this._attachClickEvent();\r\n        this._attachContextMenuEvent()\r\n    },\r\n    _attachClickEvent: function() {\r\n        var that = this;\r\n        var pointerDownAction = this._createAction(function(e) {\r\n            that._pointerDownHandler(e.event)\r\n        });\r\n        this._createCellClickAction();\r\n        var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\r\n        var $element = this.$element();\r\n        eventsEngine.off($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME);\r\n        eventsEngine.off($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME);\r\n        eventsEngine.on($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME, function(e) {\r\n            if (eventUtils.isMouseEvent(e) && e.which > 1) {\r\n                e.preventDefault();\r\n                return\r\n            }\r\n            pointerDownAction({\r\n                event: e\r\n            })\r\n        });\r\n        eventsEngine.on($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME, cellSelector, function(e) {\r\n            var $cell = $(e.target);\r\n            that._cellClickAction({\r\n                event: e,\r\n                cellElement: getPublicElement($cell),\r\n                cellData: that.getCellData($cell)\r\n            })\r\n        })\r\n    },\r\n    _createCellClickAction: function() {\r\n        var that = this;\r\n        this._cellClickAction = this._createActionByOption(\"onCellClick\", {\r\n            afterExecute: function(e) {\r\n                that._moveToClosestNonStub(e.args[0].event)\r\n            }\r\n        })\r\n    },\r\n    _createSelectionChangedAction: function() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n    },\r\n    _moveToClosestNonStub: function(e) {\r\n        var $target = $(e.target);\r\n        if (this._showPopup && this._hasFocusClass($target)) {\r\n            delete this._showPopup;\r\n            this._showAddAppointmentPopup($target)\r\n        }\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        var $target = $(e.target);\r\n        if (!$target.hasClass(DATE_TABLE_CELL_CLASS) && !$target.hasClass(ALL_DAY_TABLE_CELL_CLASS)) {\r\n            this._isCellClick = false;\r\n            return\r\n        }\r\n        this._isCellClick = true;\r\n        if ($target.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {\r\n            this._showPopup = true\r\n        } else {\r\n            this._setFocusedCell($target)\r\n        }\r\n    },\r\n    _showAddAppointmentPopup: function($cell) {\r\n        var firstCellData = this.getCellData($cell.first());\r\n        var lastCellData = this.getCellData($cell.last());\r\n        var args = {\r\n            startDate: firstCellData.startDate,\r\n            endDate: lastCellData.endDate\r\n        };\r\n        if (isDefined(lastCellData.allDay)) {\r\n            args.allDay = lastCellData.allDay\r\n        }\r\n        extend(args, lastCellData.groups);\r\n        this.notifyObserver(\"showAddAppointmentPopup\", args)\r\n    },\r\n    _attachContextMenuEvent: function() {\r\n        this._createContextMenuAction();\r\n        var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\r\n        var $element = this.$element();\r\n        var eventName = eventUtils.addNamespace(contextMenuEvent.name, this.NAME);\r\n        eventsEngine.off($element, eventName, cellSelector);\r\n        eventsEngine.on($element, eventName, cellSelector, this._contextMenuHandler.bind(this))\r\n    },\r\n    _contextMenuHandler: function(e) {\r\n        var $cell = $(e.target);\r\n        this._contextMenuAction({\r\n            event: e,\r\n            cellElement: getPublicElement($cell),\r\n            cellData: this.getCellData($cell)\r\n        });\r\n        this._contextMenuHandled = true\r\n    },\r\n    _createContextMenuAction: function() {\r\n        this._contextMenuAction = this._createActionByOption(\"onCellContextMenu\")\r\n    },\r\n    _getGroupHeaderContainer: function() {\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            return this._$groupTable\r\n        }\r\n        return this._$thead\r\n    },\r\n    _getDateHeaderContainer: function() {\r\n        return this._$thead\r\n    },\r\n    _renderGroupHeader: function() {\r\n        var $container = this._getGroupHeaderContainer();\r\n        var groupCount = this._getGroupCount();\r\n        var cellTemplates = [];\r\n        if (groupCount) {\r\n            var groupRows = this._makeGroupRows(this.option(\"groups\"), this.option(\"groupByDate\"));\r\n            this._attachGroupCountAttr(groupCount, groupRows);\r\n            $container.append(groupRows.elements);\r\n            cellTemplates = groupRows.cellTemplates\r\n        } else {\r\n            this._detachGroupCountAttr()\r\n        }\r\n        return cellTemplates\r\n    },\r\n    _applyCellTemplates: function(templates) {\r\n        templates.forEach(function(template) {\r\n            template()\r\n        })\r\n    },\r\n    _detachGroupCountAttr: function() {\r\n        var groupedAttr = this._groupedStrategy.getGroupCountAttr();\r\n        this.$element().removeAttr(groupedAttr.attr)\r\n    },\r\n    _attachGroupCountAttr: function(groupRowCount, groupRows) {\r\n        var groupedAttr = this._groupedStrategy.getGroupCountAttr(groupRowCount, groupRows);\r\n        this.$element().attr(groupedAttr.attr, groupedAttr.count)\r\n    },\r\n    headerPanelOffsetRecalculate: function() {\r\n        if (!this.option(\"resourceCellTemplate\") && !this.option(\"dateCellTemplate\")) {\r\n            return\r\n        }\r\n        var headerPanelHeight = this.getHeaderPanelHeight();\r\n        var headerHeight = this.invoke(\"getHeaderHeight\");\r\n        var allDayPanelHeight = this.supportAllDayRow() && this.option(\"showAllDayPanel\") ? this._groupedStrategy.getAllDayTableHeight() : 0;\r\n        headerPanelHeight && this._headerScrollable && this._headerScrollable.$element().height(headerPanelHeight + allDayPanelHeight);\r\n        headerPanelHeight && this._dateTableScrollable.$element().css({\r\n            paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\r\n            marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\r\n        });\r\n        headerPanelHeight && this._sidebarScrollable && this._sidebarScrollable.$element().css({\r\n            paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\r\n            marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\r\n        });\r\n        this._$allDayTitle && this._$allDayTitle.css(\"top\", headerHeight + headerPanelHeight + \"px\")\r\n    },\r\n    _makeGroupRows: function(groups, groupByDate) {\r\n        var tableCreatorStrategy = this._isVerticalGroupedWorkSpace() ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;\r\n        return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {\r\n            groupHeaderRowClass: this._getGroupRowClass(),\r\n            groupRowClass: this._getGroupRowClass(),\r\n            groupHeaderClass: this._getGroupHeaderClass.bind(this),\r\n            groupHeaderContentClass: this._getGroupHeaderContentClass()\r\n        }, this._getCellCount() || 1, this.option(\"resourceCellTemplate\"), this._getGroupCount(), groupByDate)\r\n    },\r\n    _getDateHeaderTemplate: function() {\r\n        return this.option(\"dateCellTemplate\")\r\n    },\r\n    _renderDateHeader: function() {\r\n        var $container = this._getDateHeaderContainer();\r\n        var $headerRow = $(\"<tr>\").addClass(HEADER_ROW_CLASS);\r\n        var count = this._getCellCount();\r\n        var cellTemplate = this._getDateHeaderTemplate();\r\n        var repeatCount = this._calculateHeaderCellRepeatCount();\r\n        var templateCallbacks = [];\r\n        var colspan = this.option(\"groupByDate\") ? this._getGroupCount() : 1;\r\n        var groupByDate = this.option(\"groupByDate\");\r\n        var i;\r\n        var j;\r\n        if (!groupByDate) {\r\n            for (j = 0; j < repeatCount; j++) {\r\n                for (i = 0; i < count; i++) {\r\n                    this._renderDateHeaderTemplate($headerRow, i, j * repeatCount + i, cellTemplate, templateCallbacks)\r\n                }\r\n            }\r\n            $container.append($headerRow)\r\n        } else {\r\n            for (i = 0; i < count; i++) {\r\n                var $cell = this._renderDateHeaderTemplate($headerRow, i, i * repeatCount, cellTemplate, templateCallbacks);\r\n                $cell.attr(\"colSpan\", colspan)\r\n            }\r\n            $container.prepend($headerRow)\r\n        }\r\n        this._applyCellTemplates(templateCallbacks);\r\n        return $headerRow\r\n    },\r\n    _renderDateHeaderTemplate: function($container, i, calculatedIndex, cellTemplate, templateCallbacks) {\r\n        var text = this._getHeaderText(i);\r\n        var $cell = $(\"<th>\").addClass(this._getHeaderPanelCellClass(i)).attr(\"title\", text);\r\n        if (cellTemplate && cellTemplate.render) {\r\n            templateCallbacks.push(cellTemplate.render.bind(cellTemplate, {\r\n                model: {\r\n                    text: text,\r\n                    date: this._getDateByIndex(i)\r\n                },\r\n                index: calculatedIndex,\r\n                container: getPublicElement($cell)\r\n            }))\r\n        } else {\r\n            $cell.text(text)\r\n        }\r\n        $container.append($cell);\r\n        return $cell\r\n    },\r\n    _getHeaderPanelCellClass: function(i) {\r\n        var cellClass = HEADER_PANEL_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\r\n        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1)\r\n    },\r\n    _calculateHeaderCellRepeatCount: function() {\r\n        return this._groupedStrategy.calculateHeaderCellRepeatCount()\r\n    },\r\n    _renderAllDayPanel: function(index) {\r\n        var cellCount = this._getCellCount();\r\n        if (!this._isVerticalGroupedWorkSpace()) {\r\n            cellCount *= this._getGroupCount() || 1\r\n        }\r\n        var cellTemplates = this._renderTableBody({\r\n            container: this._allDayPanels.length ? getPublicElement(this._allDayTables[index]) : getPublicElement(this._$allDayTable),\r\n            rowCount: 1,\r\n            cellCount: cellCount,\r\n            cellClass: this._getAllDayPanelCellClass.bind(this),\r\n            rowClass: ALL_DAY_TABLE_ROW_CLASS,\r\n            cellTemplate: this.option(\"dataCellTemplate\"),\r\n            getCellData: this._getAllDayCellData.bind(this),\r\n            groupIndex: index\r\n        }, true);\r\n        this._toggleAllDayVisibility();\r\n        this._applyCellTemplates(cellTemplates)\r\n    },\r\n    _getAllDayPanelCellClass: function(i, j) {\r\n        var cellClass = ALL_DAY_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\r\n        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1)\r\n    },\r\n    _getAllDayCellData: function(cell, rowIndex, cellIndex, groupIndex) {\r\n        var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\r\n        startDate = dateUtils.trimTime(startDate);\r\n        var data = {\r\n            startDate: startDate,\r\n            endDate: new Date(startDate.getTime() + DAY_MS),\r\n            allDay: true\r\n        };\r\n        var groups = this._getCellGroups(groupIndex || this._getGroupIndex(rowIndex, cellIndex));\r\n        if (groups.length) {\r\n            data.groups = {}\r\n        }\r\n        for (var i = 0; i < groups.length; i++) {\r\n            data.groups[groups[i].name] = groups[i].id\r\n        }\r\n        return {\r\n            key: CELL_DATA,\r\n            value: data\r\n        }\r\n    },\r\n    _toggleAllDayVisibility: function() {\r\n        var showAllDayPanel = this.option(\"showAllDayPanel\");\r\n        this._$allDayPanel.toggle(showAllDayPanel);\r\n        this._$allDayTitle && this._$allDayTitle.toggleClass(ALL_DAY_TITLE_HIDDEN_CLASS, !showAllDayPanel);\r\n        this.$element().toggleClass(WORKSPACE_WITH_ALL_DAY_CLASS, showAllDayPanel);\r\n        this._changeAllDayVisibility();\r\n        this._updateScrollable()\r\n    },\r\n    _changeAllDayVisibility: function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS, !this.option(\"allDayExpanded\") && this.option(\"showAllDayPanel\"))\r\n    },\r\n    _updateScrollable: function() {\r\n        this._dateTableScrollable.update();\r\n        this._headerScrollable && this._headerScrollable.update();\r\n        this._sidebarScrollable && this._sidebarScrollable.update()\r\n    },\r\n    _renderTimePanel: function() {\r\n        var repeatCount = this._groupedStrategy.calculateTimeCellRepeatCount();\r\n        this._renderTableBody({\r\n            container: getPublicElement(this._$timePanel),\r\n            rowCount: this._getTimePanelRowCount() * repeatCount,\r\n            cellCount: 1,\r\n            cellClass: this._getTimeCellClass.bind(this),\r\n            rowClass: TIME_PANEL_ROW_CLASS,\r\n            cellTemplate: this.option(\"timeCellTemplate\"),\r\n            getCellText: this._getTimeText.bind(this),\r\n            getCellDate: this._getTimeCellDate.bind(this),\r\n            groupCount: this._getGroupCount(),\r\n            allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0\r\n        })\r\n    },\r\n    _getTimePanelRowCount: function() {\r\n        return this._getCellCountInDay()\r\n    },\r\n    _getCellCountInDay: function() {\r\n        return Math.ceil(this._calculateDayDuration() / this.option(\"hoursInterval\"))\r\n    },\r\n    _calculateDayDuration: function() {\r\n        return this.option(\"endDayHour\") - this.option(\"startDayHour\")\r\n    },\r\n    _getTimeCellClass: function(i) {\r\n        var cellClass = TIME_PANEL_CELL_CLASS + \" \" + VERTICAL_SIZES_CLASS;\r\n        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i, i)\r\n    },\r\n    _getTimeText: function(i) {\r\n        var startViewDate = this._getTimeCellDate(i);\r\n        var index = i % this._getRowCount();\r\n        if (index % 2 === 0) {\r\n            return dateLocalization.format(startViewDate, \"shorttime\")\r\n        }\r\n        return \"\"\r\n    },\r\n    _getTimeCellDate: function(i) {\r\n        var startViewDate = new Date(this.getStartViewDate());\r\n        var timeCellDuration = Math.round(this.getCellDuration());\r\n        var lastCellInDay = this._calculateDayDuration() / this.option(\"hoursInterval\");\r\n        startViewDate.setMilliseconds(startViewDate.getMilliseconds() + timeCellDuration * (i % lastCellInDay));\r\n        return startViewDate\r\n    },\r\n    _renderDateTable: function() {\r\n        var groupCount = this._getGroupCount();\r\n        this._renderTableBody({\r\n            container: getPublicElement(this._$dateTable),\r\n            rowCount: this._getTotalRowCount(groupCount),\r\n            cellCount: this._getTotalCellCount(groupCount),\r\n            cellClass: this._getDateTableCellClass.bind(this),\r\n            rowClass: this._getDateTableRowClass(),\r\n            cellTemplate: this.option(\"dataCellTemplate\"),\r\n            getCellData: this._getCellData.bind(this),\r\n            allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayPanels : void 0,\r\n            groupCount: groupCount,\r\n            groupByDate: this.option(\"groupByDate\")\r\n        })\r\n    },\r\n    _insertAllDayRowsIntoDateTable: function() {\r\n        return this._groupedStrategy.insertAllDayRowsIntoDateTable()\r\n    },\r\n    _getTotalCellCount: function(groupCount) {\r\n        return this._groupedStrategy.getTotalCellCount(groupCount)\r\n    },\r\n    _getTotalRowCount: function() {\r\n        return this._groupedStrategy.getTotalRowCount()\r\n    },\r\n    _getCellData: function(cell, rowIndex, cellIndex) {\r\n        var data = this._prepareCellData(rowIndex, cellIndex, cell);\r\n        return {\r\n            key: CELL_DATA,\r\n            value: data\r\n        }\r\n    },\r\n    _prepareCellData: function(rowIndex, cellIndex) {\r\n        var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\r\n        var endDate = this.calculateEndDate(startDate);\r\n        var data = {\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            allDay: this._getTableAllDay()\r\n        };\r\n        var groups = this._getCellGroups(this._getGroupIndex(rowIndex, cellIndex));\r\n        if (groups.length) {\r\n            data.groups = {}\r\n        }\r\n        for (var i = 0; i < groups.length; i++) {\r\n            data.groups[groups[i].name] = groups[i].id\r\n        }\r\n        return data\r\n    },\r\n    _getGroupIndex: function(rowIndex, cellIndex) {\r\n        return this._groupedStrategy.getGroupIndex(rowIndex, cellIndex)\r\n    },\r\n    _getTableAllDay: function() {\r\n        return false\r\n    },\r\n    calculateEndDate: function(startDate) {\r\n        var result = new Date(startDate);\r\n        result.setMilliseconds(result.getMilliseconds() + Math.round(this._getInterval()));\r\n        return result\r\n    },\r\n    _getGroupCount: function() {\r\n        var groups = this.option(\"groups\");\r\n        var result = 0;\r\n        for (var i = 0, len = groups.length; i < len; i++) {\r\n            if (!i) {\r\n                result = groups[i].items.length\r\n            } else {\r\n                result *= groups[i].items.length\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _getPathToLeaf: function(leafIndex) {\r\n        var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\r\n\r\n        function findLeafByIndex(data, index) {\r\n            for (var i = 0; i < data.length; i++) {\r\n                if (data[i].leafIndex === index) {\r\n                    return data[i]\r\n                } else {\r\n                    var _leaf = findLeafByIndex(data[i].children, index);\r\n                    if (_leaf) {\r\n                        return _leaf\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function makeBranch(leaf, result) {\r\n            result = result || [];\r\n            result.push(leaf.value);\r\n            if (leaf.parent) {\r\n                makeBranch(leaf.parent, result)\r\n            }\r\n            return result\r\n        }\r\n        var leaf = findLeafByIndex(tree, leafIndex);\r\n        return makeBranch(leaf).reverse()\r\n    },\r\n    _getCellGroups: function(groupIndex) {\r\n        var result = [];\r\n        if (this._getGroupCount()) {\r\n            var groups = this.option(\"groups\");\r\n            if (groupIndex < 0) {\r\n                return\r\n            }\r\n            var path = this._getPathToLeaf(groupIndex);\r\n            for (var i = 0; i < groups.length; i++) {\r\n                result.push({\r\n                    name: groups[i].name,\r\n                    id: path[i]\r\n                })\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _attachTablesEvents: function() {\r\n        var that = this;\r\n        var isPointerDown = false;\r\n        var cellHeight;\r\n        var cellWidth;\r\n        var $element = this.$element();\r\n        eventsEngine.off($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME);\r\n        eventsEngine.off($element, SCHEDULER_CELL_DXDROP_EVENT_NAME);\r\n        eventsEngine.off($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME);\r\n        eventsEngine.off($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME);\r\n        eventsEngine.on($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, {\r\n            itemSizeFunc: function($element) {\r\n                if (!cellHeight) {\r\n                    cellHeight = $element.get(0).getBoundingClientRect().height\r\n                }\r\n                if (!cellWidth) {\r\n                    cellWidth = $element.get(0).getBoundingClientRect().width\r\n                }\r\n                return {\r\n                    width: cellWidth,\r\n                    height: cellHeight\r\n                }\r\n            }\r\n        }, function(e) {\r\n            if (that._$currentTableTarget) {\r\n                that._$currentTableTarget.removeClass(DATE_TABLE_DROPPABLE_CELL_CLASS)\r\n            }\r\n            that._$currentTableTarget = $(e.target);\r\n            that._$currentTableTarget.addClass(DATE_TABLE_DROPPABLE_CELL_CLASS)\r\n        });\r\n        eventsEngine.on($element, SCHEDULER_CELL_DXDROP_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function(e) {\r\n            $(e.target).removeClass(DATE_TABLE_DROPPABLE_CELL_CLASS);\r\n            cellHeight = 0;\r\n            cellWidth = 0\r\n        });\r\n        eventsEngine.on($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function(e) {\r\n            if (eventUtils.isMouseEvent(e) && 1 === e.which) {\r\n                isPointerDown = true;\r\n                that.$element().addClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);\r\n                eventsEngine.off(domAdapter.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\r\n                eventsEngine.on(domAdapter.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME, function() {\r\n                    isPointerDown = false;\r\n                    that.$element().removeClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS)\r\n                })\r\n            }\r\n        });\r\n        eventsEngine.on($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function(e) {\r\n            if (isPointerDown && that._dateTableScrollable && !that._dateTableScrollable.option(\"scrollByContent\")) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                that._moveToCell($(e.target), true)\r\n            }\r\n        })\r\n    },\r\n    _getDateTables: function() {\r\n        return this._$dateTable.add(this._$allDayTable)\r\n    },\r\n    _getDateTable: function() {\r\n        return this._$dateTable\r\n    },\r\n    _getAllDayTable: function() {\r\n        return this._$allDayTable\r\n    },\r\n    _getInterval: function() {\r\n        if (void 0 === this._interval) {\r\n            this._interval = this.option(\"hoursInterval\") * HOUR_MS\r\n        }\r\n        return this._interval\r\n    },\r\n    _getHeaderText: function(headerIndex) {\r\n        return dateLocalization.format(this._getDateByIndex(headerIndex), this._getFormat())\r\n    },\r\n    _getDateByIndex: abstract,\r\n    _getFormat: abstract,\r\n    _calculateCellIndex: function(rowIndex, cellIndex) {\r\n        return this._groupedStrategy.calculateCellIndex(rowIndex, cellIndex)\r\n    },\r\n    _renderTableBody: function(options, delayCellTemplateRendering) {\r\n        var result = [];\r\n        if (!delayCellTemplateRendering) {\r\n            this._applyCellTemplates(tableCreator.makeTable(options))\r\n        } else {\r\n            result = tableCreator.makeTable(options)\r\n        }\r\n        return result\r\n    },\r\n    _removeAllDayElements: function() {\r\n        this._$allDayTable && this._$allDayTable.remove();\r\n        this._$allDayTitle && this._$allDayTitle.remove()\r\n    },\r\n    _cleanView: function() {\r\n        this._cleanCellDataCache();\r\n        this._cleanAllowedPositions();\r\n        this._$thead.empty();\r\n        this._$dateTable.empty();\r\n        this._shader && this._shader.clean();\r\n        this._$timePanel.empty();\r\n        this._$allDayTable && this._$allDayTable.empty();\r\n        this._$groupTable.empty();\r\n        delete this._hiddenInterval;\r\n        delete this._interval\r\n    },\r\n    _clean: function() {\r\n        eventsEngine.off(domAdapter.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\r\n        this.callBase()\r\n    },\r\n    getWorkArea: function() {\r\n        return this._dateTableScrollable.$content()\r\n    },\r\n    getScrollable: function() {\r\n        return this._dateTableScrollable\r\n    },\r\n    getScrollableScrollTop: function() {\r\n        return this._dateTableScrollable.scrollTop()\r\n    },\r\n    getGroupedScrollableScrollTop: function(allDay) {\r\n        return this._groupedStrategy.getScrollableScrollTop(allDay)\r\n    },\r\n    getScrollableScrollLeft: function() {\r\n        return this._dateTableScrollable.scrollLeft()\r\n    },\r\n    getScrollableOuterWidth: function() {\r\n        return this._dateTableScrollable.scrollWidth()\r\n    },\r\n    getScrollableContainer: function() {\r\n        return this._dateTableScrollable._container()\r\n    },\r\n    getHeaderPanelHeight: function() {\r\n        return this._$headerPanel && this._$headerPanel.outerHeight(true)\r\n    },\r\n    getTimePanelWidth: function() {\r\n        return this._$timePanel && this._$timePanel.get(0).getBoundingClientRect().width\r\n    },\r\n    getGroupTableWidth: function() {\r\n        return this._$groupTable ? this._$groupTable.outerWidth() : 0\r\n    },\r\n    getWorkSpaceLeftOffset: function() {\r\n        return this._groupedStrategy.getLeftOffset()\r\n    },\r\n    getGroupedStrategy: function() {\r\n        return this._groupedStrategy\r\n    },\r\n    _getCellCoordinatesByIndex: function(index) {\r\n        var cellIndex = Math.floor(index / this._getRowCount());\r\n        var rowIndex = index - this._getRowCount() * cellIndex;\r\n        return {\r\n            cellIndex: cellIndex,\r\n            rowIndex: rowIndex\r\n        }\r\n    },\r\n    _getDateByCellIndexes: function(rowIndex, cellIndex, patchedIndexes) {\r\n        cellIndex = !patchedIndexes ? this._patchCellIndex(cellIndex) : cellIndex;\r\n        var firstViewDate = this.getStartViewDate();\r\n        var currentDate = new Date(firstViewDate.getTime() + this._getMillisecondsOffset(rowIndex, cellIndex) + this._getOffsetByCount(cellIndex));\r\n        currentDate.setTime(currentDate.getTime() + dateUtils.getTimezonesDifference(firstViewDate, currentDate));\r\n        return currentDate\r\n    },\r\n    _patchCellIndex: function(cellIndex) {\r\n        if (this.isGroupedByDate()) {\r\n            cellIndex = Math.floor(cellIndex / this._getGroupCount())\r\n        }\r\n        return cellIndex\r\n    },\r\n    _getOffsetByCount: function() {\r\n        return 0\r\n    },\r\n    _getMillisecondsOffset: function(rowIndex, cellIndex) {\r\n        return this._getInterval() * this._calculateCellIndex(rowIndex, cellIndex) + this._calculateHiddenInterval(rowIndex, cellIndex)\r\n    },\r\n    _calculateHiddenInterval: function(rowIndex, cellIndex) {\r\n        var dayCount = cellIndex % this._getCellCount();\r\n        return dayCount * this._getHiddenInterval()\r\n    },\r\n    _getHiddenInterval: function() {\r\n        if (void 0 === this._hiddenInterval) {\r\n            this._hiddenInterval = DAY_MS - this.getVisibleDayDuration()\r\n        }\r\n        return this._hiddenInterval\r\n    },\r\n    _getIntervalBetween: function(currentDate, allDay) {\r\n        var firstViewDate = this.getStartViewDate();\r\n        var startDayTime = this.option(\"startDayHour\") * HOUR_MS;\r\n        var timeZoneOffset = dateUtils.getTimezonesDifference(firstViewDate, currentDate);\r\n        var fullInterval = currentDate.getTime() - firstViewDate.getTime() - timeZoneOffset;\r\n        var days = this._getDaysOfInterval(fullInterval, startDayTime);\r\n        var weekendsCount = this._getWeekendsCount(days);\r\n        var result = (days - weekendsCount) * DAY_MS;\r\n        if (!allDay) {\r\n            result = fullInterval - days * this._getHiddenInterval() - weekendsCount * this.getVisibleDayDuration()\r\n        }\r\n        return result\r\n    },\r\n    _getWeekendsCount: function() {\r\n        return 0\r\n    },\r\n    _getDaysOfInterval: function(fullInterval, startDayTime) {\r\n        return Math.floor((fullInterval + startDayTime) / DAY_MS)\r\n    },\r\n    _getGroupIndexes: function(appointmentResources) {\r\n        var result = [];\r\n        if (appointmentResources && this.option(\"groups\").length) {\r\n            var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\r\n            result = this.invoke(\"getResourceTreeLeaves\", tree, appointmentResources)\r\n        }\r\n        return result\r\n    },\r\n    _updateIndex: function(index) {\r\n        return index * this._getRowCount()\r\n    },\r\n    _getDroppableCell: function() {\r\n        return this._getDateTables().find(\".\" + DATE_TABLE_DROPPABLE_CELL_CLASS)\r\n    },\r\n    _getWorkSpaceWidth: function() {\r\n        if (this._needCreateCrossScrolling()) {\r\n            return this._$dateTable.get(0).getBoundingClientRect().width\r\n        }\r\n        return this.$element().get(0).getBoundingClientRect().width - this.getTimePanelWidth()\r\n    },\r\n    _getCellPositionByIndex: function(index, groupIndex, inAllDayRow) {\r\n        var cellCoordinates = this._getCellCoordinatesByIndex(index);\r\n        var $cell = this._getCellByCoordinates(cellCoordinates, groupIndex, inAllDayRow);\r\n        var result = this._getCellPosition($cell);\r\n        this.setCellDataCache(cellCoordinates, groupIndex, $cell);\r\n        if (result) {\r\n            result.rowIndex = cellCoordinates.rowIndex;\r\n            result.cellIndex = cellCoordinates.cellIndex\r\n        }\r\n        return result\r\n    },\r\n    _getCellPosition: function($cell) {\r\n        var position = $cell.position();\r\n        if (this.option(\"rtlEnabled\")) {\r\n            position.left += $cell.get(0).getBoundingClientRect().width\r\n        }\r\n        return position\r\n    },\r\n    _getCellByCoordinates: function(cellCoordinates, groupIndex, inAllDayRow) {\r\n        var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex, inAllDayRow);\r\n        return this._$dateTable.find(\"tr\").eq(indexes.rowIndex).find(\"td\").eq(indexes.cellIndex)\r\n    },\r\n    _getCells: function(allDay, direction) {\r\n        var cellClass = allDay ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;\r\n        if (\"vertical\" === direction) {\r\n            var result = [];\r\n            for (var i = 1;; i++) {\r\n                var cells = this.$element().find(\"tr .\".concat(cellClass, \":nth-child(\").concat(i, \")\"));\r\n                if (!cells.length) {\r\n                    break\r\n                }\r\n                result = result.concat(cells.toArray())\r\n            }\r\n            return $(result)\r\n        } else {\r\n            return this.$element().find(\".\" + cellClass)\r\n        }\r\n    },\r\n    _setHorizontalGroupHeaderCellsHeight: function() {\r\n        var height = this._$dateTable.get(0).getBoundingClientRect().height;\r\n        this._$groupTable.outerHeight(height)\r\n    },\r\n    _getDateTableBorder: function() {\r\n        return DATE_TABLE_CELL_BORDER\r\n    },\r\n    _getDateTableBorderOffset: function() {\r\n        return 2 * this._getDateTableBorder()\r\n    },\r\n    _getGroupHeaderCellsContent: function() {\r\n        return this.$element().find(\".\" + GROUP_HEADER_CONTENT_CLASS)\r\n    },\r\n    _getGroupHeaderCells: function() {\r\n        return this.$element().find(\".\" + GROUP_HEADER_CLASS)\r\n    },\r\n    _getScrollCoordinates: function(hours, minutes, date) {\r\n        var currentDate = date || new Date(this.option(\"currentDate\"));\r\n        var startDayHour = this.option(\"startDayHour\");\r\n        var endDayHour = this.option(\"endDayHour\");\r\n        if (hours < startDayHour) {\r\n            hours = startDayHour\r\n        }\r\n        if (hours >= endDayHour) {\r\n            hours = endDayHour - 1\r\n        }\r\n        currentDate.setHours(hours, minutes, 0, 0);\r\n        return this.getCoordinatesByDate(currentDate)\r\n    },\r\n    setCellDataCache: function(cellCoordinates, groupIndex, $cell) {\r\n        var cache = this.getCellDataCache();\r\n        var data = this.getCellData($cell);\r\n        var key = JSON.stringify({\r\n            rowIndex: cellCoordinates.rowIndex,\r\n            cellIndex: cellCoordinates.cellIndex,\r\n            groupIndex: groupIndex\r\n        });\r\n        cache[key] = data\r\n    },\r\n    setCellDataCacheAlias: function(appointment, geometry) {\r\n        var key = JSON.stringify({\r\n            rowIndex: appointment.rowIndex,\r\n            cellIndex: appointment.cellIndex,\r\n            groupIndex: appointment.groupIndex\r\n        });\r\n        var aliasKey = JSON.stringify({\r\n            top: geometry.top,\r\n            left: geometry.left\r\n        });\r\n        var cache = this.getCellDataCache();\r\n        if (cache[key]) {\r\n            cache[aliasKey] = cache[key]\r\n        }\r\n    },\r\n    getCellDataCache: function(key) {\r\n        if (!this._cache) {\r\n            this._cache = {}\r\n        }\r\n        return key ? this._cache[key] : this._cache\r\n    },\r\n    _cleanCellDataCache: function() {\r\n        delete this._cache\r\n    },\r\n    _cleanAllowedPositions: function() {\r\n        delete this._maxAllowedVerticalPosition;\r\n        delete this._maxAllowedPosition\r\n    },\r\n    supportAllDayRow: function() {\r\n        return true\r\n    },\r\n    keepOriginalHours: function() {\r\n        return false\r\n    },\r\n    getFocusedCellData: function() {\r\n        var $focusedCells = this._getAllFocusedCells();\r\n        var result = [];\r\n        if ($focusedCells.length > 1) {\r\n            result = this._getMultipleCellsData($focusedCells)\r\n        } else {\r\n            var data = this.getCellData($focusedCells);\r\n            data && result.push(data)\r\n        }\r\n        return result\r\n    },\r\n    _getMultipleCellsData: function($cells) {\r\n        var data = [];\r\n        for (var i = 0; i < $cells.length; i++) {\r\n            data.push(dataUtils.data($cells[i], CELL_DATA))\r\n        }\r\n        return data\r\n    },\r\n    getCellData: function($cell) {\r\n        var data = $cell[0] ? dataUtils.data($cell[0], CELL_DATA) : void 0;\r\n        return extend(true, {}, data)\r\n    },\r\n    _getHorizontalMax: function(groupIndex) {\r\n        groupIndex = this.option(\"groupByDate\") ? this._getGroupCount() - 1 : groupIndex;\r\n        return this._groupedStrategy.getHorizontalMax(groupIndex)\r\n    },\r\n    getCoordinatesByDate: function(date, groupIndex, inAllDayRow) {\r\n        groupIndex = groupIndex || 0;\r\n        var index = this.getCellIndexByDate(date, inAllDayRow);\r\n        var position = this._getCellPositionByIndex(index, groupIndex, inAllDayRow);\r\n        var shift = this.getPositionShift(inAllDayRow ? 0 : this.getTimeShift(date), inAllDayRow);\r\n        var horizontalHMax = this._getHorizontalMax(groupIndex, date);\r\n        if (!position) {\r\n            throw errors.Error(\"E1039\")\r\n        }\r\n        var coordinates = {\r\n            cellPosition: position.left + shift.cellPosition,\r\n            top: position.top + shift.top,\r\n            left: position.left + shift.left,\r\n            rowIndex: position.rowIndex,\r\n            cellIndex: position.cellIndex,\r\n            hMax: horizontalHMax,\r\n            vMax: this.getVerticalMax(groupIndex),\r\n            groupIndex: groupIndex\r\n        };\r\n        return coordinates\r\n    },\r\n    getVerticalMax: function(groupIndex) {\r\n        return this._groupedStrategy.getVerticalMax(groupIndex)\r\n    },\r\n    _getOffsetByAllDayPanel: function(groupIndex) {\r\n        return this._groupedStrategy._getOffsetByAllDayPanel(groupIndex)\r\n    },\r\n    _getGroupTop: function(groupIndex) {\r\n        return this._groupedStrategy._getGroupTop(groupIndex)\r\n    },\r\n    isGroupedByDate: function() {\r\n        return this.option(\"groupByDate\") && this._isHorizontalGroupedWorkSpace() && this._getGroupCount() > 0\r\n    },\r\n    getCellIndexByDate: function(date, inAllDayRow) {\r\n        var timeInterval = inAllDayRow ? 864e5 : this._getInterval();\r\n        var dateTimeStamp = this._getIntervalBetween(date, inAllDayRow);\r\n        var index = Math.floor(dateTimeStamp / timeInterval);\r\n        if (inAllDayRow) {\r\n            index = this._updateIndex(index)\r\n        }\r\n        if (index < 0) {\r\n            index = 0\r\n        }\r\n        return index\r\n    },\r\n    getPositionShift: function(timeShift, isAllDay) {\r\n        return {\r\n            top: timeShift * this.getCellHeight(),\r\n            left: 0,\r\n            cellPosition: 0\r\n        }\r\n    },\r\n    getTimeShift: function(date) {\r\n        var cellDuration = this.getCellDuration();\r\n        var currentDayStart = new Date(date);\r\n        var currentDayEndHour = new Date(new Date(date).setHours(this.option(\"endDayHour\"), 0, 0));\r\n        if (date.getTime() <= currentDayEndHour.getTime()) {\r\n            currentDayStart.setHours(this.option(\"startDayHour\"), 0, 0, 0)\r\n        }\r\n        var currentDateTime = date.getTime();\r\n        var currentDayStartTime = currentDayStart.getTime();\r\n        var minTime = this._firstViewDate.getTime();\r\n        return currentDateTime > minTime ? (currentDateTime - currentDayStartTime) % cellDuration / cellDuration : 0\r\n    },\r\n    getCoordinatesByDateInGroup: function(date, appointmentResources, inAllDayRow) {\r\n        var indexes = this._getGroupIndexes(appointmentResources);\r\n        var result = [];\r\n        if (indexes.length) {\r\n            for (var i = 0; i < indexes.length; i++) {\r\n                result.push(this.getCoordinatesByDate(date, indexes[i], inAllDayRow))\r\n            }\r\n        } else {\r\n            result.push(this.getCoordinatesByDate(date, 0, inAllDayRow))\r\n        }\r\n        return result\r\n    },\r\n    getDroppableCellIndex: function() {\r\n        var $droppableCell = this._getDroppableCell();\r\n        var $row = $droppableCell.parent();\r\n        var rowIndex = $row.index();\r\n        return rowIndex * $row.find(\"td\").length + $droppableCell.index()\r\n    },\r\n    getDataByDroppableCell: function() {\r\n        var cellData = this.getCellData(this._getDroppableCell());\r\n        return {\r\n            date: cellData.startDate,\r\n            allDay: cellData.allDay,\r\n            groups: cellData.groups\r\n        }\r\n    },\r\n    getDateRange: function() {\r\n        return [this.getStartViewDate(), this.getEndViewDate()]\r\n    },\r\n    getCellWidth: function() {\r\n        var cell = this._getCells().first().get(0);\r\n        return cell && cell.getBoundingClientRect().width\r\n    },\r\n    getCellMinWidth: function() {\r\n        return DATE_TABLE_MIN_CELL_WIDTH\r\n    },\r\n    getRoundedCellWidth: function(groupIndex, startIndex, cellCount) {\r\n        if (groupIndex < 0) {\r\n            return 0\r\n        }\r\n        var $row = this.$element().find(\".\" + this._getDateTableRowClass()).eq(0);\r\n        var width = 0;\r\n        var $cells = $row.find(\".\" + DATE_TABLE_CELL_CLASS);\r\n        var totalCellCount = this._getCellCount() * groupIndex;\r\n        cellCount = cellCount || this._getCellCount();\r\n        if (!typeUtils.isDefined(startIndex)) {\r\n            startIndex = totalCellCount\r\n        }\r\n        for (var i = startIndex; i < totalCellCount + cellCount; i++) {\r\n            width += $($cells).eq(i).get(0).getBoundingClientRect().width\r\n        }\r\n        return width / (totalCellCount + cellCount - startIndex)\r\n    },\r\n    getCellHeight: function() {\r\n        var cell = this._getCells().first().get(0);\r\n        return cell && cell.getBoundingClientRect().height\r\n    },\r\n    getAllDayHeight: function() {\r\n        var cell = this._getCells(true).first().get(0);\r\n        return this.option(\"showAllDayPanel\") ? cell && cell.getBoundingClientRect().height || 0 : 0\r\n    },\r\n    getAllDayOffset: function() {\r\n        return this._groupedStrategy.getAllDayOffset()\r\n    },\r\n    getMaxAllowedPosition: function() {\r\n        if (!this._maxAllowedPosition) {\r\n            var isRtl = this.option(\"rtlEnabled\");\r\n            this._maxAllowedPosition = [];\r\n            this._$dateTable.find(\"tr\").first().find(\"td:nth-child(\" + this._getCellCount() + \"n)\").each(function(_, cell) {\r\n                var maxPosition = $(cell).position().left;\r\n                if (!isRtl) {\r\n                    maxPosition += $(cell).get(0).getBoundingClientRect().width\r\n                }\r\n                this._maxAllowedPosition.push(Math.round(maxPosition))\r\n            }.bind(this))\r\n        }\r\n        return this._maxAllowedPosition\r\n    },\r\n    getMaxAllowedVerticalPosition: function() {\r\n        if (!this._maxAllowedVerticalPosition) {\r\n            var that = this;\r\n            this._maxAllowedVerticalPosition = [];\r\n            var rows = this._getRowCount();\r\n            this._$dateTable.find(\"tr:nth-child(\" + rows + \"n)\").each(function(_, row) {\r\n                var maxPosition = $(row).position().top + $(row).get(0).getBoundingClientRect().height;\r\n                that._maxAllowedVerticalPosition.push(Math.round(maxPosition))\r\n            })\r\n        }\r\n        return this._maxAllowedVerticalPosition\r\n    },\r\n    getFixedContainer: function() {\r\n        return this._$fixedContainer\r\n    },\r\n    getAllDayContainer: function() {\r\n        return this._$allDayContainer\r\n    },\r\n    getCellIndexByCoordinates: function(coordinates, allDay) {\r\n        var cellCount = this._getTotalCellCount(this._getGroupCount());\r\n        var cellWidth = Math.floor(this._getWorkSpaceWidth() / cellCount);\r\n        var cellHeight = allDay ? this.getAllDayHeight() : this.getCellHeight();\r\n        var leftOffset = this._isRTL() || this.option(\"crossScrollingEnabled\") ? 0 : this.getWorkSpaceLeftOffset();\r\n        var topIndex = Math.floor(Math.floor(coordinates.top) / Math.floor(cellHeight));\r\n        var leftIndex = Math.floor((coordinates.left + 5 - leftOffset) / cellWidth);\r\n        if (this._isRTL()) {\r\n            leftIndex = cellCount - leftIndex - 1\r\n        }\r\n        return cellCount * topIndex + leftIndex\r\n    },\r\n    getStartViewDate: function() {\r\n        return this._firstViewDate\r\n    },\r\n    getEndViewDate: function() {\r\n        var dateOfLastViewCell = this.getDateOfLastViewCell();\r\n        var endDateOfLastViewCell = this.calculateEndViewDate(dateOfLastViewCell);\r\n        return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell)\r\n    },\r\n    calculateEndViewDate: function(dateOfLastViewCell) {\r\n        return new Date(dateOfLastViewCell.getTime() + this.getCellDuration())\r\n    },\r\n    _adjustEndViewDateByDaylightDiff: function(startDate, endDate) {\r\n        var daylightDiff = this.invoke(\"getDaylightOffset\", startDate, endDate) * toMs(\"minute\") || 0;\r\n        var endDateOfLastViewCell = new Date(endDate.getTime() - daylightDiff);\r\n        return new Date(endDateOfLastViewCell.getTime() - toMs(\"minute\"))\r\n    },\r\n    getDateOfLastViewCell: function() {\r\n        var rowIndex = this._getRowCount() - 1;\r\n        var cellIndex = this._getCellCount();\r\n        if (this.option(\"groupByDate\") && this._getGroupCount() > 0) {\r\n            cellIndex = cellIndex * this._getGroupCount() - 1\r\n        } else {\r\n            cellIndex -= 1\r\n        }\r\n        return this._getDateByCellIndexes(rowIndex, cellIndex, true)\r\n    },\r\n    getCellDuration: function() {\r\n        return 36e5 * this.option(\"hoursInterval\")\r\n    },\r\n    getIntervalDuration: function(allDay) {\r\n        return allDay ? toMs(\"day\") : this.getCellDuration()\r\n    },\r\n    getVisibleDayDuration: function() {\r\n        return this.option(\"hoursInterval\") * this._getCellCountInDay() * HOUR_MS\r\n    },\r\n    getGroupBounds: function(coordinates) {\r\n        var cellCount = this._getCellCount();\r\n        var $cells = this._getCells();\r\n        var cellWidth = this.getCellWidth();\r\n        var result = this._groupedStrategy.getGroupBoundsOffset(cellCount, $cells, cellWidth, coordinates);\r\n        if (this._isRTL()) {\r\n            var startOffset = result.left;\r\n            result.left = result.right - 2 * cellWidth;\r\n            result.right = startOffset + 2 * cellWidth\r\n        }\r\n        return result\r\n    },\r\n    needRecalculateResizableArea: function() {\r\n        return this._isVerticalGroupedWorkSpace() && 0 !== this.getScrollable().scrollTop()\r\n    },\r\n    getCellDataByCoordinates: function(coordinates, allDay) {\r\n        var key = JSON.stringify({\r\n            top: coordinates.top,\r\n            left: coordinates.left\r\n        });\r\n        var data = this.getCellDataCache(key);\r\n        if (data) {\r\n            return data\r\n        }\r\n        var $cells = this._getCells(allDay);\r\n        var cellIndex = this.getCellIndexByCoordinates(coordinates, allDay);\r\n        var $cell = $cells.eq(cellIndex);\r\n        return this.getCellData($cell)\r\n    },\r\n    getVisibleBounds: function() {\r\n        var result = {};\r\n        var $scrollable = this.getScrollable().$element();\r\n        var cellHeight = this.getCellHeight();\r\n        var scrolledCellCount = this.getScrollableScrollTop() / cellHeight;\r\n        var totalCellCount = scrolledCellCount + $scrollable.height() / cellHeight;\r\n        result.top = {\r\n            hours: Math.floor(scrolledCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\r\n            minutes: scrolledCellCount % 2 ? 30 : 0\r\n        };\r\n        result.bottom = {\r\n            hours: Math.floor(totalCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\r\n            minutes: Math.floor(totalCellCount) % 2 ? 30 : 0\r\n        };\r\n        return result\r\n    },\r\n    updateScrollPosition: function(date) {\r\n        date = this.invoke(\"convertDateByTimezone\", date);\r\n        var bounds = this.getVisibleBounds();\r\n        var startDateHour = date.getHours();\r\n        var startDateMinutes = date.getMinutes();\r\n        if (this.needUpdateScrollPosition(startDateHour, startDateMinutes, bounds, date)) {\r\n            this.scrollToTime(startDateHour, startDateMinutes, date)\r\n        }\r\n    },\r\n    needUpdateScrollPosition: function(hours, minutes, bounds) {\r\n        var isUpdateNeeded = false;\r\n        if (hours < bounds.top.hours || hours > bounds.bottom.hours) {\r\n            isUpdateNeeded = true\r\n        }\r\n        if (hours === bounds.top.hours && minutes < bounds.top.minutes) {\r\n            isUpdateNeeded = true\r\n        }\r\n        if (hours === bounds.bottom.hours && minutes > bounds.top.minutes) {\r\n            isUpdateNeeded = true\r\n        }\r\n        return isUpdateNeeded\r\n    },\r\n    getGroupWidth: function(groupIndex) {\r\n        var result = this._getCellCount() * this.getCellWidth();\r\n        var position = this.getMaxAllowedPosition();\r\n        var currentPosition = position[groupIndex];\r\n        if (position.length && currentPosition) {\r\n            if (this._isRTL()) {\r\n                result = currentPosition - position[groupIndex + 1]\r\n            } else {\r\n                if (0 === groupIndex) {\r\n                    result = currentPosition\r\n                } else {\r\n                    result = currentPosition - position[groupIndex - 1]\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    restoreScrollTop: function() {\r\n        this.$element().scrollTop(0)\r\n    },\r\n    scrollToTime: function(hours, minutes, date) {\r\n        var min = this.getStartViewDate();\r\n        var max = this.getEndViewDate();\r\n        if (date < min || date > max) {\r\n            errors.log(\"W1008\", date);\r\n            return\r\n        }\r\n        var coordinates = this._getScrollCoordinates(hours, minutes, date);\r\n        var scrollable = this.getScrollable();\r\n        scrollable.scrollBy({\r\n            top: coordinates.top - scrollable.scrollTop(),\r\n            left: 0\r\n        })\r\n    },\r\n    getDistanceBetweenCells: function(startIndex, endIndex) {\r\n        var result = 0;\r\n        this.$element().find(\".\" + this._getDateTableRowClass()).first().find(\".\" + DATE_TABLE_CELL_CLASS).each(function(index) {\r\n            if (index < startIndex || index > endIndex) {\r\n                return true\r\n            }\r\n            result += $(this).get(0).getBoundingClientRect().width\r\n        });\r\n        return result\r\n    },\r\n    needApplyCollectorOffset: function() {\r\n        return false\r\n    },\r\n    initDragBehavior: function(scheduler) {\r\n        if (!this.dragBehavior && scheduler) {\r\n            this.dragBehavior = new AppointmentDragBehavior(scheduler);\r\n            this.dragBehavior.addTo(this.getWorkArea());\r\n            this.dragBehavior.addTo(this.getAllDayContainer());\r\n            this.dragBehavior.addTo(this._$allDayPanel)\r\n        }\r\n        this._attachTablesEvents()\r\n    },\r\n    _isApplyCompactAppointmentOffset: function() {\r\n        return this._supportCompactDropDownAppointments()\r\n    },\r\n    _supportCompactDropDownAppointments: function() {\r\n        return true\r\n    },\r\n    _formatWeekday: function(date) {\r\n        return formatWeekday(date)\r\n    },\r\n    _formatWeekdayAndDay: function(date) {\r\n        return formatWeekday(date) + \" \" + dateLocalization.format(date, \"day\")\r\n    }\r\n}).include(publisherMixin);\r\nmodule.exports = SchedulerWorkSpace;\r\n"]},"metadata":{},"sourceType":"script"}
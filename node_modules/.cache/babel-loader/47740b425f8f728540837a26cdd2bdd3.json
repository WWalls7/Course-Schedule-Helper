{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Swizzle\\\\Desktop\\\\SE Project\\\\Application\\\\csh\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(firebase, fbConfig)));\nconst config = {\n  userProfile: 'users',\n  // where profiles are stored in database,\n  useFirestoreForProfile: true\n};\nconst rrfProps = {\n  firebase,\n  config,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}; // const rrfProps = {\n//     firebase,\n//     config: fbConfig,\n//     dispatch: store.dispatch,\n//     createFirestoreInstance \n// };\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}))), document.getElementById(\"root\"));\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","reduxFirestore","getFirestore","createFirestoreInstance","ReactReduxFirebaseProvider","getFirebase","fbConfig","firebase","store","withExtraArgument","config","userProfile","useFirestoreForProfile","rrfProps","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,EAAsCC,uBAAtC,QAAoE,iBAApE;AACA,SAAQC,0BAAR,EAAoCC,WAApC,QAAsD,sBAAtD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,MAAMC,KAAK,GAAGb,WAAW,CACrBG,WADqB,EAErBD,OAAO,CACHD,eAAe,CAACI,KAAK,CAACS,iBAAN,CAAwB;AAACJ,EAAAA,WAAD;AAAcH,EAAAA;AAAd,CAAxB,CAAD,CADZ,EAEHD,cAAc,CAACM,QAAD,EAAWD,QAAX,CAFX,CAFc,CAAzB;AAQA,MAAMI,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE,OADA;AACS;AACtBC,EAAAA,sBAAsB,EAAE;AAFX,CAAf;AAKA,MAAMC,QAAQ,GAAG;AACfN,EAAAA,QADe;AAEfG,EAAAA,MAFe;AAGfI,EAAAA,QAAQ,EAAEN,KAAK,CAACM,QAHD;AAIfX,EAAAA;AAJe,CAAjB,C,CAMA;AACA;AACA;AACA;AACA;AACA;;AAEAX,QAAQ,CAACuB,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,0BAAD,oBAAgCK,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADJ,EAMIG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANJ;AASAvB,aAAa,CAACwB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore, getFirestore, createFirestoreInstance} from 'redux-firestore';\nimport {ReactReduxFirebaseProvider, getFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebase, fbConfig)\n    )\n);\n\nconst config = {\n  userProfile: 'users', // where profiles are stored in database,\n  useFirestoreForProfile: true\n};\n\nconst rrfProps = {\n  firebase,\n  config,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n// const rrfProps = {\n//     firebase,\n//     config: fbConfig,\n//     dispatch: store.dispatch,\n//     createFirestoreInstance \n// };\n\nReactDOM.render(\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}
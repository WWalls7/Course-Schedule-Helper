{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space_week.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../../core/renderer\");\n\nvar registerComponent = require(\"../../../core/component_registrator\");\n\nvar dateUtils = require(\"../../../core/utils/date\");\n\nvar dateLocalization = require(\"../../../localization/date\");\n\nvar each = require(\"../../../core/utils/iterator\").each;\n\nvar SchedulerWorkSpace = require(\"./ui.scheduler.work_space.indicator\");\n\nvar WEEK_CLASS = \"dx-scheduler-work-space-week\";\nvar toMs = dateUtils.dateToMilliseconds;\nvar SchedulerWorkSpaceWeek = SchedulerWorkSpace.inherit({\n  _getElementClass: function () {\n    return WEEK_CLASS;\n  },\n  _getRowCount: function () {\n    return this._getCellCountInDay();\n  },\n  _getCellCount: function () {\n    return 7 * this.option(\"intervalCount\");\n  },\n  _getDateByIndex: function (headerIndex) {\n    var resultDate = new Date(this._firstViewDate);\n    resultDate.setDate(this._firstViewDate.getDate() + headerIndex);\n    return resultDate;\n  },\n  _getFormat: function () {\n    return this._formatWeekdayAndDay;\n  },\n  _getStartViewDate: function () {\n    return dateUtils.getFirstWeekDate(this.option(\"startDate\"), this._firstDayOfWeek() || dateLocalization.firstDayOfWeekIndex());\n  },\n  _getIntervalDuration: function () {\n    return 7 * toMs(\"day\") * this.option(\"intervalCount\");\n  },\n  _getCellsBetween: function ($first, $last) {\n    if (this._hasAllDayClass($last)) {\n      return this.callBase($first, $last);\n    }\n\n    var $cells = this._getCells();\n\n    var firstColumn = $first.index();\n    var firstRow = $first.parent().index();\n    var lastColumn = $last.index();\n    var lastRow = $last.parent().index();\n\n    var groupCount = this._getGroupCount();\n\n    var cellCount = groupCount > 0 ? this._getTotalCellCount(groupCount) : this._getCellCount();\n\n    var rowCount = this._getTotalRowCount(groupCount);\n\n    var result = [];\n\n    for (var i = 0; i < cellCount; i++) {\n      for (var j = 0; j < rowCount; j++) {\n        var cell = $cells.get(cellCount * j + i);\n        result.push(cell);\n      }\n    }\n\n    var lastCellGroup = this.getCellData($last).groups;\n    var indexesDifference = this.option(\"showAllDayPanel\") && this._isVerticalGroupedWorkSpace() ? this._getGroupIndexByResourceId(lastCellGroup) + 1 : 0;\n    var newFirstIndex = rowCount * firstColumn + firstRow - indexesDifference;\n    var newLastIndex = rowCount * lastColumn + lastRow - indexesDifference;\n\n    if (newFirstIndex > newLastIndex) {\n      var buffer = newFirstIndex;\n      newFirstIndex = newLastIndex;\n      newLastIndex = buffer;\n    }\n\n    $cells = $(result).slice(newFirstIndex, newLastIndex + 1);\n\n    if (this._getGroupCount()) {\n      var arr = [];\n\n      var focusedGroupIndex = this._getGroupIndexByCell($first);\n\n      each($cells, function (_, cell) {\n        var groupIndex = this._getGroupIndexByCell($(cell));\n\n        if (focusedGroupIndex === groupIndex) {\n          arr.push(cell);\n        }\n      }.bind(this));\n      $cells = $(arr);\n    }\n\n    return $cells;\n  },\n  _getRightCell: function (isMultiSelection) {\n    if (!isMultiSelection) {\n      return this.callBase(isMultiSelection);\n    }\n\n    var $rightCell;\n    var $focusedCell = this._$focusedCell;\n\n    var groupCount = this._getGroupCount();\n\n    var rowCellCount = isMultiSelection ? this._getCellCount() : this._getTotalCellCount(groupCount);\n    var edgeCellIndex = this._isRTL() ? 0 : rowCellCount - 1;\n    var direction = this._isRTL() ? \"prev\" : \"next\";\n\n    if ($focusedCell.index() === edgeCellIndex || this._isGroupEndCell($focusedCell)) {\n      $rightCell = $focusedCell;\n    } else {\n      $rightCell = $focusedCell[direction]();\n      $rightCell = this._checkForViewBounds($rightCell);\n    }\n\n    return $rightCell;\n  },\n  _getLeftCell: function (isMultiSelection) {\n    if (!isMultiSelection) {\n      return this.callBase(isMultiSelection);\n    }\n\n    var $leftCell;\n    var $focusedCell = this._$focusedCell;\n\n    var groupCount = this._getGroupCount();\n\n    var rowCellCount = isMultiSelection ? this._getCellCount() : this._getTotalCellCount(groupCount);\n    var edgeCellIndex = this._isRTL() ? rowCellCount - 1 : 0;\n    var direction = this._isRTL() ? \"next\" : \"prev\";\n\n    if ($focusedCell.index() === edgeCellIndex || this._isGroupStartCell($focusedCell)) {\n      $leftCell = $focusedCell;\n    } else {\n      $leftCell = $focusedCell[direction]();\n      $leftCell = this._checkForViewBounds($leftCell);\n    }\n\n    return $leftCell;\n  },\n  getPositionShift: function (timeShift, isAllDay) {\n    if (!isAllDay && this.invoke(\"isAdaptive\") && 0 === this.invoke(\"getMaxAppointmentCountPerCellByType\")) {\n      return {\n        top: 0,\n        left: 0,\n        cellPosition: 0\n      };\n    }\n\n    return this.callBase(timeShift, isAllDay);\n  },\n  _isApplyCompactAppointmentOffset: function () {\n    if (this.invoke(\"isAdaptive\") && 0 === this.invoke(\"getMaxAppointmentCountPerCellByType\")) {\n      return false;\n    }\n\n    return this.callBase();\n  }\n});\nregisterComponent(\"dxSchedulerWorkSpaceWeek\", SchedulerWorkSpaceWeek);\nmodule.exports = SchedulerWorkSpaceWeek;","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/node_modules/devextreme/ui/scheduler/workspaces/ui.scheduler.work_space_week.js"],"names":["$","require","registerComponent","dateUtils","dateLocalization","each","SchedulerWorkSpace","WEEK_CLASS","toMs","dateToMilliseconds","SchedulerWorkSpaceWeek","inherit","_getElementClass","_getRowCount","_getCellCountInDay","_getCellCount","option","_getDateByIndex","headerIndex","resultDate","Date","_firstViewDate","setDate","getDate","_getFormat","_formatWeekdayAndDay","_getStartViewDate","getFirstWeekDate","_firstDayOfWeek","firstDayOfWeekIndex","_getIntervalDuration","_getCellsBetween","$first","$last","_hasAllDayClass","callBase","$cells","_getCells","firstColumn","index","firstRow","parent","lastColumn","lastRow","groupCount","_getGroupCount","cellCount","_getTotalCellCount","rowCount","_getTotalRowCount","result","i","j","cell","get","push","lastCellGroup","getCellData","groups","indexesDifference","_isVerticalGroupedWorkSpace","_getGroupIndexByResourceId","newFirstIndex","newLastIndex","buffer","slice","arr","focusedGroupIndex","_getGroupIndexByCell","_","groupIndex","bind","_getRightCell","isMultiSelection","$rightCell","$focusedCell","_$focusedCell","rowCellCount","edgeCellIndex","_isRTL","direction","_isGroupEndCell","_checkForViewBounds","_getLeftCell","$leftCell","_isGroupStartCell","getPositionShift","timeShift","isAllDay","invoke","top","left","cellPosition","_isApplyCompactAppointmentOffset","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space_week.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../../core/renderer\");\r\nvar registerComponent = require(\"../../../core/component_registrator\");\r\nvar dateUtils = require(\"../../../core/utils/date\");\r\nvar dateLocalization = require(\"../../../localization/date\");\r\nvar each = require(\"../../../core/utils/iterator\").each;\r\nvar SchedulerWorkSpace = require(\"./ui.scheduler.work_space.indicator\");\r\nvar WEEK_CLASS = \"dx-scheduler-work-space-week\";\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nvar SchedulerWorkSpaceWeek = SchedulerWorkSpace.inherit({\r\n    _getElementClass: function() {\r\n        return WEEK_CLASS\r\n    },\r\n    _getRowCount: function() {\r\n        return this._getCellCountInDay()\r\n    },\r\n    _getCellCount: function() {\r\n        return 7 * this.option(\"intervalCount\")\r\n    },\r\n    _getDateByIndex: function(headerIndex) {\r\n        var resultDate = new Date(this._firstViewDate);\r\n        resultDate.setDate(this._firstViewDate.getDate() + headerIndex);\r\n        return resultDate\r\n    },\r\n    _getFormat: function() {\r\n        return this._formatWeekdayAndDay\r\n    },\r\n    _getStartViewDate: function() {\r\n        return dateUtils.getFirstWeekDate(this.option(\"startDate\"), this._firstDayOfWeek() || dateLocalization.firstDayOfWeekIndex())\r\n    },\r\n    _getIntervalDuration: function() {\r\n        return 7 * toMs(\"day\") * this.option(\"intervalCount\")\r\n    },\r\n    _getCellsBetween: function($first, $last) {\r\n        if (this._hasAllDayClass($last)) {\r\n            return this.callBase($first, $last)\r\n        }\r\n        var $cells = this._getCells();\r\n        var firstColumn = $first.index();\r\n        var firstRow = $first.parent().index();\r\n        var lastColumn = $last.index();\r\n        var lastRow = $last.parent().index();\r\n        var groupCount = this._getGroupCount();\r\n        var cellCount = groupCount > 0 ? this._getTotalCellCount(groupCount) : this._getCellCount();\r\n        var rowCount = this._getTotalRowCount(groupCount);\r\n        var result = [];\r\n        for (var i = 0; i < cellCount; i++) {\r\n            for (var j = 0; j < rowCount; j++) {\r\n                var cell = $cells.get(cellCount * j + i);\r\n                result.push(cell)\r\n            }\r\n        }\r\n        var lastCellGroup = this.getCellData($last).groups;\r\n        var indexesDifference = this.option(\"showAllDayPanel\") && this._isVerticalGroupedWorkSpace() ? this._getGroupIndexByResourceId(lastCellGroup) + 1 : 0;\r\n        var newFirstIndex = rowCount * firstColumn + firstRow - indexesDifference;\r\n        var newLastIndex = rowCount * lastColumn + lastRow - indexesDifference;\r\n        if (newFirstIndex > newLastIndex) {\r\n            var buffer = newFirstIndex;\r\n            newFirstIndex = newLastIndex;\r\n            newLastIndex = buffer\r\n        }\r\n        $cells = $(result).slice(newFirstIndex, newLastIndex + 1);\r\n        if (this._getGroupCount()) {\r\n            var arr = [];\r\n            var focusedGroupIndex = this._getGroupIndexByCell($first);\r\n            each($cells, function(_, cell) {\r\n                var groupIndex = this._getGroupIndexByCell($(cell));\r\n                if (focusedGroupIndex === groupIndex) {\r\n                    arr.push(cell)\r\n                }\r\n            }.bind(this));\r\n            $cells = $(arr)\r\n        }\r\n        return $cells\r\n    },\r\n    _getRightCell: function(isMultiSelection) {\r\n        if (!isMultiSelection) {\r\n            return this.callBase(isMultiSelection)\r\n        }\r\n        var $rightCell;\r\n        var $focusedCell = this._$focusedCell;\r\n        var groupCount = this._getGroupCount();\r\n        var rowCellCount = isMultiSelection ? this._getCellCount() : this._getTotalCellCount(groupCount);\r\n        var edgeCellIndex = this._isRTL() ? 0 : rowCellCount - 1;\r\n        var direction = this._isRTL() ? \"prev\" : \"next\";\r\n        if ($focusedCell.index() === edgeCellIndex || this._isGroupEndCell($focusedCell)) {\r\n            $rightCell = $focusedCell\r\n        } else {\r\n            $rightCell = $focusedCell[direction]();\r\n            $rightCell = this._checkForViewBounds($rightCell)\r\n        }\r\n        return $rightCell\r\n    },\r\n    _getLeftCell: function(isMultiSelection) {\r\n        if (!isMultiSelection) {\r\n            return this.callBase(isMultiSelection)\r\n        }\r\n        var $leftCell;\r\n        var $focusedCell = this._$focusedCell;\r\n        var groupCount = this._getGroupCount();\r\n        var rowCellCount = isMultiSelection ? this._getCellCount() : this._getTotalCellCount(groupCount);\r\n        var edgeCellIndex = this._isRTL() ? rowCellCount - 1 : 0;\r\n        var direction = this._isRTL() ? \"next\" : \"prev\";\r\n        if ($focusedCell.index() === edgeCellIndex || this._isGroupStartCell($focusedCell)) {\r\n            $leftCell = $focusedCell\r\n        } else {\r\n            $leftCell = $focusedCell[direction]();\r\n            $leftCell = this._checkForViewBounds($leftCell)\r\n        }\r\n        return $leftCell\r\n    },\r\n    getPositionShift: function(timeShift, isAllDay) {\r\n        if (!isAllDay && this.invoke(\"isAdaptive\") && 0 === this.invoke(\"getMaxAppointmentCountPerCellByType\")) {\r\n            return {\r\n                top: 0,\r\n                left: 0,\r\n                cellPosition: 0\r\n            }\r\n        }\r\n        return this.callBase(timeShift, isAllDay)\r\n    },\r\n    _isApplyCompactAppointmentOffset: function() {\r\n        if (this.invoke(\"isAdaptive\") && 0 === this.invoke(\"getMaxAppointmentCountPerCellByType\")) {\r\n            return false\r\n        }\r\n        return this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxSchedulerWorkSpaceWeek\", SchedulerWorkSpaceWeek);\r\nmodule.exports = SchedulerWorkSpaceWeek;\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/**\r\n * DevExtreme (ui/calendar/ui.calendar.views.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\");\n\nvar noop = require(\"../../core/utils/common\").noop;\n\nvar BaseView = require(\"./ui.calendar.base_view\");\n\nvar dateUtils = require(\"../../core/utils/date\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar dateLocalization = require(\"../../localization/date\");\n\nvar dateSerialization = require(\"../../core/utils/date_serialization\");\n\nvar typeUtils = require(\"../../core/utils/type\");\n\nvar CALENDAR_OTHER_MONTH_CLASS = \"dx-calendar-other-month\";\nvar CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\";\nvar Views = {\n  month: BaseView.inherit({\n    _getViewName: function () {\n      return \"month\";\n    },\n    _getDefaultOptions: function () {\n      return extend(this.callBase(), {\n        firstDayOfWeek: void 0,\n        rowCount: 6,\n        colCount: 7\n      });\n    },\n    _renderImpl: function () {\n      this.callBase();\n\n      this._renderHeader();\n    },\n    _renderBody: function () {\n      this.callBase();\n\n      this._$table.find(\".\" + CALENDAR_OTHER_VIEW_CLASS).addClass(CALENDAR_OTHER_MONTH_CLASS);\n    },\n    _renderFocusTarget: noop,\n    getCellAriaLabel: function (date) {\n      return dateLocalization.format(date, \"longdate\");\n    },\n    _renderHeader: function () {\n      var that = this;\n      var $header = $(\"<thead>\");\n\n      this._$table.prepend($header);\n\n      var $headerRow = $(\"<tr>\");\n      $header.append($headerRow);\n      var appendCell = this.option(\"rtl\") ? function (row, cell) {\n        row.prepend(cell);\n      } : function (row, cell) {\n        row.append(cell);\n      };\n\n      this._iterateCells(this.option(\"colCount\"), function (i) {\n        var $cell = $(\"<th>\").text(that._getDayCaption(that._getFirstDayOfWeek() + i));\n        appendCell($headerRow, $cell);\n      });\n    },\n    getNavigatorCaption: function () {\n      return dateLocalization.format(this.option(\"date\"), \"monthandyear\");\n    },\n    _isTodayCell: function (cellDate) {\n      var today = new Date();\n      return dateUtils.sameDate(cellDate, today);\n    },\n    _isDateOutOfRange: function (cellDate) {\n      var minDate = this.option(\"min\");\n      var maxDate = this.option(\"max\");\n      return !dateUtils.dateInRange(cellDate, minDate, maxDate, \"date\");\n    },\n    _isOtherView: function (cellDate) {\n      return cellDate.getMonth() !== this.option(\"date\").getMonth();\n    },\n    _getCellText: function (cellDate) {\n      return dateLocalization.format(cellDate, \"d\");\n    },\n    _getDayCaption: function (day) {\n      var daysInWeek = this.option(\"colCount\");\n      return dateLocalization.getDayNames(\"abbreviated\")[day % daysInWeek];\n    },\n    _getFirstCellData: function () {\n      var firstDay = dateUtils.getFirstMonthDate(this.option(\"date\"));\n      var firstMonthDayOffset = this._getFirstDayOfWeek() - firstDay.getDay();\n      var daysInWeek = this.option(\"colCount\");\n\n      if (firstMonthDayOffset >= 0) {\n        firstMonthDayOffset -= daysInWeek;\n      }\n\n      firstDay.setDate(firstDay.getDate() + firstMonthDayOffset);\n      return firstDay;\n    },\n    _getNextCellData: function (date) {\n      date = new Date(date);\n      date.setDate(date.getDate() + 1);\n      return date;\n    },\n    _getFirstDayOfWeek: function () {\n      return typeUtils.isDefined(this.option(\"firstDayOfWeek\")) ? this.option(\"firstDayOfWeek\") : dateLocalization.firstDayOfWeekIndex();\n    },\n    _getCellByDate: function (date) {\n      return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(date, dateUtils.getShortDateFormat()) + \"']\");\n    },\n    isBoundary: function (date) {\n      return dateUtils.sameMonthAndYear(date, this.option(\"min\")) || dateUtils.sameMonthAndYear(date, this.option(\"max\"));\n    },\n    _getDefaultDisabledDatesHandler: function (disabledDates) {\n      return function (args) {\n        var isDisabledDate = disabledDates.some(function (item) {\n          return dateUtils.sameDate(item, args.date);\n        });\n\n        if (isDisabledDate) {\n          return true;\n        }\n      };\n    }\n  }),\n  year: BaseView.inherit({\n    _getViewName: function () {\n      return \"year\";\n    },\n    _isTodayCell: function (cellDate) {\n      return dateUtils.sameMonthAndYear(cellDate, new Date());\n    },\n    _isDateOutOfRange: function (cellDate) {\n      return !dateUtils.dateInRange(cellDate, dateUtils.getFirstMonthDate(this.option(\"min\")), dateUtils.getLastMonthDate(this.option(\"max\")));\n    },\n    _isOtherView: function () {\n      return false;\n    },\n    _getCellText: function (cellDate) {\n      return dateLocalization.getMonthNames(\"abbreviated\")[cellDate.getMonth()];\n    },\n    _getFirstCellData: function () {\n      var data = new Date(this.option(\"date\"));\n      data.setDate(1);\n      data.setMonth(0);\n      return data;\n    },\n    _getNextCellData: function (date) {\n      date = new Date(date);\n      date.setMonth(date.getMonth() + 1);\n      return date;\n    },\n    _getCellByDate: function (date) {\n      var foundDate = new Date(date);\n      foundDate.setDate(1);\n      return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()) + \"']\");\n    },\n    getCellAriaLabel: function (date) {\n      return dateLocalization.format(date, \"monthandyear\");\n    },\n    getNavigatorCaption: function () {\n      return dateLocalization.format(this.option(\"date\"), \"yyyy\");\n    },\n    isBoundary: function (date) {\n      return dateUtils.sameYear(date, this.option(\"min\")) || dateUtils.sameYear(date, this.option(\"max\"));\n    }\n  }),\n  decade: BaseView.inherit({\n    _getViewName: function () {\n      return \"decade\";\n    },\n    _isTodayCell: function (cellDate) {\n      return dateUtils.sameYear(cellDate, new Date());\n    },\n    _isDateOutOfRange: function (cellDate) {\n      var min = this.option(\"min\");\n      var max = this.option(\"max\");\n      return !dateUtils.dateInRange(cellDate.getFullYear(), min && min.getFullYear(), max && max.getFullYear());\n    },\n    _isOtherView: function (cellDate) {\n      var date = new Date(cellDate);\n      date.setMonth(1);\n      return !dateUtils.sameDecade(date, this.option(\"date\"));\n    },\n    _getCellText: function (cellDate) {\n      return dateLocalization.format(cellDate, \"yyyy\");\n    },\n    _getFirstCellData: function () {\n      var year = dateUtils.getFirstYearInDecade(this.option(\"date\")) - 1;\n      return new Date(year, 0, 1);\n    },\n    _getNextCellData: function (date) {\n      date = new Date(date);\n      date.setFullYear(date.getFullYear() + 1);\n      return date;\n    },\n    getNavigatorCaption: function () {\n      var currentDate = this.option(\"date\");\n      var firstYearInDecade = dateUtils.getFirstYearInDecade(currentDate);\n      var startDate = new Date(currentDate);\n      var endDate = new Date(currentDate);\n      startDate.setFullYear(firstYearInDecade);\n      endDate.setFullYear(firstYearInDecade + 9);\n      return dateLocalization.format(startDate, \"yyyy\") + \"-\" + dateLocalization.format(endDate, \"yyyy\");\n    },\n    _isValueOnCurrentView: function (currentDate, value) {\n      return dateUtils.sameDecade(currentDate, value);\n    },\n    _getCellByDate: function (date) {\n      var foundDate = new Date(date);\n      foundDate.setDate(1);\n      foundDate.setMonth(0);\n      return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()) + \"']\");\n    },\n    isBoundary: function (date) {\n      return dateUtils.sameDecade(date, this.option(\"min\")) || dateUtils.sameDecade(date, this.option(\"max\"));\n    }\n  }),\n  century: BaseView.inherit({\n    _getViewName: function () {\n      return \"century\";\n    },\n    _isTodayCell: function (cellDate) {\n      return dateUtils.sameDecade(cellDate, new Date());\n    },\n    _isDateOutOfRange: function (cellDate) {\n      var decade = dateUtils.getFirstYearInDecade(cellDate);\n      var minDecade = dateUtils.getFirstYearInDecade(this.option(\"min\"));\n      var maxDecade = dateUtils.getFirstYearInDecade(this.option(\"max\"));\n      return !dateUtils.dateInRange(decade, minDecade, maxDecade);\n    },\n    _isOtherView: function (cellDate) {\n      var date = new Date(cellDate);\n      date.setMonth(1);\n      return !dateUtils.sameCentury(date, this.option(\"date\"));\n    },\n    _getCellText: function (cellDate) {\n      var startDate = dateLocalization.format(cellDate, \"yyyy\");\n      var endDate = new Date(cellDate);\n      endDate.setFullYear(endDate.getFullYear() + 9);\n      return startDate + \" - \" + dateLocalization.format(endDate, \"yyyy\");\n    },\n    _getFirstCellData: function () {\n      var decade = dateUtils.getFirstDecadeInCentury(this.option(\"date\")) - 10;\n      return new Date(decade, 0, 1);\n    },\n    _getNextCellData: function (date) {\n      date = new Date(date);\n      date.setFullYear(date.getFullYear() + 10);\n      return date;\n    },\n    _getCellByDate: function (date) {\n      var foundDate = new Date(date);\n      foundDate.setDate(1);\n      foundDate.setMonth(0);\n      foundDate.setFullYear(dateUtils.getFirstYearInDecade(foundDate));\n      return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()) + \"']\");\n    },\n    getNavigatorCaption: function () {\n      var currentDate = this.option(\"date\");\n      var firstDecadeInCentury = dateUtils.getFirstDecadeInCentury(currentDate);\n      var startDate = new Date(currentDate);\n      var endDate = new Date(currentDate);\n      startDate.setFullYear(firstDecadeInCentury);\n      endDate.setFullYear(firstDecadeInCentury + 99);\n      return dateLocalization.format(startDate, \"yyyy\") + \"-\" + dateLocalization.format(endDate, \"yyyy\");\n    },\n    isBoundary: function (date) {\n      return dateUtils.sameCentury(date, this.option(\"min\")) || dateUtils.sameCentury(date, this.option(\"max\"));\n    }\n  })\n};\nmodule.exports = Views;","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/node_modules/devextreme/ui/calendar/ui.calendar.views.js"],"names":["$","require","noop","BaseView","dateUtils","extend","dateLocalization","dateSerialization","typeUtils","CALENDAR_OTHER_MONTH_CLASS","CALENDAR_OTHER_VIEW_CLASS","Views","month","inherit","_getViewName","_getDefaultOptions","callBase","firstDayOfWeek","rowCount","colCount","_renderImpl","_renderHeader","_renderBody","_$table","find","addClass","_renderFocusTarget","getCellAriaLabel","date","format","that","$header","prepend","$headerRow","append","appendCell","option","row","cell","_iterateCells","i","$cell","text","_getDayCaption","_getFirstDayOfWeek","getNavigatorCaption","_isTodayCell","cellDate","today","Date","sameDate","_isDateOutOfRange","minDate","maxDate","dateInRange","_isOtherView","getMonth","_getCellText","day","daysInWeek","getDayNames","_getFirstCellData","firstDay","getFirstMonthDate","firstMonthDayOffset","getDay","setDate","getDate","_getNextCellData","isDefined","firstDayOfWeekIndex","_getCellByDate","serializeDate","getShortDateFormat","isBoundary","sameMonthAndYear","_getDefaultDisabledDatesHandler","disabledDates","args","isDisabledDate","some","item","year","getLastMonthDate","getMonthNames","data","setMonth","foundDate","sameYear","decade","min","max","getFullYear","sameDecade","getFirstYearInDecade","setFullYear","currentDate","firstYearInDecade","startDate","endDate","_isValueOnCurrentView","value","century","minDecade","maxDecade","sameCentury","getFirstDecadeInCentury","firstDecadeInCentury","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/calendar/ui.calendar.views.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\");\r\nvar noop = require(\"../../core/utils/common\").noop;\r\nvar BaseView = require(\"./ui.calendar.base_view\");\r\nvar dateUtils = require(\"../../core/utils/date\");\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar dateLocalization = require(\"../../localization/date\");\r\nvar dateSerialization = require(\"../../core/utils/date_serialization\");\r\nvar typeUtils = require(\"../../core/utils/type\");\r\nvar CALENDAR_OTHER_MONTH_CLASS = \"dx-calendar-other-month\";\r\nvar CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\";\r\nvar Views = {\r\n    month: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"month\"\r\n        },\r\n        _getDefaultOptions: function() {\r\n            return extend(this.callBase(), {\r\n                firstDayOfWeek: void 0,\r\n                rowCount: 6,\r\n                colCount: 7\r\n            })\r\n        },\r\n        _renderImpl: function() {\r\n            this.callBase();\r\n            this._renderHeader()\r\n        },\r\n        _renderBody: function() {\r\n            this.callBase();\r\n            this._$table.find(\".\" + CALENDAR_OTHER_VIEW_CLASS).addClass(CALENDAR_OTHER_MONTH_CLASS)\r\n        },\r\n        _renderFocusTarget: noop,\r\n        getCellAriaLabel: function(date) {\r\n            return dateLocalization.format(date, \"longdate\")\r\n        },\r\n        _renderHeader: function() {\r\n            var that = this;\r\n            var $header = $(\"<thead>\");\r\n            this._$table.prepend($header);\r\n            var $headerRow = $(\"<tr>\");\r\n            $header.append($headerRow);\r\n            var appendCell = this.option(\"rtl\") ? function(row, cell) {\r\n                row.prepend(cell)\r\n            } : function(row, cell) {\r\n                row.append(cell)\r\n            };\r\n            this._iterateCells(this.option(\"colCount\"), function(i) {\r\n                var $cell = $(\"<th>\").text(that._getDayCaption(that._getFirstDayOfWeek() + i));\r\n                appendCell($headerRow, $cell)\r\n            })\r\n        },\r\n        getNavigatorCaption: function() {\r\n            return dateLocalization.format(this.option(\"date\"), \"monthandyear\")\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            var today = new Date;\r\n            return dateUtils.sameDate(cellDate, today)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var minDate = this.option(\"min\");\r\n            var maxDate = this.option(\"max\");\r\n            return !dateUtils.dateInRange(cellDate, minDate, maxDate, \"date\")\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            return cellDate.getMonth() !== this.option(\"date\").getMonth()\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return dateLocalization.format(cellDate, \"d\")\r\n        },\r\n        _getDayCaption: function(day) {\r\n            var daysInWeek = this.option(\"colCount\");\r\n            return dateLocalization.getDayNames(\"abbreviated\")[day % daysInWeek]\r\n        },\r\n        _getFirstCellData: function() {\r\n            var firstDay = dateUtils.getFirstMonthDate(this.option(\"date\"));\r\n            var firstMonthDayOffset = this._getFirstDayOfWeek() - firstDay.getDay();\r\n            var daysInWeek = this.option(\"colCount\");\r\n            if (firstMonthDayOffset >= 0) {\r\n                firstMonthDayOffset -= daysInWeek\r\n            }\r\n            firstDay.setDate(firstDay.getDate() + firstMonthDayOffset);\r\n            return firstDay\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setDate(date.getDate() + 1);\r\n            return date\r\n        },\r\n        _getFirstDayOfWeek: function() {\r\n            return typeUtils.isDefined(this.option(\"firstDayOfWeek\")) ? this.option(\"firstDayOfWeek\") : dateLocalization.firstDayOfWeekIndex()\r\n        },\r\n        _getCellByDate: function(date) {\r\n            return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(date, dateUtils.getShortDateFormat()) + \"']\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameMonthAndYear(date, this.option(\"min\")) || dateUtils.sameMonthAndYear(date, this.option(\"max\"))\r\n        },\r\n        _getDefaultDisabledDatesHandler: function(disabledDates) {\r\n            return function(args) {\r\n                var isDisabledDate = disabledDates.some(function(item) {\r\n                    return dateUtils.sameDate(item, args.date)\r\n                });\r\n                if (isDisabledDate) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    }),\r\n    year: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"year\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            return dateUtils.sameMonthAndYear(cellDate, new Date)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            return !dateUtils.dateInRange(cellDate, dateUtils.getFirstMonthDate(this.option(\"min\")), dateUtils.getLastMonthDate(this.option(\"max\")))\r\n        },\r\n        _isOtherView: function() {\r\n            return false\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return dateLocalization.getMonthNames(\"abbreviated\")[cellDate.getMonth()]\r\n        },\r\n        _getFirstCellData: function() {\r\n            var data = new Date(this.option(\"date\"));\r\n            data.setDate(1);\r\n            data.setMonth(0);\r\n            return data\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setMonth(date.getMonth() + 1);\r\n            return date\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = new Date(date);\r\n            foundDate.setDate(1);\r\n            return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()) + \"']\")\r\n        },\r\n        getCellAriaLabel: function(date) {\r\n            return dateLocalization.format(date, \"monthandyear\")\r\n        },\r\n        getNavigatorCaption: function() {\r\n            return dateLocalization.format(this.option(\"date\"), \"yyyy\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameYear(date, this.option(\"min\")) || dateUtils.sameYear(date, this.option(\"max\"))\r\n        }\r\n    }),\r\n    decade: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"decade\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            return dateUtils.sameYear(cellDate, new Date)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var min = this.option(\"min\");\r\n            var max = this.option(\"max\");\r\n            return !dateUtils.dateInRange(cellDate.getFullYear(), min && min.getFullYear(), max && max.getFullYear())\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            var date = new Date(cellDate);\r\n            date.setMonth(1);\r\n            return !dateUtils.sameDecade(date, this.option(\"date\"))\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return dateLocalization.format(cellDate, \"yyyy\")\r\n        },\r\n        _getFirstCellData: function() {\r\n            var year = dateUtils.getFirstYearInDecade(this.option(\"date\")) - 1;\r\n            return new Date(year, 0, 1)\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setFullYear(date.getFullYear() + 1);\r\n            return date\r\n        },\r\n        getNavigatorCaption: function() {\r\n            var currentDate = this.option(\"date\");\r\n            var firstYearInDecade = dateUtils.getFirstYearInDecade(currentDate);\r\n            var startDate = new Date(currentDate);\r\n            var endDate = new Date(currentDate);\r\n            startDate.setFullYear(firstYearInDecade);\r\n            endDate.setFullYear(firstYearInDecade + 9);\r\n            return dateLocalization.format(startDate, \"yyyy\") + \"-\" + dateLocalization.format(endDate, \"yyyy\")\r\n        },\r\n        _isValueOnCurrentView: function(currentDate, value) {\r\n            return dateUtils.sameDecade(currentDate, value)\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = new Date(date);\r\n            foundDate.setDate(1);\r\n            foundDate.setMonth(0);\r\n            return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()) + \"']\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameDecade(date, this.option(\"min\")) || dateUtils.sameDecade(date, this.option(\"max\"))\r\n        }\r\n    }),\r\n    century: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"century\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            return dateUtils.sameDecade(cellDate, new Date)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var decade = dateUtils.getFirstYearInDecade(cellDate);\r\n            var minDecade = dateUtils.getFirstYearInDecade(this.option(\"min\"));\r\n            var maxDecade = dateUtils.getFirstYearInDecade(this.option(\"max\"));\r\n            return !dateUtils.dateInRange(decade, minDecade, maxDecade)\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            var date = new Date(cellDate);\r\n            date.setMonth(1);\r\n            return !dateUtils.sameCentury(date, this.option(\"date\"))\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            var startDate = dateLocalization.format(cellDate, \"yyyy\");\r\n            var endDate = new Date(cellDate);\r\n            endDate.setFullYear(endDate.getFullYear() + 9);\r\n            return startDate + \" - \" + dateLocalization.format(endDate, \"yyyy\")\r\n        },\r\n        _getFirstCellData: function() {\r\n            var decade = dateUtils.getFirstDecadeInCentury(this.option(\"date\")) - 10;\r\n            return new Date(decade, 0, 1)\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setFullYear(date.getFullYear() + 10);\r\n            return date\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = new Date(date);\r\n            foundDate.setDate(1);\r\n            foundDate.setMonth(0);\r\n            foundDate.setFullYear(dateUtils.getFirstYearInDecade(foundDate));\r\n            return this._$table.find(\"td[data-value='\" + dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()) + \"']\")\r\n        },\r\n        getNavigatorCaption: function() {\r\n            var currentDate = this.option(\"date\");\r\n            var firstDecadeInCentury = dateUtils.getFirstDecadeInCentury(currentDate);\r\n            var startDate = new Date(currentDate);\r\n            var endDate = new Date(currentDate);\r\n            startDate.setFullYear(firstDecadeInCentury);\r\n            endDate.setFullYear(firstDecadeInCentury + 99);\r\n            return dateLocalization.format(startDate, \"yyyy\") + \"-\" + dateLocalization.format(endDate, \"yyyy\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameCentury(date, this.option(\"min\")) || dateUtils.sameCentury(date, this.option(\"max\"))\r\n        }\r\n    })\r\n};\r\nmodule.exports = Views;\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/shaders/ui.scheduler.current_time_shader.horizontal.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar Shader = require(\"./ui.scheduler.current_time_shader\");\n\nvar HorizontalCurrentTimeShader = Shader.inherit({\n  _renderShader: function () {\n    var groupCount = \"horizontal\" === this._workspace.option(\"groupOrientation\") ? this._workspace._getGroupCount() : 1;\n\n    this._customizeShader(this._$shader, 0);\n\n    if (groupCount > 1) {\n      for (var i = 1; i < groupCount; i++) {\n        var $shader = this._createShader();\n\n        this._customizeShader($shader, 1);\n\n        this._shader.push($shader);\n      }\n    }\n  },\n  _customizeShader: function ($shader, groupIndex) {\n    var shaderWidth = this._workspace.getIndicationWidth();\n\n    var maxWidth = this._$container.get(0).getBoundingClientRect().width;\n\n    if (shaderWidth > maxWidth) {\n      shaderWidth = maxWidth;\n    }\n\n    if (shaderWidth > 0) {\n      $shader.width(shaderWidth);\n    }\n\n    $shader.css(\"left\", this._workspace._getCellCount() * this._workspace.getCellWidth() * groupIndex);\n  }\n});\nmodule.exports = HorizontalCurrentTimeShader;","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/node_modules/devextreme/ui/scheduler/shaders/ui.scheduler.current_time_shader.horizontal.js"],"names":["Shader","require","HorizontalCurrentTimeShader","inherit","_renderShader","groupCount","_workspace","option","_getGroupCount","_customizeShader","_$shader","i","$shader","_createShader","_shader","push","groupIndex","shaderWidth","getIndicationWidth","maxWidth","_$container","get","getBoundingClientRect","width","css","_getCellCount","getCellWidth","module","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,oCAAD,CAApB;;AACA,IAAIC,2BAA2B,GAAGF,MAAM,CAACG,OAAP,CAAe;AAC7CC,EAAAA,aAAa,EAAE,YAAW;AACtB,QAAIC,UAAU,GAAG,iBAAiB,KAAKC,UAAL,CAAgBC,MAAhB,CAAuB,kBAAvB,CAAjB,GAA8D,KAAKD,UAAL,CAAgBE,cAAhB,EAA9D,GAAiG,CAAlH;;AACA,SAAKC,gBAAL,CAAsB,KAAKC,QAA3B,EAAqC,CAArC;;AACA,QAAIL,UAAU,GAAG,CAAjB,EAAoB;AAChB,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,UAApB,EAAgCM,CAAC,EAAjC,EAAqC;AACjC,YAAIC,OAAO,GAAG,KAAKC,aAAL,EAAd;;AACA,aAAKJ,gBAAL,CAAsBG,OAAtB,EAA+B,CAA/B;;AACA,aAAKE,OAAL,CAAaC,IAAb,CAAkBH,OAAlB;AACH;AACJ;AACJ,GAX4C;AAY7CH,EAAAA,gBAAgB,EAAE,UAASG,OAAT,EAAkBI,UAAlB,EAA8B;AAC5C,QAAIC,WAAW,GAAG,KAAKX,UAAL,CAAgBY,kBAAhB,EAAlB;;AACA,QAAIC,QAAQ,GAAG,KAAKC,WAAL,CAAiBC,GAAjB,CAAqB,CAArB,EAAwBC,qBAAxB,GAAgDC,KAA/D;;AACA,QAAIN,WAAW,GAAGE,QAAlB,EAA4B;AACxBF,MAAAA,WAAW,GAAGE,QAAd;AACH;;AACD,QAAIF,WAAW,GAAG,CAAlB,EAAqB;AACjBL,MAAAA,OAAO,CAACW,KAAR,CAAcN,WAAd;AACH;;AACDL,IAAAA,OAAO,CAACY,GAAR,CAAY,MAAZ,EAAoB,KAAKlB,UAAL,CAAgBmB,aAAhB,KAAkC,KAAKnB,UAAL,CAAgBoB,YAAhB,EAAlC,GAAmEV,UAAvF;AACH;AAtB4C,CAAf,CAAlC;AAwBAW,MAAM,CAACC,OAAP,GAAiB1B,2BAAjB","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/shaders/ui.scheduler.current_time_shader.horizontal.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar Shader = require(\"./ui.scheduler.current_time_shader\");\r\nvar HorizontalCurrentTimeShader = Shader.inherit({\r\n    _renderShader: function() {\r\n        var groupCount = \"horizontal\" === this._workspace.option(\"groupOrientation\") ? this._workspace._getGroupCount() : 1;\r\n        this._customizeShader(this._$shader, 0);\r\n        if (groupCount > 1) {\r\n            for (var i = 1; i < groupCount; i++) {\r\n                var $shader = this._createShader();\r\n                this._customizeShader($shader, 1);\r\n                this._shader.push($shader)\r\n            }\r\n        }\r\n    },\r\n    _customizeShader: function($shader, groupIndex) {\r\n        var shaderWidth = this._workspace.getIndicationWidth();\r\n        var maxWidth = this._$container.get(0).getBoundingClientRect().width;\r\n        if (shaderWidth > maxWidth) {\r\n            shaderWidth = maxWidth\r\n        }\r\n        if (shaderWidth > 0) {\r\n            $shader.width(shaderWidth)\r\n        }\r\n        $shader.css(\"left\", this._workspace._getCellCount() * this._workspace.getCellWidth() * groupIndex)\r\n    }\r\n});\r\nmodule.exports = HorizontalCurrentTimeShader;\r\n"]},"metadata":{},"sourceType":"script"}
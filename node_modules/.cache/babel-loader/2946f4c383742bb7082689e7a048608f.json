{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/ui.scheduler.appointment_form.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _form = require(\"../form\");\n\nvar _form2 = _interopRequireDefault(_form);\n\nvar _date_serialization = require(\"../../core/utils/date_serialization\");\n\nvar _date_serialization2 = _interopRequireDefault(_date_serialization);\n\nvar _message = require(\"../../localization/message\");\n\nvar _message2 = _interopRequireDefault(_message);\n\nvar _click = require(\"../../events/click\");\n\nvar _click2 = _interopRequireDefault(_click);\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _type2 = _interopRequireDefault(_type);\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nrequire(\"./ui.scheduler.recurrence_editor\");\n\nrequire(\"./timezones/ui.scheduler.timezone_editor\");\n\nrequire(\"../text_area\");\n\nrequire(\"../tag_box\");\n\nrequire(\"../switch\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar RECURRENCE_EDITOR_ITEM_CLASS = \"dx-scheduler-recurrence-rule-item\";\nvar SCREEN_SIZE_OF_TOP_LABEL_LOCATION = 608;\nvar SCREEN_SIZE_OF_SINGLE_COLUMN = 460;\nvar SchedulerAppointmentForm = {\n  _appointmentForm: {},\n  _lockDateShiftFlag: false,\n  _validateAppointmentFormDate: function (editor, value, previousValue) {\n    var isCurrentDateCorrect = null === value || !!value;\n    var isPreviousDateCorrect = null === previousValue || !!previousValue;\n\n    if (!isCurrentDateCorrect && isPreviousDateCorrect) {\n      editor.option(\"value\", previousValue);\n    }\n  },\n  _getAllDayStartDate: function (startDate) {\n    return startDate.setHours(0, 0, 0, 0);\n  },\n  _getAllDayEndDate: function (startDate) {\n    var endDate = new Date(startDate);\n    endDate.setDate(startDate.getDate() + 1);\n    return endDate;\n  },\n  _updateLabelLocation: function (formWidth) {\n    if (formWidth > 0 && this._appointmentForm._rootLayoutManager._contentReadyAction) {\n      this._appointmentForm.option(\"labelLocation\", formWidth < SCREEN_SIZE_OF_TOP_LABEL_LOCATION ? \"top\" : \"left\");\n    }\n  },\n  create: function (componentCreator, $container, isReadOnly, formData) {\n    var _this = this;\n\n    this._appointmentForm = componentCreator($container, _form2.default, {\n      items: this._editors,\n      readOnly: isReadOnly,\n      showValidationSummary: true,\n      scrollingEnabled: true,\n      colCount: 2,\n      formData: formData,\n      showColonAfterLabel: false,\n      screenByWidth: function () {\n        var formWidth = $container.parent().outerWidth();\n\n        _this._updateLabelLocation(formWidth);\n\n        return formWidth < SCREEN_SIZE_OF_SINGLE_COLUMN ? \"xs\" : \"lg\";\n      }\n    });\n    return this._appointmentForm;\n  },\n  prepareAppointmentFormEditors: function (dataExprs, schedulerInst) {\n    var that = this;\n    this._editors = [{\n      dataField: dataExprs.textExpr,\n      editorType: \"dxTextBox\",\n      colSpan: 2,\n      label: {\n        text: _message2.default.format(\"dxScheduler-editorLabelTitle\")\n      }\n    }, {\n      dataField: dataExprs.startDateExpr,\n      editorType: \"dxDateBox\",\n      label: {\n        text: _message2.default.format(\"dxScheduler-editorLabelStartDate\")\n      },\n      validationRules: [{\n        type: \"required\"\n      }],\n      editorOptions: {\n        width: \"100%\",\n        calendarOptions: {\n          firstDayOfWeek: schedulerInst.option(\"firstDayOfWeek\")\n        },\n        onValueChanged: function (args) {\n          that._validateAppointmentFormDate(args.component, args.value, args.previousValue);\n\n          var value = _date_serialization2.default.deserializeDate(args.value);\n\n          var previousValue = _date_serialization2.default.deserializeDate(args.previousValue);\n\n          var endDateEditor = that._appointmentForm.getEditor(dataExprs.endDateExpr);\n\n          var endValue = _date_serialization2.default.deserializeDate(endDateEditor.option(\"value\"));\n\n          if (!that._appointmentForm._lockDateShiftFlag && _type2.default.isDefined(value) && _type2.default.isDefined(endValue) && !!endValue && endValue < value) {\n            var duration = endValue.getTime() - previousValue.getTime();\n            endDateEditor.option(\"value\", new Date(value.getTime() + duration));\n          }\n        }\n      }\n    }, {\n      dataField: dataExprs.startDateTimeZoneExpr,\n      editorType: \"dxSchedulerTimezoneEditor\",\n      colSpan: 2,\n      label: {\n        text: \" \",\n        showColon: false\n      },\n      editorOptions: {\n        observer: schedulerInst\n      },\n      visible: false\n    }, {\n      dataField: dataExprs.endDateExpr,\n      editorType: \"dxDateBox\",\n      label: {\n        text: _message2.default.format(\"dxScheduler-editorLabelEndDate\")\n      },\n      validationRules: [{\n        type: \"required\"\n      }],\n      editorOptions: {\n        width: \"100%\",\n        calendarOptions: {\n          firstDayOfWeek: schedulerInst.option(\"firstDayOfWeek\")\n        },\n        onValueChanged: function (args) {\n          that._validateAppointmentFormDate(args.component, args.value, args.previousValue);\n\n          var value = _date_serialization2.default.deserializeDate(args.value);\n\n          var previousValue = _date_serialization2.default.deserializeDate(args.previousValue);\n\n          var startDateEditor = that._appointmentForm.getEditor(dataExprs.startDateExpr);\n\n          var startValue = _date_serialization2.default.deserializeDate(startDateEditor.option(\"value\"));\n\n          if (!that._appointmentForm._lockDateShiftFlag && !!value && startValue > value) {\n            var duration = previousValue ? previousValue.getTime() - startValue.getTime() : 0;\n            startDateEditor.option(\"value\", new Date(value.getTime() - duration));\n          }\n        }\n      }\n    }, {\n      dataField: dataExprs.endDateTimeZoneExpr,\n      editorType: \"dxSchedulerTimezoneEditor\",\n      colSpan: 2,\n      label: {\n        text: \" \",\n        showColon: false\n      },\n      editorOptions: {\n        observer: schedulerInst\n      },\n      visible: false\n    }, {\n      dataField: dataExprs.allDayExpr,\n      editorType: \"dxSwitch\",\n      colSpan: 2,\n      label: {\n        text: _message2.default.format(\"dxScheduler-allDay\")\n      },\n      editorOptions: {\n        onValueChanged: function (args) {\n          var value = args.value;\n\n          var startDateEditor = that._appointmentForm.getEditor(dataExprs.startDateExpr);\n\n          var endDateEditor = that._appointmentForm.getEditor(dataExprs.endDateExpr);\n\n          if (startDateEditor && endDateEditor) {\n            startDateEditor.option(\"type\", value ? \"date\" : \"datetime\");\n            endDateEditor.option(\"type\", value ? \"date\" : \"datetime\");\n\n            if (!startDateEditor.option(\"value\")) {\n              return;\n            }\n\n            var startDate = _date_serialization2.default.deserializeDate(startDateEditor.option(\"value\"));\n\n            if (value) {\n              startDateEditor.option(\"value\", that._getAllDayStartDate(startDate));\n              endDateEditor.option(\"value\", that._getAllDayEndDate(startDate));\n            } else {\n              startDate.setHours(schedulerInst.option(\"startDayHour\"));\n              startDateEditor.option(\"value\", startDate);\n              endDateEditor.option(\"value\", schedulerInst._workSpace.calculateEndDate(_date_serialization2.default.deserializeDate(startDateEditor.option(\"value\"))));\n            }\n          }\n        }\n      }\n    }, {\n      itemType: \"empty\",\n      colSpan: 2\n    }, {\n      dataField: dataExprs.descriptionExpr,\n      editorType: \"dxTextArea\",\n      colSpan: 2,\n      label: {\n        text: _message2.default.format(\"dxScheduler-editorLabelDescription\")\n      }\n    }, {\n      itemType: \"empty\",\n      colSpan: 2\n    }, {\n      dataField: dataExprs.recurrenceRuleExpr,\n      editorType: \"dxRecurrenceEditor\",\n      colSpan: 2,\n      editorOptions: {\n        observer: schedulerInst,\n        firstDayOfWeek: schedulerInst.option(\"firstDayOfWeek\"),\n        onValueChanged: function (args) {\n          var value = that._getRecurrenceRule(schedulerInst, that._appointmentForm);\n\n          schedulerInst.fire(\"recurrenceEditorVisibilityChanged\", value);\n        },\n        onContentReady: function (args) {\n          var $editorField = (0, _renderer2.default)(args.element).closest(\".dx-field-item\");\n          var $editorLabel = $editorField.find(\".dx-field-item-label\");\n\n          _events_engine2.default.off($editorLabel, _click2.default.name);\n\n          _events_engine2.default.on($editorLabel, _click2.default.name, function () {\n            args.component.toggle();\n          });\n        }\n      },\n      cssClass: RECURRENCE_EDITOR_ITEM_CLASS,\n      label: {\n        text: _message2.default.format(\"dxScheduler-editorLabelRecurrence\")\n      }\n    }];\n\n    if (!dataExprs.recurrenceRuleExpr) {\n      this._editors.splice(9, 2);\n    }\n\n    return this._editors;\n  },\n  _getRecurrenceRule: function (schedulerInstance, appointmentForm) {\n    return !_type2.default.isEmptyObject(appointmentForm) ? !!schedulerInstance.fire(\"getField\", \"recurrenceRule\", appointmentForm.option(\"formData\")) : false;\n  },\n  concatResources: function (resources) {\n    this._editors = this._editors.concat(resources);\n  },\n  checkEditorsType: function (form, startDateExpr, endDateExpr, allDay) {\n    var startDateFormItem = form.itemOption(startDateExpr);\n    var endDateFormItem = form.itemOption(endDateExpr);\n\n    if (startDateFormItem && endDateFormItem) {\n      var startDateEditorOptions = startDateFormItem.editorOptions;\n      var endDateEditorOptions = endDateFormItem.editorOptions;\n\n      if (allDay) {\n        startDateEditorOptions.type = endDateEditorOptions.type = \"date\";\n      } else {\n        startDateEditorOptions.type = endDateEditorOptions.type = \"datetime\";\n      }\n\n      form.itemOption(startDateExpr, \"editorOptions\", startDateEditorOptions);\n      form.itemOption(endDateExpr, \"editorOptions\", endDateEditorOptions);\n    }\n  },\n  updateFormData: function (appointmentForm, formData) {\n    appointmentForm._lockDateShiftFlag = true;\n    appointmentForm.option(\"formData\", formData);\n    appointmentForm._lockDateShiftFlag = false;\n  }\n};\nmodule.exports = SchedulerAppointmentForm;","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/node_modules/devextreme/ui/scheduler/ui.scheduler.appointment_form.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_form","_form2","_date_serialization","_date_serialization2","_message","_message2","_click","_click2","_type","_type2","_events_engine","_events_engine2","obj","__esModule","RECURRENCE_EDITOR_ITEM_CLASS","SCREEN_SIZE_OF_TOP_LABEL_LOCATION","SCREEN_SIZE_OF_SINGLE_COLUMN","SchedulerAppointmentForm","_appointmentForm","_lockDateShiftFlag","_validateAppointmentFormDate","editor","value","previousValue","isCurrentDateCorrect","isPreviousDateCorrect","option","_getAllDayStartDate","startDate","setHours","_getAllDayEndDate","endDate","Date","setDate","getDate","_updateLabelLocation","formWidth","_rootLayoutManager","_contentReadyAction","create","componentCreator","$container","isReadOnly","formData","_this","default","items","_editors","readOnly","showValidationSummary","scrollingEnabled","colCount","showColonAfterLabel","screenByWidth","parent","outerWidth","prepareAppointmentFormEditors","dataExprs","schedulerInst","that","dataField","textExpr","editorType","colSpan","label","text","format","startDateExpr","validationRules","type","editorOptions","width","calendarOptions","firstDayOfWeek","onValueChanged","args","component","deserializeDate","endDateEditor","getEditor","endDateExpr","endValue","isDefined","duration","getTime","startDateTimeZoneExpr","showColon","observer","visible","startDateEditor","startValue","endDateTimeZoneExpr","allDayExpr","_workSpace","calculateEndDate","itemType","descriptionExpr","recurrenceRuleExpr","_getRecurrenceRule","fire","onContentReady","$editorField","element","closest","$editorLabel","find","off","name","on","toggle","cssClass","splice","schedulerInstance","appointmentForm","isEmptyObject","concatResources","resources","concat","checkEditorsType","form","allDay","startDateFormItem","itemOption","endDateFormItem","startDateEditorOptions","endDateEditorOptions","updateFormData","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/ui.scheduler.appointment_form.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _form = require(\"../form\");\r\nvar _form2 = _interopRequireDefault(_form);\r\nvar _date_serialization = require(\"../../core/utils/date_serialization\");\r\nvar _date_serialization2 = _interopRequireDefault(_date_serialization);\r\nvar _message = require(\"../../localization/message\");\r\nvar _message2 = _interopRequireDefault(_message);\r\nvar _click = require(\"../../events/click\");\r\nvar _click2 = _interopRequireDefault(_click);\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _type2 = _interopRequireDefault(_type);\r\nvar _events_engine = require(\"../../events/core/events_engine\");\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nrequire(\"./ui.scheduler.recurrence_editor\");\r\nrequire(\"./timezones/ui.scheduler.timezone_editor\");\r\nrequire(\"../text_area\");\r\nrequire(\"../tag_box\");\r\nrequire(\"../switch\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar RECURRENCE_EDITOR_ITEM_CLASS = \"dx-scheduler-recurrence-rule-item\";\r\nvar SCREEN_SIZE_OF_TOP_LABEL_LOCATION = 608;\r\nvar SCREEN_SIZE_OF_SINGLE_COLUMN = 460;\r\nvar SchedulerAppointmentForm = {\r\n    _appointmentForm: {},\r\n    _lockDateShiftFlag: false,\r\n    _validateAppointmentFormDate: function(editor, value, previousValue) {\r\n        var isCurrentDateCorrect = null === value || !!value;\r\n        var isPreviousDateCorrect = null === previousValue || !!previousValue;\r\n        if (!isCurrentDateCorrect && isPreviousDateCorrect) {\r\n            editor.option(\"value\", previousValue)\r\n        }\r\n    },\r\n    _getAllDayStartDate: function(startDate) {\r\n        return startDate.setHours(0, 0, 0, 0)\r\n    },\r\n    _getAllDayEndDate: function(startDate) {\r\n        var endDate = new Date(startDate);\r\n        endDate.setDate(startDate.getDate() + 1);\r\n        return endDate\r\n    },\r\n    _updateLabelLocation: function(formWidth) {\r\n        if (formWidth > 0 && this._appointmentForm._rootLayoutManager._contentReadyAction) {\r\n            this._appointmentForm.option(\"labelLocation\", formWidth < SCREEN_SIZE_OF_TOP_LABEL_LOCATION ? \"top\" : \"left\")\r\n        }\r\n    },\r\n    create: function(componentCreator, $container, isReadOnly, formData) {\r\n        var _this = this;\r\n        this._appointmentForm = componentCreator($container, _form2.default, {\r\n            items: this._editors,\r\n            readOnly: isReadOnly,\r\n            showValidationSummary: true,\r\n            scrollingEnabled: true,\r\n            colCount: 2,\r\n            formData: formData,\r\n            showColonAfterLabel: false,\r\n            screenByWidth: function() {\r\n                var formWidth = $container.parent().outerWidth();\r\n                _this._updateLabelLocation(formWidth);\r\n                return formWidth < SCREEN_SIZE_OF_SINGLE_COLUMN ? \"xs\" : \"lg\"\r\n            }\r\n        });\r\n        return this._appointmentForm\r\n    },\r\n    prepareAppointmentFormEditors: function(dataExprs, schedulerInst) {\r\n        var that = this;\r\n        this._editors = [{\r\n            dataField: dataExprs.textExpr,\r\n            editorType: \"dxTextBox\",\r\n            colSpan: 2,\r\n            label: {\r\n                text: _message2.default.format(\"dxScheduler-editorLabelTitle\")\r\n            }\r\n        }, {\r\n            dataField: dataExprs.startDateExpr,\r\n            editorType: \"dxDateBox\",\r\n            label: {\r\n                text: _message2.default.format(\"dxScheduler-editorLabelStartDate\")\r\n            },\r\n            validationRules: [{\r\n                type: \"required\"\r\n            }],\r\n            editorOptions: {\r\n                width: \"100%\",\r\n                calendarOptions: {\r\n                    firstDayOfWeek: schedulerInst.option(\"firstDayOfWeek\")\r\n                },\r\n                onValueChanged: function(args) {\r\n                    that._validateAppointmentFormDate(args.component, args.value, args.previousValue);\r\n                    var value = _date_serialization2.default.deserializeDate(args.value);\r\n                    var previousValue = _date_serialization2.default.deserializeDate(args.previousValue);\r\n                    var endDateEditor = that._appointmentForm.getEditor(dataExprs.endDateExpr);\r\n                    var endValue = _date_serialization2.default.deserializeDate(endDateEditor.option(\"value\"));\r\n                    if (!that._appointmentForm._lockDateShiftFlag && _type2.default.isDefined(value) && _type2.default.isDefined(endValue) && !!endValue && endValue < value) {\r\n                        var duration = endValue.getTime() - previousValue.getTime();\r\n                        endDateEditor.option(\"value\", new Date(value.getTime() + duration))\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            dataField: dataExprs.startDateTimeZoneExpr,\r\n            editorType: \"dxSchedulerTimezoneEditor\",\r\n            colSpan: 2,\r\n            label: {\r\n                text: \" \",\r\n                showColon: false\r\n            },\r\n            editorOptions: {\r\n                observer: schedulerInst\r\n            },\r\n            visible: false\r\n        }, {\r\n            dataField: dataExprs.endDateExpr,\r\n            editorType: \"dxDateBox\",\r\n            label: {\r\n                text: _message2.default.format(\"dxScheduler-editorLabelEndDate\")\r\n            },\r\n            validationRules: [{\r\n                type: \"required\"\r\n            }],\r\n            editorOptions: {\r\n                width: \"100%\",\r\n                calendarOptions: {\r\n                    firstDayOfWeek: schedulerInst.option(\"firstDayOfWeek\")\r\n                },\r\n                onValueChanged: function(args) {\r\n                    that._validateAppointmentFormDate(args.component, args.value, args.previousValue);\r\n                    var value = _date_serialization2.default.deserializeDate(args.value);\r\n                    var previousValue = _date_serialization2.default.deserializeDate(args.previousValue);\r\n                    var startDateEditor = that._appointmentForm.getEditor(dataExprs.startDateExpr);\r\n                    var startValue = _date_serialization2.default.deserializeDate(startDateEditor.option(\"value\"));\r\n                    if (!that._appointmentForm._lockDateShiftFlag && !!value && startValue > value) {\r\n                        var duration = previousValue ? previousValue.getTime() - startValue.getTime() : 0;\r\n                        startDateEditor.option(\"value\", new Date(value.getTime() - duration))\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            dataField: dataExprs.endDateTimeZoneExpr,\r\n            editorType: \"dxSchedulerTimezoneEditor\",\r\n            colSpan: 2,\r\n            label: {\r\n                text: \" \",\r\n                showColon: false\r\n            },\r\n            editorOptions: {\r\n                observer: schedulerInst\r\n            },\r\n            visible: false\r\n        }, {\r\n            dataField: dataExprs.allDayExpr,\r\n            editorType: \"dxSwitch\",\r\n            colSpan: 2,\r\n            label: {\r\n                text: _message2.default.format(\"dxScheduler-allDay\")\r\n            },\r\n            editorOptions: {\r\n                onValueChanged: function(args) {\r\n                    var value = args.value;\r\n                    var startDateEditor = that._appointmentForm.getEditor(dataExprs.startDateExpr);\r\n                    var endDateEditor = that._appointmentForm.getEditor(dataExprs.endDateExpr);\r\n                    if (startDateEditor && endDateEditor) {\r\n                        startDateEditor.option(\"type\", value ? \"date\" : \"datetime\");\r\n                        endDateEditor.option(\"type\", value ? \"date\" : \"datetime\");\r\n                        if (!startDateEditor.option(\"value\")) {\r\n                            return\r\n                        }\r\n                        var startDate = _date_serialization2.default.deserializeDate(startDateEditor.option(\"value\"));\r\n                        if (value) {\r\n                            startDateEditor.option(\"value\", that._getAllDayStartDate(startDate));\r\n                            endDateEditor.option(\"value\", that._getAllDayEndDate(startDate))\r\n                        } else {\r\n                            startDate.setHours(schedulerInst.option(\"startDayHour\"));\r\n                            startDateEditor.option(\"value\", startDate);\r\n                            endDateEditor.option(\"value\", schedulerInst._workSpace.calculateEndDate(_date_serialization2.default.deserializeDate(startDateEditor.option(\"value\"))))\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            itemType: \"empty\",\r\n            colSpan: 2\r\n        }, {\r\n            dataField: dataExprs.descriptionExpr,\r\n            editorType: \"dxTextArea\",\r\n            colSpan: 2,\r\n            label: {\r\n                text: _message2.default.format(\"dxScheduler-editorLabelDescription\")\r\n            }\r\n        }, {\r\n            itemType: \"empty\",\r\n            colSpan: 2\r\n        }, {\r\n            dataField: dataExprs.recurrenceRuleExpr,\r\n            editorType: \"dxRecurrenceEditor\",\r\n            colSpan: 2,\r\n            editorOptions: {\r\n                observer: schedulerInst,\r\n                firstDayOfWeek: schedulerInst.option(\"firstDayOfWeek\"),\r\n                onValueChanged: function(args) {\r\n                    var value = that._getRecurrenceRule(schedulerInst, that._appointmentForm);\r\n                    schedulerInst.fire(\"recurrenceEditorVisibilityChanged\", value)\r\n                },\r\n                onContentReady: function(args) {\r\n                    var $editorField = (0, _renderer2.default)(args.element).closest(\".dx-field-item\");\r\n                    var $editorLabel = $editorField.find(\".dx-field-item-label\");\r\n                    _events_engine2.default.off($editorLabel, _click2.default.name);\r\n                    _events_engine2.default.on($editorLabel, _click2.default.name, function() {\r\n                        args.component.toggle()\r\n                    })\r\n                }\r\n            },\r\n            cssClass: RECURRENCE_EDITOR_ITEM_CLASS,\r\n            label: {\r\n                text: _message2.default.format(\"dxScheduler-editorLabelRecurrence\")\r\n            }\r\n        }];\r\n        if (!dataExprs.recurrenceRuleExpr) {\r\n            this._editors.splice(9, 2)\r\n        }\r\n        return this._editors\r\n    },\r\n    _getRecurrenceRule: function(schedulerInstance, appointmentForm) {\r\n        return !_type2.default.isEmptyObject(appointmentForm) ? !!schedulerInstance.fire(\"getField\", \"recurrenceRule\", appointmentForm.option(\"formData\")) : false\r\n    },\r\n    concatResources: function(resources) {\r\n        this._editors = this._editors.concat(resources)\r\n    },\r\n    checkEditorsType: function(form, startDateExpr, endDateExpr, allDay) {\r\n        var startDateFormItem = form.itemOption(startDateExpr);\r\n        var endDateFormItem = form.itemOption(endDateExpr);\r\n        if (startDateFormItem && endDateFormItem) {\r\n            var startDateEditorOptions = startDateFormItem.editorOptions;\r\n            var endDateEditorOptions = endDateFormItem.editorOptions;\r\n            if (allDay) {\r\n                startDateEditorOptions.type = endDateEditorOptions.type = \"date\"\r\n            } else {\r\n                startDateEditorOptions.type = endDateEditorOptions.type = \"datetime\"\r\n            }\r\n            form.itemOption(startDateExpr, \"editorOptions\", startDateEditorOptions);\r\n            form.itemOption(endDateExpr, \"editorOptions\", endDateEditorOptions)\r\n        }\r\n    },\r\n    updateFormData: function(appointmentForm, formData) {\r\n        appointmentForm._lockDateShiftFlag = true;\r\n        appointmentForm.option(\"formData\", formData);\r\n        appointmentForm._lockDateShiftFlag = false\r\n    }\r\n};\r\nmodule.exports = SchedulerAppointmentForm;\r\n"]},"metadata":{},"sourceType":"script"}
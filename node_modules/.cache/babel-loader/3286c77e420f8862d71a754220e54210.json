{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/ui.scheduler.subscribes.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _array2 = _interopRequireDefault(_array);\n\nvar _utils = require(\"./utils.recurrence\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _type2 = _interopRequireDefault(_type);\n\nvar _date = require(\"../../core/utils/date\");\n\nvar _date2 = _interopRequireDefault(_date);\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _translator = require(\"../../animation/translator\");\n\nvar _translator2 = _interopRequireDefault(_translator);\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _uiScheduler = require(\"./timezones/ui.scheduler.timezones\");\n\nvar _uiScheduler2 = _interopRequireDefault(_uiScheduler);\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _date3 = require(\"../../localization/date\");\n\nvar _date4 = _interopRequireDefault(_date3);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar MINUTES_IN_HOUR = 60;\nvar toMs = _date2.default.dateToMilliseconds;\nvar subscribes = {\n  isCurrentViewAgenda: function () {\n    return \"agenda\" === this.option(\"currentView\");\n  },\n  currentViewUpdated: function (currentView) {\n    this.option(\"currentView\", currentView);\n  },\n  currentDateUpdated: function (date) {\n    this.option(\"currentDate\", date);\n  },\n  setCellDataCacheAlias: function (appointment, geometry) {\n    this._workSpace.setCellDataCacheAlias(appointment, geometry);\n  },\n  needCoordinates: function (options) {\n    var _this = this;\n\n    var appointmentData = options.appointmentData;\n    var startDate = options.startDate;\n\n    var endDate = this._getEndDate(appointmentData);\n\n    var recurrenceRule = this.fire(\"getField\", \"recurrenceRule\", appointmentData);\n\n    var recurrenceException = this._getRecurrenceException(appointmentData);\n\n    var dateRange = this._workSpace.getDateRange();\n\n    var allDay = this.appointmentTakesAllDay(appointmentData);\n    var startViewDate = this.appointmentTakesAllDay(appointmentData) ? _date2.default.trimTime(new Date(dateRange[0])) : dateRange[0];\n    var originalStartDate = options.originalStartDate || startDate;\n    var renderingStrategy = this.getLayoutManager().getRenderingStrategyInstance();\n    var firstDayOfWeek = this.getFirstDayOfWeek();\n    var recurrenceOptions = {\n      rule: recurrenceRule,\n      exception: recurrenceException,\n      start: originalStartDate,\n      end: endDate,\n      min: startViewDate,\n      max: dateRange[1],\n      firstDayOfWeek: firstDayOfWeek\n    };\n\n    var dates = _utils2.default.getDatesByRecurrence(recurrenceOptions);\n\n    var initialDates;\n\n    if (!dates.length) {\n      dates.push(startDate);\n      initialDates = dates;\n    } else {\n      initialDates = dates;\n      dates = dates.map(function (date) {\n        return _date2.default.roundDateByStartDayHour(date, _this._getCurrentViewOption(\"startDayHour\"));\n      });\n    }\n\n    if (renderingStrategy.needSeparateAppointment(allDay)) {\n      var datesLength = dates.length;\n      var longParts = [];\n      var resultDates = [];\n\n      var _loop = function (i) {\n        var endDateOfPart = renderingStrategy.endDate(appointmentData, {\n          startDate: dates[i]\n        }, !!recurrenceRule);\n        longParts = _date2.default.getDatesOfInterval(dates[i], endDateOfPart, {\n          milliseconds: _this.getWorkSpace().getIntervalDuration(allDay)\n        });\n        var maxDate = new Date(dateRange[1]);\n        resultDates = resultDates.concat(longParts.filter(function (el) {\n          return new Date(el) < maxDate;\n        }));\n      };\n\n      for (var i = 0; i < datesLength; i++) {\n        _loop(i);\n      }\n\n      dates = resultDates;\n    }\n\n    var itemResources = this._resourcesManager.getResourcesFromItem(appointmentData);\n\n    allDay = this.appointmentTakesAllDay(appointmentData) && this._workSpace.supportAllDayRow();\n    return this._getCoordinates(initialDates, dates, itemResources, allDay);\n  },\n  isGroupedByDate: function () {\n    return this.getWorkSpace().isGroupedByDate();\n  },\n  showAppointmentTooltip: function (options) {\n    var appointmentData = options.data;\n    var targetData = this.fire(\"getTargetedAppointmentData\", appointmentData, (0, _renderer2.default)(options.target));\n    this.showAppointmentTooltip(appointmentData, options.target, targetData);\n  },\n  hideAppointmentTooltip: function () {\n    this.hideAppointmentTooltip();\n  },\n  showAddAppointmentPopup: function (appointmentData) {\n    var processedData = {};\n    (0, _iterator.each)([\"startDate\", \"endDate\", \"allDay\"], function (_, field) {\n      if (void 0 !== appointmentData[field]) {\n        this.fire(\"setField\", field, processedData, appointmentData[field]);\n        delete appointmentData[field];\n      }\n    }.bind(this));\n    this.showAppointmentPopup((0, _extend.extend)(processedData, appointmentData), true);\n  },\n  showEditAppointmentPopup: function (options) {\n    var appointmentData = options.data;\n    options.$appointment = (0, _renderer2.default)(options.target);\n    options.skipHoursProcessing = true;\n\n    var singleAppointmentData = this._getSingleAppointmentData(appointmentData, options);\n\n    var startDate = this.fire(\"getField\", \"startDate\", singleAppointmentData);\n    this.showAppointmentPopup(appointmentData, false, singleAppointmentData, startDate);\n  },\n  updateAppointmentAfterResize: function (options) {\n    var targetAppointment = options.target;\n    options.isAppointmentResized = true;\n\n    var singleAppointment = this._getSingleAppointmentData(targetAppointment, options);\n\n    var startDate = this.fire(\"getField\", \"startDate\", singleAppointment);\n    var updatedData = (0, _extend.extend)(true, {}, options.data);\n\n    this._convertDatesByTimezoneBack(true, updatedData);\n\n    this._checkRecurringAppointment(targetAppointment, singleAppointment, startDate, function () {\n      this._updateAppointment(targetAppointment, updatedData, function () {\n        this._appointments.moveAppointmentBack();\n      });\n    }.bind(this));\n  },\n  getUpdatedData: function (options) {\n    return this._getUpdatedData({\n      data: options.data\n    });\n  },\n  updateAppointmentAfterDrag: function (options) {\n    var target = options.data;\n\n    var updatedData = this._getUpdatedData(options);\n\n    var newCellIndex = this._workSpace.getDroppableCellIndex();\n\n    var oldCellIndex = this._workSpace.getCellIndexByCoordinates(options.coordinates);\n\n    var becomeAllDay = this.fire(\"getField\", \"allDay\", updatedData);\n    var wasAllDay = this.fire(\"getField\", \"allDay\", target);\n    var dragEvent = options.event;\n    var appointment = (0, _extend.extend)({}, target, updatedData);\n    var movedToAllDay = this._workSpace.supportAllDayRow() && becomeAllDay;\n\n    var cellData = this._workSpace.getCellDataByCoordinates(options.coordinates, movedToAllDay);\n\n    var movedBetweenAllDayAndSimple = this._workSpace.supportAllDayRow() && (wasAllDay && !becomeAllDay || !wasAllDay && becomeAllDay);\n\n    if (newCellIndex !== oldCellIndex || movedBetweenAllDayAndSimple) {\n      this._checkRecurringAppointment(target, appointment, cellData.startDate, function () {\n        this._convertDatesByTimezoneBack(true, updatedData, appointment);\n\n        this._updateAppointment(target, appointment, function () {\n          this._appointments.moveAppointmentBack(dragEvent);\n        }, dragEvent);\n      }.bind(this), void 0, void 0, dragEvent);\n    } else {\n      this._appointments.moveAppointmentBack(dragEvent);\n    }\n  },\n  deleteAppointment: function (options) {\n    options.$appointment = (0, _renderer2.default)(options.target);\n    var appointmentData = options.data;\n\n    var singleAppointmentData = this._getSingleAppointmentData(appointmentData, options);\n\n    this.checkAndDeleteAppointment(appointmentData, singleAppointmentData);\n  },\n  getAppointmentColor: function (options) {\n    var resourcesManager = this._resourcesManager;\n    var resourceForPainting = resourcesManager.getResourceForPainting(this._getCurrentViewOption(\"groups\"));\n    var response = new _deferred.Deferred().resolve().promise();\n\n    if (resourceForPainting) {\n      var field = resourcesManager.getField(resourceForPainting);\n      var groupIndex = options.groupIndex;\n\n      var groups = this._workSpace._getCellGroups(groupIndex);\n\n      var resourceValues = _array2.default.wrapToArray(resourcesManager.getDataAccessors(field, \"getter\")(options.itemData));\n\n      var groupId = resourceValues.length ? resourceValues[0] : void 0;\n\n      for (var i = 0; i < groups.length; i++) {\n        if (groups[i].name === field) {\n          groupId = groups[i].id;\n          break;\n        }\n      }\n\n      response = resourcesManager.getResourceColor(field, groupId);\n    }\n\n    return response;\n  },\n  getHeaderHeight: function () {\n    return this._header._$element && parseInt(this._header._$element.outerHeight(), 10);\n  },\n  getResourcesFromItem: function (itemData) {\n    return this._resourcesManager.getResourcesFromItem(itemData);\n  },\n  getBoundOffset: function () {\n    return {\n      top: -this.getWorkSpaceAllDayHeight()\n    };\n  },\n  appointmentTakesSeveralDays: function (appointment) {\n    return this._appointmentModel.appointmentTakesSeveralDays(appointment);\n  },\n  appointmentFocused: function () {\n    this._workSpace.restoreScrollTop();\n  },\n  getTextAndFormatDate: function (data, currentData, format) {\n    var fields = [\"startDate\", \"endDate\", \"startDateTimeZone\", \"endDateTimeZone\", \"allDay\", \"text\"];\n    var appointmentFields = this.fire(\"_getAppointmentFields\", (0, _extend.extend)({}, data, currentData), fields);\n    var startDate = this.fire(\"convertDateByTimezone\", appointmentFields.startDate, appointmentFields.startDateTimeZone);\n    var endDate = this.fire(\"convertDateByTimezone\", appointmentFields.endDate, appointmentFields.endDateTimeZone);\n    return {\n      text: this.fire(\"createAppointmentTitle\", appointmentFields),\n      formatDate: this.fire(\"_formatDates\", startDate, endDate, appointmentFields.allDay, format)\n    };\n  },\n  createAppointmentTitle: function (data) {\n    if (_type2.default.isPlainObject(data)) {\n      return data.text;\n    }\n\n    return String(data);\n  },\n  _getAppointmentFields: function (data, arrayOfFields) {\n    var _this2 = this;\n\n    return arrayOfFields.reduce(function (accumulator, field) {\n      accumulator[field] = _this2.fire(\"getField\", field, data);\n      return accumulator;\n    }, {});\n  },\n  _formatDates: function (startDate, endDate, isAllDay, format) {\n    var formatType = format || this.fire(\"_getTypeFormat\", startDate, endDate, isAllDay);\n    var formatTypes = {\n      DATETIME: function () {\n        var dateTimeFormat = \"mediumdatemediumtime\";\n        var startDateString = _date4.default.format(startDate, dateTimeFormat) + \" - \";\n        var endDateString = startDate.getDate() === endDate.getDate() ? _date4.default.format(endDate, \"shorttime\") : _date4.default.format(endDate, dateTimeFormat);\n        return startDateString + endDateString;\n      },\n      TIME: function () {\n        return _date4.default.format(startDate, \"shorttime\") + \" - \" + _date4.default.format(endDate, \"shorttime\");\n      },\n      DATE: function () {\n        var dateTimeFormat = \"monthAndDay\";\n\n        var startDateString = _date4.default.format(startDate, dateTimeFormat);\n\n        var isDurationMoreThanDay = endDate.getTime() - startDate.getTime() > toMs(\"day\");\n        var endDateString = isDurationMoreThanDay || endDate.getDate() !== startDate.getDate() ? \" - \" + _date4.default.format(endDate, dateTimeFormat) : \"\";\n        return startDateString + endDateString;\n      }\n    };\n    return formatTypes[formatType]();\n  },\n  _getTypeFormat: function (startDate, endDate, isAllDay) {\n    if (isAllDay) {\n      return \"DATE\";\n    }\n\n    if (\"month\" !== this.option(\"currentView\") && _date2.default.sameDate(startDate, endDate)) {\n      return \"TIME\";\n    }\n\n    return \"DATETIME\";\n  },\n  getResizableAppointmentArea: function (options) {\n    var allDay = options.allDay;\n\n    var groups = this._getCurrentViewOption(\"groups\");\n\n    if (groups && groups.length) {\n      if (allDay || this.getLayoutManager().getRenderingStrategyInstance()._needHorizontalGroupBounds()) {\n        var horizontalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\n\n        return {\n          left: horizontalGroupBounds.left,\n          right: horizontalGroupBounds.right,\n          top: 0,\n          bottom: 0\n        };\n      }\n\n      if (this.getLayoutManager().getRenderingStrategyInstance()._needVerticalGroupBounds(allDay) && this._workSpace._isVerticalGroupedWorkSpace()) {\n        var verticalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\n\n        return {\n          left: 0,\n          right: 0,\n          top: verticalGroupBounds.top,\n          bottom: verticalGroupBounds.bottom\n        };\n      }\n    }\n  },\n  needRecalculateResizableArea: function () {\n    return this.getWorkSpace().needRecalculateResizableArea();\n  },\n  getAppointmentGeometry: function (settings) {\n    return this.getLayoutManager().getRenderingStrategyInstance().getAppointmentGeometry(settings);\n  },\n  isAllDay: function (appointmentData) {\n    return this.getLayoutManager().getRenderingStrategyInstance().isAllDay(appointmentData);\n  },\n  getDeltaTime: function (e, initialSize, itemData) {\n    return this.getLayoutManager().getRenderingStrategyInstance().getDeltaTime(e, initialSize, itemData);\n  },\n  getDropDownAppointmentWidth: function (isAllDay) {\n    return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentWidth(this._getViewCountConfig().intervalCount, isAllDay);\n  },\n  getDropDownAppointmentHeight: function () {\n    return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentHeight();\n  },\n  getStartDate: function (appointmentData, skipNormalize) {\n    return this._getStartDate(appointmentData, skipNormalize);\n  },\n  getCellWidth: function () {\n    return this._cellWidth;\n  },\n  getCellHeight: function () {\n    return this._cellHeight;\n  },\n  getResizableStep: function () {\n    var cellWidth = this._cellWidth;\n    var workSpace = this.getWorkSpace();\n\n    if (workSpace.isGroupedByDate()) {\n      return workSpace._getGroupCount() * cellWidth;\n    }\n\n    return cellWidth;\n  },\n  getEndDate: function (appointmentData, skipNormalize) {\n    return this._getEndDate(appointmentData, skipNormalize);\n  },\n  getRenderingStrategy: function () {\n    return this._getAppointmentsRenderingStrategy();\n  },\n  getMaxAppointmentCountPerCellByType: function (isAllDay) {\n    return this.getRenderingStrategyInstance()._getMaxAppointmentCountPerCellByType(isAllDay);\n  },\n  needCorrectAppointmentDates: function () {\n    return this.getRenderingStrategyInstance().needCorrectAppointmentDates();\n  },\n  getRenderingStrategyDirection: function () {\n    return this.getRenderingStrategyInstance().getDirection();\n  },\n  getWorkSpaceDateTableOffset: function () {\n    return this.getWorkSpaceDateTableOffset();\n  },\n  getFullWeekAppointmentWidth: function (options) {\n    var groupIndex = options.groupIndex;\n    return this._workSpace.getGroupWidth(groupIndex);\n  },\n  getMaxAppointmentWidth: function (options) {\n    var workSpace = this._workSpace;\n    return workSpace.getCellCountToLastViewDate(options.date) * workSpace.getCellWidth();\n  },\n  updateAppointmentStartDate: function (options) {\n    var appointment = options.appointment;\n\n    var firstViewDate = this._workSpace.getStartViewDate();\n\n    var startDate = new Date(options.startDate);\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    var updatedStartDate;\n\n    if (this.appointmentTakesAllDay(appointment)) {\n      updatedStartDate = _date2.default.normalizeDate(startDate, firstViewDate);\n    } else {\n      if (startDate < firstViewDate) {\n        startDate = firstViewDate;\n      }\n\n      updatedStartDate = _date2.default.normalizeDate(options.startDate, new Date(startDate));\n    }\n\n    return _date2.default.roundDateByStartDayHour(updatedStartDate, startDayHour);\n  },\n  updateAppointmentEndDate: function (options) {\n    var endDate = options.endDate;\n\n    var endDayHour = this._getCurrentViewOption(\"endDayHour\");\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    var updatedEndDate = endDate;\n\n    if (endDate.getHours() >= endDayHour) {\n      updatedEndDate.setHours(endDayHour, 0, 0, 0);\n    } else {\n      if (!options.isSameDate && startDayHour > 0 && 60 * endDate.getHours() + endDate.getMinutes() < 60 * startDayHour) {\n        updatedEndDate = new Date(updatedEndDate.getTime() - toMs(\"day\"));\n        updatedEndDate.setHours(endDayHour, 0, 0, 0);\n      }\n    }\n\n    return updatedEndDate;\n  },\n  renderCompactAppointments: function (options) {\n    this._compactAppointmentsHelper.render(options);\n  },\n  clearCompactAppointments: function () {\n    this._compactAppointmentsHelper.clear();\n  },\n  supportCompactDropDownAppointments: function () {\n    return this._workSpace._supportCompactDropDownAppointments();\n  },\n  isApplyCompactAppointmentOffset: function () {\n    return this._workSpace._isApplyCompactAppointmentOffset();\n  },\n  getGroupCount: function () {\n    return this._workSpace._getGroupCount();\n  },\n  mapAppointmentFields: function (config) {\n    return {\n      appointmentData: config.itemData,\n      appointmentElement: config.itemElement,\n      targetedAppointmentData: this.fire(\"getTargetedAppointmentData\", config.itemData, config.itemElement)\n    };\n  },\n  getOffsetByAllDayPanel: function (groupIndex) {\n    return this._workSpace._getOffsetByAllDayPanel(groupIndex);\n  },\n  getGroupTop: function (groupIndex) {\n    return this._workSpace._getGroupTop(groupIndex);\n  },\n  updateResizableArea: function () {\n    var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\n    var horizontalResizables = (0, _common.grep)($allResizableElements, function (el) {\n      var $el = (0, _renderer2.default)(el);\n      var resizableInst = $el.dxResizable(\"instance\");\n      var area = resizableInst.option(\"area\");\n      return (0, _array.inArray)(resizableInst.option(\"handles\"), [\"right left\", \"left right\"]) > -1 && _type2.default.isPlainObject(area);\n    });\n    (0, _iterator.each)(horizontalResizables, function (_, el) {\n      var $el = (0, _renderer2.default)(el);\n\n      var position = _translator2.default.locate($el);\n\n      var appointmentData = this._appointments._getItemData($el);\n\n      var area = this._appointments._calculateResizableArea({\n        left: position.left\n      }, appointmentData);\n\n      $el.dxResizable(\"instance\").option(\"area\", area);\n    }.bind(this));\n  },\n  recurrenceEditorVisibilityChanged: function (visible) {\n    this.recurrenceEditorVisibilityChanged(visible);\n  },\n  resizePopup: function () {\n    this.resizePopup();\n  },\n  getField: function (field, obj) {\n    if (!_type2.default.isDefined(this._dataAccessors.getter[field])) {\n      return;\n    }\n\n    return this._dataAccessors.getter[field](obj);\n  },\n  setField: function (field, obj, value) {\n    if (!_type2.default.isDefined(this._dataAccessors.setter[field])) {\n      return;\n    }\n\n    var splitExprStr = this.option(field + \"Expr\").split(\".\");\n    var rootField = splitExprStr[0];\n\n    if (void 0 === obj[rootField] && splitExprStr.length > 1) {\n      var emptyChain = function (arr) {\n        var result = {};\n        var tmp = result;\n        var arrLength = arr.length - 1;\n\n        for (var i = 1; i < arrLength; i++) {\n          tmp = tmp[arr[i]] = {};\n        }\n\n        return result;\n      }(splitExprStr);\n\n      obj[rootField] = emptyChain;\n    }\n\n    this._dataAccessors.setter[field](obj, value);\n\n    return obj;\n  },\n  prerenderFilter: function () {\n    var dateRange = this.getWorkSpace().getDateRange();\n\n    var resources = this._resourcesManager.getResourcesData();\n\n    var allDay;\n\n    if (!this.option(\"showAllDayPanel\") && this._workSpace.supportAllDayRow()) {\n      allDay = false;\n    }\n\n    return this._appointmentModel.filterLoadedAppointments({\n      startDayHour: this._getCurrentViewOption(\"startDayHour\"),\n      endDayHour: this._getCurrentViewOption(\"endDayHour\"),\n      min: dateRange[0],\n      max: dateRange[1],\n      resources: resources,\n      allDay: allDay,\n      firstDayOfWeek: this.getFirstDayOfWeek(),\n      recurrenceException: this._getRecurrenceException.bind(this)\n    }, this._subscribes.convertDateByTimezone.bind(this));\n  },\n  dayHasAppointment: function (day, appointment, trimTime) {\n    return this.dayHasAppointment(day, appointment, trimTime);\n  },\n  createResourcesTree: function () {\n    return this._resourcesManager.createResourcesTree(this._loadedResources);\n  },\n  getResourceTreeLeaves: function (tree, appointmentResources) {\n    return this._resourcesManager.getResourceTreeLeaves(tree, appointmentResources);\n  },\n  createReducedResourcesTree: function () {\n    var tree = this._resourcesManager.createResourcesTree(this._loadedResources);\n\n    return this._resourcesManager.reduceResourcesTree(tree, this.getFilteredItems());\n  },\n  groupAppointmentsByResources: function (appointments) {\n    var result = {\n      0: appointments\n    };\n\n    var groups = this._getCurrentViewOption(\"groups\");\n\n    if (groups && groups.length && this._resourcesManager.getResourcesData().length) {\n      result = this._resourcesManager.groupAppointmentsByResources(appointments, this._loadedResources);\n    }\n\n    var totalResourceCount = 0;\n    (0, _iterator.each)(this._loadedResources, function (i, resource) {\n      if (!i) {\n        totalResourceCount = resource.items.length;\n      } else {\n        totalResourceCount *= resource.items.length;\n      }\n    });\n\n    for (var j = 0; j < totalResourceCount; j++) {\n      var index = j.toString();\n\n      if (result[index]) {\n        continue;\n      }\n\n      result[index] = [];\n    }\n\n    return result;\n  },\n  getAgendaRows: function (options) {\n    var renderingStrategy = this._layoutManager.getRenderingStrategyInstance();\n\n    var calculateRows = renderingStrategy.calculateRows.bind(renderingStrategy);\n    var d = new _deferred.Deferred();\n\n    function rowsCalculated(appointments) {\n      var result = calculateRows(appointments, options.agendaDuration, options.currentDate);\n\n      this._dataSourceLoadedCallback.remove(rowsCalculated);\n\n      d.resolve(result);\n    }\n\n    this._dataSourceLoadedCallback.add(rowsCalculated);\n\n    return d.promise();\n  },\n  getAgendaVerticalStepHeight: function () {\n    return this.getWorkSpace().getAgendaVerticalStepHeight();\n  },\n  getAgendaDuration: function () {\n    return this._getCurrentViewOption(\"agendaDuration\");\n  },\n  getStartViewDate: function () {\n    return this.getStartViewDate();\n  },\n  getEndViewDate: function () {\n    return this.getEndViewDate();\n  },\n  getMaxAppointmentsPerCell: function () {\n    return this.getMaxAppointmentsPerCell();\n  },\n  forceMaxAppointmentPerCell: function () {\n    return this.forceMaxAppointmentPerCell();\n  },\n  agendaIsReady: function (rows, innerRowOffset, outerRowOffset) {\n    var $appts = this.getAppointmentsInstance()._itemElements();\n\n    var total = 0;\n    $appts.css(\"marginBottom\", innerRowOffset);\n\n    var applyOffset = function (_, count) {\n      var index = count + total - 1;\n      $appts.eq(index).css(\"marginBottom\", outerRowOffset);\n      total += count;\n    };\n\n    for (var i = 0; i < rows.length; i++) {\n      (0, _iterator.each)(rows[i], applyOffset);\n    }\n  },\n  getTimezone: function () {\n    return this._getTimezoneOffsetByOption();\n  },\n  getClientTimezoneOffset: function (date) {\n    date = date || new Date();\n    return _uiScheduler2.default.getClientTimezoneOffset(date);\n  },\n  convertDateByTimezone: function (date, appointmentTimezone) {\n    date = new Date(date);\n\n    var tzOffsets = this._subscribes.getComplexOffsets(this, date, appointmentTimezone);\n\n    date = this._subscribes.translateDateToAppointmentTimeZone(date, tzOffsets);\n    date = this._subscribes.translateDateToCommonTimeZone(date, tzOffsets);\n    return date;\n  },\n  convertDateByTimezoneBack: function (date, appointmentTimezone) {\n    date = new Date(date);\n\n    var tzOffsets = this._subscribes.getComplexOffsets(this, date, appointmentTimezone);\n\n    date = this._subscribes.translateDateToAppointmentTimeZone(date, tzOffsets, true);\n    date = this._subscribes.translateDateToCommonTimeZone(date, tzOffsets, true);\n    return date;\n  },\n  translateDateToAppointmentTimeZone: function (date, offsets, back) {\n    var operation = back ? -1 : 1;\n    var dateInUTC = date.getTime() - operation * offsets.client * toMs(\"hour\");\n    return new Date(dateInUTC + operation * offsets.appointment * toMs(\"hour\"));\n  },\n  translateDateToCommonTimeZone: function (date, offsets, back) {\n    var operation = back ? -1 : 1;\n\n    if (\"number\" === typeof offsets.common) {\n      var offset = offsets.common - offsets.appointment;\n      var hoursOffset = (offset < 0 ? -1 : 1) * Math.floor(Math.abs(offset));\n      var minutesOffset = offset % 1;\n      date.setHours(date.getHours() + operation * hoursOffset);\n      date.setMinutes(date.getMinutes() + operation * minutesOffset * MINUTES_IN_HOUR);\n    }\n\n    return date;\n  },\n  getComplexOffsets: function (scheduler, date, appointmentTimezone) {\n    var clientTimezoneOffset = -this.getClientTimezoneOffset(date) / toMs(\"hour\");\n\n    var commonTimezoneOffset = scheduler._getTimezoneOffsetByOption(date);\n\n    var appointmentTimezoneOffset = scheduler._calculateTimezoneByValue(appointmentTimezone, date);\n\n    if (\"number\" !== typeof appointmentTimezoneOffset) {\n      appointmentTimezoneOffset = clientTimezoneOffset;\n    }\n\n    return {\n      client: clientTimezoneOffset,\n      common: commonTimezoneOffset,\n      appointment: appointmentTimezoneOffset\n    };\n  },\n  getDaylightOffset: function (startDate, endDate) {\n    return startDate.getTimezoneOffset() - endDate.getTimezoneOffset();\n  },\n  getTimezonesDisplayName: function () {\n    return _uiScheduler2.default.getTimezonesDisplayName();\n  },\n  getTimezoneDisplayNameById: function (id) {\n    return _uiScheduler2.default.getTimezoneDisplayNameById(id);\n  },\n  getSimilarTimezones: function (id) {\n    return _uiScheduler2.default.getSimilarTimezones(id);\n  },\n  getTimezonesIdsByDisplayName: function (displayName) {\n    return _uiScheduler2.default.getTimezonesIdsByDisplayName(displayName);\n  },\n  getTargetedAppointmentData: function (appointmentData, appointmentElement, skipTimezoneConvert) {\n    var $appointmentElement = (0, _renderer2.default)(appointmentElement);\n    var appointmentIndex = $appointmentElement.data(this._appointments._itemIndexKey());\n\n    var recurringData = this._getSingleAppointmentData(appointmentData, {\n      skipDateCalculation: true,\n      $appointment: $appointmentElement,\n      skipHoursProcessing: true\n    });\n\n    var result = {};\n    (0, _extend.extend)(true, result, appointmentData, recurringData);\n\n    if (this._isAppointmentRecurrence(appointmentData) && !skipTimezoneConvert) {\n      this._convertDatesByTimezoneBack(false, result);\n    }\n\n    appointmentElement && this.setTargetedAppointmentResources(result, appointmentElement, appointmentIndex);\n    return result;\n  },\n  getAppointmentDurationInMs: function (options) {\n    var startDate = options.startDate;\n    var endDate = options.endDate;\n    var allDay = options.allDay;\n    var appointmentDuration = endDate.getTime() - startDate.getTime();\n    var dayDuration = toMs(\"day\");\n\n    var visibleDayDuration = this._workSpace.getVisibleDayDuration();\n\n    var result = 0;\n\n    if (allDay) {\n      var ceilQuantityOfDays = Math.ceil(appointmentDuration / dayDuration);\n      result = ceilQuantityOfDays * visibleDayDuration;\n    } else {\n      var isDifferentDate = !_date2.default.sameDate(startDate, new Date(endDate.getTime() - 1));\n      var floorQuantityOfDays = Math.floor(appointmentDuration / dayDuration);\n      var tailDuration;\n\n      if (isDifferentDate) {\n        var startDateEndHour = new Date(new Date(startDate).setHours(this.option(\"endDayHour\"), 0, 0));\n        var hiddenDayDuration = dayDuration - visibleDayDuration - (startDate.getTime() > startDateEndHour.getTime() ? startDate.getTime() - startDateEndHour.getTime() : 0);\n        tailDuration = appointmentDuration - (floorQuantityOfDays ? floorQuantityOfDays * dayDuration : hiddenDayDuration);\n        var startDayTime = this.option(\"startDayHour\") * toMs(\"hour\");\n\n        var endPartDuration = endDate - _date2.default.trimTime(endDate);\n\n        if (endPartDuration < startDayTime) {\n          if (floorQuantityOfDays) {\n            tailDuration -= hiddenDayDuration;\n          }\n\n          tailDuration += startDayTime - endPartDuration;\n        }\n      } else {\n        tailDuration = appointmentDuration % dayDuration;\n      }\n\n      if (tailDuration > visibleDayDuration) {\n        tailDuration = visibleDayDuration;\n      }\n\n      result = floorQuantityOfDays * visibleDayDuration + tailDuration || toMs(\"minute\");\n    }\n\n    return result;\n  },\n  fixWrongEndDate: function (appointment, startDate, endDate) {\n    return this._appointmentModel.fixWrongEndDate(appointment, startDate, endDate);\n  },\n  getEndDayHour: function () {\n    return this._workSpace.option(\"endDayHour\") || this.option(\"endDayHour\");\n  },\n  getStartDayHour: function () {\n    return this._workSpace.option(\"startDayHour\") || this.option(\"startDayHour\");\n  },\n  isAdaptive: function () {\n    return this.option(\"adaptivityEnabled\");\n  },\n  moveBack: function () {\n    var dragBehavior = this.getWorkSpace().dragBehavior;\n    dragBehavior && dragBehavior.moveBack();\n  }\n};\nmodule.exports = subscribes;","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/node_modules/devextreme/ui/scheduler/ui.scheduler.subscribes.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_array","_array2","_utils","_utils2","_type","_type2","_date","_date2","_iterator","_translator","_translator2","_common","_extend","_uiScheduler","_uiScheduler2","_deferred","_date3","_date4","obj","__esModule","MINUTES_IN_HOUR","toMs","default","dateToMilliseconds","subscribes","isCurrentViewAgenda","option","currentViewUpdated","currentView","currentDateUpdated","date","setCellDataCacheAlias","appointment","geometry","_workSpace","needCoordinates","options","_this","appointmentData","startDate","endDate","_getEndDate","recurrenceRule","fire","recurrenceException","_getRecurrenceException","dateRange","getDateRange","allDay","appointmentTakesAllDay","startViewDate","trimTime","Date","originalStartDate","renderingStrategy","getLayoutManager","getRenderingStrategyInstance","firstDayOfWeek","getFirstDayOfWeek","recurrenceOptions","rule","exception","start","end","min","max","dates","getDatesByRecurrence","initialDates","length","push","map","roundDateByStartDayHour","_getCurrentViewOption","needSeparateAppointment","datesLength","longParts","resultDates","_loop","i","endDateOfPart","getDatesOfInterval","milliseconds","getWorkSpace","getIntervalDuration","maxDate","concat","filter","el","itemResources","_resourcesManager","getResourcesFromItem","supportAllDayRow","_getCoordinates","isGroupedByDate","showAppointmentTooltip","data","targetData","target","hideAppointmentTooltip","showAddAppointmentPopup","processedData","each","_","field","bind","showAppointmentPopup","extend","showEditAppointmentPopup","$appointment","skipHoursProcessing","singleAppointmentData","_getSingleAppointmentData","updateAppointmentAfterResize","targetAppointment","isAppointmentResized","singleAppointment","updatedData","_convertDatesByTimezoneBack","_checkRecurringAppointment","_updateAppointment","_appointments","moveAppointmentBack","getUpdatedData","_getUpdatedData","updateAppointmentAfterDrag","newCellIndex","getDroppableCellIndex","oldCellIndex","getCellIndexByCoordinates","coordinates","becomeAllDay","wasAllDay","dragEvent","event","movedToAllDay","cellData","getCellDataByCoordinates","movedBetweenAllDayAndSimple","deleteAppointment","checkAndDeleteAppointment","getAppointmentColor","resourcesManager","resourceForPainting","getResourceForPainting","response","Deferred","resolve","promise","getField","groupIndex","groups","_getCellGroups","resourceValues","wrapToArray","getDataAccessors","itemData","groupId","name","id","getResourceColor","getHeaderHeight","_header","_$element","parseInt","outerHeight","getBoundOffset","top","getWorkSpaceAllDayHeight","appointmentTakesSeveralDays","_appointmentModel","appointmentFocused","restoreScrollTop","getTextAndFormatDate","currentData","format","fields","appointmentFields","startDateTimeZone","endDateTimeZone","text","formatDate","createAppointmentTitle","isPlainObject","String","_getAppointmentFields","arrayOfFields","_this2","reduce","accumulator","_formatDates","isAllDay","formatType","formatTypes","DATETIME","dateTimeFormat","startDateString","endDateString","getDate","TIME","DATE","isDurationMoreThanDay","getTime","_getTypeFormat","sameDate","getResizableAppointmentArea","_needHorizontalGroupBounds","horizontalGroupBounds","getGroupBounds","left","right","bottom","_needVerticalGroupBounds","_isVerticalGroupedWorkSpace","verticalGroupBounds","needRecalculateResizableArea","getAppointmentGeometry","settings","getDeltaTime","e","initialSize","getDropDownAppointmentWidth","_getViewCountConfig","intervalCount","getDropDownAppointmentHeight","getStartDate","skipNormalize","_getStartDate","getCellWidth","_cellWidth","getCellHeight","_cellHeight","getResizableStep","cellWidth","workSpace","_getGroupCount","getEndDate","getRenderingStrategy","_getAppointmentsRenderingStrategy","getMaxAppointmentCountPerCellByType","_getMaxAppointmentCountPerCellByType","needCorrectAppointmentDates","getRenderingStrategyDirection","getDirection","getWorkSpaceDateTableOffset","getFullWeekAppointmentWidth","getGroupWidth","getMaxAppointmentWidth","getCellCountToLastViewDate","updateAppointmentStartDate","firstViewDate","getStartViewDate","startDayHour","updatedStartDate","normalizeDate","updateAppointmentEndDate","endDayHour","updatedEndDate","getHours","setHours","isSameDate","getMinutes","renderCompactAppointments","_compactAppointmentsHelper","render","clearCompactAppointments","clear","supportCompactDropDownAppointments","_supportCompactDropDownAppointments","isApplyCompactAppointmentOffset","_isApplyCompactAppointmentOffset","getGroupCount","mapAppointmentFields","config","appointmentElement","itemElement","targetedAppointmentData","getOffsetByAllDayPanel","_getOffsetByAllDayPanel","getGroupTop","_getGroupTop","updateResizableArea","$allResizableElements","$element","find","horizontalResizables","grep","$el","resizableInst","dxResizable","area","inArray","position","locate","_getItemData","_calculateResizableArea","recurrenceEditorVisibilityChanged","visible","resizePopup","isDefined","_dataAccessors","getter","setField","value","setter","splitExprStr","split","rootField","emptyChain","arr","result","tmp","arrLength","prerenderFilter","resources","getResourcesData","filterLoadedAppointments","_subscribes","convertDateByTimezone","dayHasAppointment","day","createResourcesTree","_loadedResources","getResourceTreeLeaves","tree","appointmentResources","createReducedResourcesTree","reduceResourcesTree","getFilteredItems","groupAppointmentsByResources","appointments","totalResourceCount","resource","items","j","index","toString","getAgendaRows","_layoutManager","calculateRows","d","rowsCalculated","agendaDuration","currentDate","_dataSourceLoadedCallback","remove","add","getAgendaVerticalStepHeight","getAgendaDuration","getEndViewDate","getMaxAppointmentsPerCell","forceMaxAppointmentPerCell","agendaIsReady","rows","innerRowOffset","outerRowOffset","$appts","getAppointmentsInstance","_itemElements","total","css","applyOffset","count","eq","getTimezone","_getTimezoneOffsetByOption","getClientTimezoneOffset","appointmentTimezone","tzOffsets","getComplexOffsets","translateDateToAppointmentTimeZone","translateDateToCommonTimeZone","convertDateByTimezoneBack","offsets","back","operation","dateInUTC","client","common","offset","hoursOffset","Math","floor","abs","minutesOffset","setMinutes","scheduler","clientTimezoneOffset","commonTimezoneOffset","appointmentTimezoneOffset","_calculateTimezoneByValue","getDaylightOffset","getTimezoneOffset","getTimezonesDisplayName","getTimezoneDisplayNameById","getSimilarTimezones","getTimezonesIdsByDisplayName","displayName","getTargetedAppointmentData","skipTimezoneConvert","$appointmentElement","appointmentIndex","_itemIndexKey","recurringData","skipDateCalculation","_isAppointmentRecurrence","setTargetedAppointmentResources","getAppointmentDurationInMs","appointmentDuration","dayDuration","visibleDayDuration","getVisibleDayDuration","ceilQuantityOfDays","ceil","isDifferentDate","floorQuantityOfDays","tailDuration","startDateEndHour","hiddenDayDuration","startDayTime","endPartDuration","fixWrongEndDate","getEndDayHour","getStartDayHour","isAdaptive","moveBack","dragBehavior","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/ui.scheduler.subscribes.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _array2 = _interopRequireDefault(_array);\r\nvar _utils = require(\"./utils.recurrence\");\r\nvar _utils2 = _interopRequireDefault(_utils);\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _type2 = _interopRequireDefault(_type);\r\nvar _date = require(\"../../core/utils/date\");\r\nvar _date2 = _interopRequireDefault(_date);\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _translator2 = _interopRequireDefault(_translator);\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _uiScheduler = require(\"./timezones/ui.scheduler.timezones\");\r\nvar _uiScheduler2 = _interopRequireDefault(_uiScheduler);\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _date3 = require(\"../../localization/date\");\r\nvar _date4 = _interopRequireDefault(_date3);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar MINUTES_IN_HOUR = 60;\r\nvar toMs = _date2.default.dateToMilliseconds;\r\nvar subscribes = {\r\n    isCurrentViewAgenda: function() {\r\n        return \"agenda\" === this.option(\"currentView\")\r\n    },\r\n    currentViewUpdated: function(currentView) {\r\n        this.option(\"currentView\", currentView)\r\n    },\r\n    currentDateUpdated: function(date) {\r\n        this.option(\"currentDate\", date)\r\n    },\r\n    setCellDataCacheAlias: function(appointment, geometry) {\r\n        this._workSpace.setCellDataCacheAlias(appointment, geometry)\r\n    },\r\n    needCoordinates: function(options) {\r\n        var _this = this;\r\n        var appointmentData = options.appointmentData;\r\n        var startDate = options.startDate;\r\n        var endDate = this._getEndDate(appointmentData);\r\n        var recurrenceRule = this.fire(\"getField\", \"recurrenceRule\", appointmentData);\r\n        var recurrenceException = this._getRecurrenceException(appointmentData);\r\n        var dateRange = this._workSpace.getDateRange();\r\n        var allDay = this.appointmentTakesAllDay(appointmentData);\r\n        var startViewDate = this.appointmentTakesAllDay(appointmentData) ? _date2.default.trimTime(new Date(dateRange[0])) : dateRange[0];\r\n        var originalStartDate = options.originalStartDate || startDate;\r\n        var renderingStrategy = this.getLayoutManager().getRenderingStrategyInstance();\r\n        var firstDayOfWeek = this.getFirstDayOfWeek();\r\n        var recurrenceOptions = {\r\n            rule: recurrenceRule,\r\n            exception: recurrenceException,\r\n            start: originalStartDate,\r\n            end: endDate,\r\n            min: startViewDate,\r\n            max: dateRange[1],\r\n            firstDayOfWeek: firstDayOfWeek\r\n        };\r\n        var dates = _utils2.default.getDatesByRecurrence(recurrenceOptions);\r\n        var initialDates;\r\n        if (!dates.length) {\r\n            dates.push(startDate);\r\n            initialDates = dates\r\n        } else {\r\n            initialDates = dates;\r\n            dates = dates.map(function(date) {\r\n                return _date2.default.roundDateByStartDayHour(date, _this._getCurrentViewOption(\"startDayHour\"))\r\n            })\r\n        }\r\n        if (renderingStrategy.needSeparateAppointment(allDay)) {\r\n            var datesLength = dates.length;\r\n            var longParts = [];\r\n            var resultDates = [];\r\n            var _loop = function(i) {\r\n                var endDateOfPart = renderingStrategy.endDate(appointmentData, {\r\n                    startDate: dates[i]\r\n                }, !!recurrenceRule);\r\n                longParts = _date2.default.getDatesOfInterval(dates[i], endDateOfPart, {\r\n                    milliseconds: _this.getWorkSpace().getIntervalDuration(allDay)\r\n                });\r\n                var maxDate = new Date(dateRange[1]);\r\n                resultDates = resultDates.concat(longParts.filter(function(el) {\r\n                    return new Date(el) < maxDate\r\n                }))\r\n            };\r\n            for (var i = 0; i < datesLength; i++) {\r\n                _loop(i)\r\n            }\r\n            dates = resultDates\r\n        }\r\n        var itemResources = this._resourcesManager.getResourcesFromItem(appointmentData);\r\n        allDay = this.appointmentTakesAllDay(appointmentData) && this._workSpace.supportAllDayRow();\r\n        return this._getCoordinates(initialDates, dates, itemResources, allDay)\r\n    },\r\n    isGroupedByDate: function() {\r\n        return this.getWorkSpace().isGroupedByDate()\r\n    },\r\n    showAppointmentTooltip: function(options) {\r\n        var appointmentData = options.data;\r\n        var targetData = this.fire(\"getTargetedAppointmentData\", appointmentData, (0, _renderer2.default)(options.target));\r\n        this.showAppointmentTooltip(appointmentData, options.target, targetData)\r\n    },\r\n    hideAppointmentTooltip: function() {\r\n        this.hideAppointmentTooltip()\r\n    },\r\n    showAddAppointmentPopup: function(appointmentData) {\r\n        var processedData = {};\r\n        (0, _iterator.each)([\"startDate\", \"endDate\", \"allDay\"], function(_, field) {\r\n            if (void 0 !== appointmentData[field]) {\r\n                this.fire(\"setField\", field, processedData, appointmentData[field]);\r\n                delete appointmentData[field]\r\n            }\r\n        }.bind(this));\r\n        this.showAppointmentPopup((0, _extend.extend)(processedData, appointmentData), true)\r\n    },\r\n    showEditAppointmentPopup: function(options) {\r\n        var appointmentData = options.data;\r\n        options.$appointment = (0, _renderer2.default)(options.target);\r\n        options.skipHoursProcessing = true;\r\n        var singleAppointmentData = this._getSingleAppointmentData(appointmentData, options);\r\n        var startDate = this.fire(\"getField\", \"startDate\", singleAppointmentData);\r\n        this.showAppointmentPopup(appointmentData, false, singleAppointmentData, startDate)\r\n    },\r\n    updateAppointmentAfterResize: function(options) {\r\n        var targetAppointment = options.target;\r\n        options.isAppointmentResized = true;\r\n        var singleAppointment = this._getSingleAppointmentData(targetAppointment, options);\r\n        var startDate = this.fire(\"getField\", \"startDate\", singleAppointment);\r\n        var updatedData = (0, _extend.extend)(true, {}, options.data);\r\n        this._convertDatesByTimezoneBack(true, updatedData);\r\n        this._checkRecurringAppointment(targetAppointment, singleAppointment, startDate, function() {\r\n            this._updateAppointment(targetAppointment, updatedData, function() {\r\n                this._appointments.moveAppointmentBack()\r\n            })\r\n        }.bind(this))\r\n    },\r\n    getUpdatedData: function(options) {\r\n        return this._getUpdatedData({\r\n            data: options.data\r\n        })\r\n    },\r\n    updateAppointmentAfterDrag: function(options) {\r\n        var target = options.data;\r\n        var updatedData = this._getUpdatedData(options);\r\n        var newCellIndex = this._workSpace.getDroppableCellIndex();\r\n        var oldCellIndex = this._workSpace.getCellIndexByCoordinates(options.coordinates);\r\n        var becomeAllDay = this.fire(\"getField\", \"allDay\", updatedData);\r\n        var wasAllDay = this.fire(\"getField\", \"allDay\", target);\r\n        var dragEvent = options.event;\r\n        var appointment = (0, _extend.extend)({}, target, updatedData);\r\n        var movedToAllDay = this._workSpace.supportAllDayRow() && becomeAllDay;\r\n        var cellData = this._workSpace.getCellDataByCoordinates(options.coordinates, movedToAllDay);\r\n        var movedBetweenAllDayAndSimple = this._workSpace.supportAllDayRow() && (wasAllDay && !becomeAllDay || !wasAllDay && becomeAllDay);\r\n        if (newCellIndex !== oldCellIndex || movedBetweenAllDayAndSimple) {\r\n            this._checkRecurringAppointment(target, appointment, cellData.startDate, function() {\r\n                this._convertDatesByTimezoneBack(true, updatedData, appointment);\r\n                this._updateAppointment(target, appointment, function() {\r\n                    this._appointments.moveAppointmentBack(dragEvent)\r\n                }, dragEvent)\r\n            }.bind(this), void 0, void 0, dragEvent)\r\n        } else {\r\n            this._appointments.moveAppointmentBack(dragEvent)\r\n        }\r\n    },\r\n    deleteAppointment: function(options) {\r\n        options.$appointment = (0, _renderer2.default)(options.target);\r\n        var appointmentData = options.data;\r\n        var singleAppointmentData = this._getSingleAppointmentData(appointmentData, options);\r\n        this.checkAndDeleteAppointment(appointmentData, singleAppointmentData)\r\n    },\r\n    getAppointmentColor: function(options) {\r\n        var resourcesManager = this._resourcesManager;\r\n        var resourceForPainting = resourcesManager.getResourceForPainting(this._getCurrentViewOption(\"groups\"));\r\n        var response = (new _deferred.Deferred).resolve().promise();\r\n        if (resourceForPainting) {\r\n            var field = resourcesManager.getField(resourceForPainting);\r\n            var groupIndex = options.groupIndex;\r\n            var groups = this._workSpace._getCellGroups(groupIndex);\r\n            var resourceValues = _array2.default.wrapToArray(resourcesManager.getDataAccessors(field, \"getter\")(options.itemData));\r\n            var groupId = resourceValues.length ? resourceValues[0] : void 0;\r\n            for (var i = 0; i < groups.length; i++) {\r\n                if (groups[i].name === field) {\r\n                    groupId = groups[i].id;\r\n                    break\r\n                }\r\n            }\r\n            response = resourcesManager.getResourceColor(field, groupId)\r\n        }\r\n        return response\r\n    },\r\n    getHeaderHeight: function() {\r\n        return this._header._$element && parseInt(this._header._$element.outerHeight(), 10)\r\n    },\r\n    getResourcesFromItem: function(itemData) {\r\n        return this._resourcesManager.getResourcesFromItem(itemData)\r\n    },\r\n    getBoundOffset: function() {\r\n        return {\r\n            top: -this.getWorkSpaceAllDayHeight()\r\n        }\r\n    },\r\n    appointmentTakesSeveralDays: function(appointment) {\r\n        return this._appointmentModel.appointmentTakesSeveralDays(appointment)\r\n    },\r\n    appointmentFocused: function() {\r\n        this._workSpace.restoreScrollTop()\r\n    },\r\n    getTextAndFormatDate: function(data, currentData, format) {\r\n        var fields = [\"startDate\", \"endDate\", \"startDateTimeZone\", \"endDateTimeZone\", \"allDay\", \"text\"];\r\n        var appointmentFields = this.fire(\"_getAppointmentFields\", (0, _extend.extend)({}, data, currentData), fields);\r\n        var startDate = this.fire(\"convertDateByTimezone\", appointmentFields.startDate, appointmentFields.startDateTimeZone);\r\n        var endDate = this.fire(\"convertDateByTimezone\", appointmentFields.endDate, appointmentFields.endDateTimeZone);\r\n        return {\r\n            text: this.fire(\"createAppointmentTitle\", appointmentFields),\r\n            formatDate: this.fire(\"_formatDates\", startDate, endDate, appointmentFields.allDay, format)\r\n        }\r\n    },\r\n    createAppointmentTitle: function(data) {\r\n        if (_type2.default.isPlainObject(data)) {\r\n            return data.text\r\n        }\r\n        return String(data)\r\n    },\r\n    _getAppointmentFields: function(data, arrayOfFields) {\r\n        var _this2 = this;\r\n        return arrayOfFields.reduce(function(accumulator, field) {\r\n            accumulator[field] = _this2.fire(\"getField\", field, data);\r\n            return accumulator\r\n        }, {})\r\n    },\r\n    _formatDates: function(startDate, endDate, isAllDay, format) {\r\n        var formatType = format || this.fire(\"_getTypeFormat\", startDate, endDate, isAllDay);\r\n        var formatTypes = {\r\n            DATETIME: function() {\r\n                var dateTimeFormat = \"mediumdatemediumtime\";\r\n                var startDateString = _date4.default.format(startDate, dateTimeFormat) + \" - \";\r\n                var endDateString = startDate.getDate() === endDate.getDate() ? _date4.default.format(endDate, \"shorttime\") : _date4.default.format(endDate, dateTimeFormat);\r\n                return startDateString + endDateString\r\n            },\r\n            TIME: function() {\r\n                return _date4.default.format(startDate, \"shorttime\") + \" - \" + _date4.default.format(endDate, \"shorttime\")\r\n            },\r\n            DATE: function() {\r\n                var dateTimeFormat = \"monthAndDay\";\r\n                var startDateString = _date4.default.format(startDate, dateTimeFormat);\r\n                var isDurationMoreThanDay = endDate.getTime() - startDate.getTime() > toMs(\"day\");\r\n                var endDateString = isDurationMoreThanDay || endDate.getDate() !== startDate.getDate() ? \" - \" + _date4.default.format(endDate, dateTimeFormat) : \"\";\r\n                return startDateString + endDateString\r\n            }\r\n        };\r\n        return formatTypes[formatType]()\r\n    },\r\n    _getTypeFormat: function(startDate, endDate, isAllDay) {\r\n        if (isAllDay) {\r\n            return \"DATE\"\r\n        }\r\n        if (\"month\" !== this.option(\"currentView\") && _date2.default.sameDate(startDate, endDate)) {\r\n            return \"TIME\"\r\n        }\r\n        return \"DATETIME\"\r\n    },\r\n    getResizableAppointmentArea: function(options) {\r\n        var allDay = options.allDay;\r\n        var groups = this._getCurrentViewOption(\"groups\");\r\n        if (groups && groups.length) {\r\n            if (allDay || this.getLayoutManager().getRenderingStrategyInstance()._needHorizontalGroupBounds()) {\r\n                var horizontalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\r\n                return {\r\n                    left: horizontalGroupBounds.left,\r\n                    right: horizontalGroupBounds.right,\r\n                    top: 0,\r\n                    bottom: 0\r\n                }\r\n            }\r\n            if (this.getLayoutManager().getRenderingStrategyInstance()._needVerticalGroupBounds(allDay) && this._workSpace._isVerticalGroupedWorkSpace()) {\r\n                var verticalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\r\n                return {\r\n                    left: 0,\r\n                    right: 0,\r\n                    top: verticalGroupBounds.top,\r\n                    bottom: verticalGroupBounds.bottom\r\n                }\r\n            }\r\n        }\r\n    },\r\n    needRecalculateResizableArea: function() {\r\n        return this.getWorkSpace().needRecalculateResizableArea()\r\n    },\r\n    getAppointmentGeometry: function(settings) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getAppointmentGeometry(settings)\r\n    },\r\n    isAllDay: function(appointmentData) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().isAllDay(appointmentData)\r\n    },\r\n    getDeltaTime: function(e, initialSize, itemData) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getDeltaTime(e, initialSize, itemData)\r\n    },\r\n    getDropDownAppointmentWidth: function(isAllDay) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentWidth(this._getViewCountConfig().intervalCount, isAllDay)\r\n    },\r\n    getDropDownAppointmentHeight: function() {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentHeight()\r\n    },\r\n    getStartDate: function(appointmentData, skipNormalize) {\r\n        return this._getStartDate(appointmentData, skipNormalize)\r\n    },\r\n    getCellWidth: function() {\r\n        return this._cellWidth\r\n    },\r\n    getCellHeight: function() {\r\n        return this._cellHeight\r\n    },\r\n    getResizableStep: function() {\r\n        var cellWidth = this._cellWidth;\r\n        var workSpace = this.getWorkSpace();\r\n        if (workSpace.isGroupedByDate()) {\r\n            return workSpace._getGroupCount() * cellWidth\r\n        }\r\n        return cellWidth\r\n    },\r\n    getEndDate: function(appointmentData, skipNormalize) {\r\n        return this._getEndDate(appointmentData, skipNormalize)\r\n    },\r\n    getRenderingStrategy: function() {\r\n        return this._getAppointmentsRenderingStrategy()\r\n    },\r\n    getMaxAppointmentCountPerCellByType: function(isAllDay) {\r\n        return this.getRenderingStrategyInstance()._getMaxAppointmentCountPerCellByType(isAllDay)\r\n    },\r\n    needCorrectAppointmentDates: function() {\r\n        return this.getRenderingStrategyInstance().needCorrectAppointmentDates()\r\n    },\r\n    getRenderingStrategyDirection: function() {\r\n        return this.getRenderingStrategyInstance().getDirection()\r\n    },\r\n    getWorkSpaceDateTableOffset: function() {\r\n        return this.getWorkSpaceDateTableOffset()\r\n    },\r\n    getFullWeekAppointmentWidth: function(options) {\r\n        var groupIndex = options.groupIndex;\r\n        return this._workSpace.getGroupWidth(groupIndex)\r\n    },\r\n    getMaxAppointmentWidth: function(options) {\r\n        var workSpace = this._workSpace;\r\n        return workSpace.getCellCountToLastViewDate(options.date) * workSpace.getCellWidth()\r\n    },\r\n    updateAppointmentStartDate: function(options) {\r\n        var appointment = options.appointment;\r\n        var firstViewDate = this._workSpace.getStartViewDate();\r\n        var startDate = new Date(options.startDate);\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        var updatedStartDate;\r\n        if (this.appointmentTakesAllDay(appointment)) {\r\n            updatedStartDate = _date2.default.normalizeDate(startDate, firstViewDate)\r\n        } else {\r\n            if (startDate < firstViewDate) {\r\n                startDate = firstViewDate\r\n            }\r\n            updatedStartDate = _date2.default.normalizeDate(options.startDate, new Date(startDate))\r\n        }\r\n        return _date2.default.roundDateByStartDayHour(updatedStartDate, startDayHour)\r\n    },\r\n    updateAppointmentEndDate: function(options) {\r\n        var endDate = options.endDate;\r\n        var endDayHour = this._getCurrentViewOption(\"endDayHour\");\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        var updatedEndDate = endDate;\r\n        if (endDate.getHours() >= endDayHour) {\r\n            updatedEndDate.setHours(endDayHour, 0, 0, 0)\r\n        } else {\r\n            if (!options.isSameDate && startDayHour > 0 && 60 * endDate.getHours() + endDate.getMinutes() < 60 * startDayHour) {\r\n                updatedEndDate = new Date(updatedEndDate.getTime() - toMs(\"day\"));\r\n                updatedEndDate.setHours(endDayHour, 0, 0, 0)\r\n            }\r\n        }\r\n        return updatedEndDate\r\n    },\r\n    renderCompactAppointments: function(options) {\r\n        this._compactAppointmentsHelper.render(options)\r\n    },\r\n    clearCompactAppointments: function() {\r\n        this._compactAppointmentsHelper.clear()\r\n    },\r\n    supportCompactDropDownAppointments: function() {\r\n        return this._workSpace._supportCompactDropDownAppointments()\r\n    },\r\n    isApplyCompactAppointmentOffset: function() {\r\n        return this._workSpace._isApplyCompactAppointmentOffset()\r\n    },\r\n    getGroupCount: function() {\r\n        return this._workSpace._getGroupCount()\r\n    },\r\n    mapAppointmentFields: function(config) {\r\n        return {\r\n            appointmentData: config.itemData,\r\n            appointmentElement: config.itemElement,\r\n            targetedAppointmentData: this.fire(\"getTargetedAppointmentData\", config.itemData, config.itemElement)\r\n        }\r\n    },\r\n    getOffsetByAllDayPanel: function(groupIndex) {\r\n        return this._workSpace._getOffsetByAllDayPanel(groupIndex)\r\n    },\r\n    getGroupTop: function(groupIndex) {\r\n        return this._workSpace._getGroupTop(groupIndex)\r\n    },\r\n    updateResizableArea: function() {\r\n        var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\r\n        var horizontalResizables = (0, _common.grep)($allResizableElements, function(el) {\r\n            var $el = (0, _renderer2.default)(el);\r\n            var resizableInst = $el.dxResizable(\"instance\");\r\n            var area = resizableInst.option(\"area\");\r\n            return (0, _array.inArray)(resizableInst.option(\"handles\"), [\"right left\", \"left right\"]) > -1 && _type2.default.isPlainObject(area)\r\n        });\r\n        (0, _iterator.each)(horizontalResizables, function(_, el) {\r\n            var $el = (0, _renderer2.default)(el);\r\n            var position = _translator2.default.locate($el);\r\n            var appointmentData = this._appointments._getItemData($el);\r\n            var area = this._appointments._calculateResizableArea({\r\n                left: position.left\r\n            }, appointmentData);\r\n            $el.dxResizable(\"instance\").option(\"area\", area)\r\n        }.bind(this))\r\n    },\r\n    recurrenceEditorVisibilityChanged: function(visible) {\r\n        this.recurrenceEditorVisibilityChanged(visible)\r\n    },\r\n    resizePopup: function() {\r\n        this.resizePopup()\r\n    },\r\n    getField: function(field, obj) {\r\n        if (!_type2.default.isDefined(this._dataAccessors.getter[field])) {\r\n            return\r\n        }\r\n        return this._dataAccessors.getter[field](obj)\r\n    },\r\n    setField: function(field, obj, value) {\r\n        if (!_type2.default.isDefined(this._dataAccessors.setter[field])) {\r\n            return\r\n        }\r\n        var splitExprStr = this.option(field + \"Expr\").split(\".\");\r\n        var rootField = splitExprStr[0];\r\n        if (void 0 === obj[rootField] && splitExprStr.length > 1) {\r\n            var emptyChain = function(arr) {\r\n                var result = {};\r\n                var tmp = result;\r\n                var arrLength = arr.length - 1;\r\n                for (var i = 1; i < arrLength; i++) {\r\n                    tmp = tmp[arr[i]] = {}\r\n                }\r\n                return result\r\n            }(splitExprStr);\r\n            obj[rootField] = emptyChain\r\n        }\r\n        this._dataAccessors.setter[field](obj, value);\r\n        return obj\r\n    },\r\n    prerenderFilter: function() {\r\n        var dateRange = this.getWorkSpace().getDateRange();\r\n        var resources = this._resourcesManager.getResourcesData();\r\n        var allDay;\r\n        if (!this.option(\"showAllDayPanel\") && this._workSpace.supportAllDayRow()) {\r\n            allDay = false\r\n        }\r\n        return this._appointmentModel.filterLoadedAppointments({\r\n            startDayHour: this._getCurrentViewOption(\"startDayHour\"),\r\n            endDayHour: this._getCurrentViewOption(\"endDayHour\"),\r\n            min: dateRange[0],\r\n            max: dateRange[1],\r\n            resources: resources,\r\n            allDay: allDay,\r\n            firstDayOfWeek: this.getFirstDayOfWeek(),\r\n            recurrenceException: this._getRecurrenceException.bind(this)\r\n        }, this._subscribes.convertDateByTimezone.bind(this))\r\n    },\r\n    dayHasAppointment: function(day, appointment, trimTime) {\r\n        return this.dayHasAppointment(day, appointment, trimTime)\r\n    },\r\n    createResourcesTree: function() {\r\n        return this._resourcesManager.createResourcesTree(this._loadedResources)\r\n    },\r\n    getResourceTreeLeaves: function(tree, appointmentResources) {\r\n        return this._resourcesManager.getResourceTreeLeaves(tree, appointmentResources)\r\n    },\r\n    createReducedResourcesTree: function() {\r\n        var tree = this._resourcesManager.createResourcesTree(this._loadedResources);\r\n        return this._resourcesManager.reduceResourcesTree(tree, this.getFilteredItems())\r\n    },\r\n    groupAppointmentsByResources: function(appointments) {\r\n        var result = {\r\n            0: appointments\r\n        };\r\n        var groups = this._getCurrentViewOption(\"groups\");\r\n        if (groups && groups.length && this._resourcesManager.getResourcesData().length) {\r\n            result = this._resourcesManager.groupAppointmentsByResources(appointments, this._loadedResources)\r\n        }\r\n        var totalResourceCount = 0;\r\n        (0, _iterator.each)(this._loadedResources, function(i, resource) {\r\n            if (!i) {\r\n                totalResourceCount = resource.items.length\r\n            } else {\r\n                totalResourceCount *= resource.items.length\r\n            }\r\n        });\r\n        for (var j = 0; j < totalResourceCount; j++) {\r\n            var index = j.toString();\r\n            if (result[index]) {\r\n                continue\r\n            }\r\n            result[index] = []\r\n        }\r\n        return result\r\n    },\r\n    getAgendaRows: function(options) {\r\n        var renderingStrategy = this._layoutManager.getRenderingStrategyInstance();\r\n        var calculateRows = renderingStrategy.calculateRows.bind(renderingStrategy);\r\n        var d = new _deferred.Deferred;\r\n\r\n        function rowsCalculated(appointments) {\r\n            var result = calculateRows(appointments, options.agendaDuration, options.currentDate);\r\n            this._dataSourceLoadedCallback.remove(rowsCalculated);\r\n            d.resolve(result)\r\n        }\r\n        this._dataSourceLoadedCallback.add(rowsCalculated);\r\n        return d.promise()\r\n    },\r\n    getAgendaVerticalStepHeight: function() {\r\n        return this.getWorkSpace().getAgendaVerticalStepHeight()\r\n    },\r\n    getAgendaDuration: function() {\r\n        return this._getCurrentViewOption(\"agendaDuration\")\r\n    },\r\n    getStartViewDate: function() {\r\n        return this.getStartViewDate()\r\n    },\r\n    getEndViewDate: function() {\r\n        return this.getEndViewDate()\r\n    },\r\n    getMaxAppointmentsPerCell: function() {\r\n        return this.getMaxAppointmentsPerCell()\r\n    },\r\n    forceMaxAppointmentPerCell: function() {\r\n        return this.forceMaxAppointmentPerCell()\r\n    },\r\n    agendaIsReady: function(rows, innerRowOffset, outerRowOffset) {\r\n        var $appts = this.getAppointmentsInstance()._itemElements();\r\n        var total = 0;\r\n        $appts.css(\"marginBottom\", innerRowOffset);\r\n        var applyOffset = function(_, count) {\r\n            var index = count + total - 1;\r\n            $appts.eq(index).css(\"marginBottom\", outerRowOffset);\r\n            total += count\r\n        };\r\n        for (var i = 0; i < rows.length; i++) {\r\n            (0, _iterator.each)(rows[i], applyOffset)\r\n        }\r\n    },\r\n    getTimezone: function() {\r\n        return this._getTimezoneOffsetByOption()\r\n    },\r\n    getClientTimezoneOffset: function(date) {\r\n        date = date || new Date;\r\n        return _uiScheduler2.default.getClientTimezoneOffset(date)\r\n    },\r\n    convertDateByTimezone: function(date, appointmentTimezone) {\r\n        date = new Date(date);\r\n        var tzOffsets = this._subscribes.getComplexOffsets(this, date, appointmentTimezone);\r\n        date = this._subscribes.translateDateToAppointmentTimeZone(date, tzOffsets);\r\n        date = this._subscribes.translateDateToCommonTimeZone(date, tzOffsets);\r\n        return date\r\n    },\r\n    convertDateByTimezoneBack: function(date, appointmentTimezone) {\r\n        date = new Date(date);\r\n        var tzOffsets = this._subscribes.getComplexOffsets(this, date, appointmentTimezone);\r\n        date = this._subscribes.translateDateToAppointmentTimeZone(date, tzOffsets, true);\r\n        date = this._subscribes.translateDateToCommonTimeZone(date, tzOffsets, true);\r\n        return date\r\n    },\r\n    translateDateToAppointmentTimeZone: function(date, offsets, back) {\r\n        var operation = back ? -1 : 1;\r\n        var dateInUTC = date.getTime() - operation * offsets.client * toMs(\"hour\");\r\n        return new Date(dateInUTC + operation * offsets.appointment * toMs(\"hour\"))\r\n    },\r\n    translateDateToCommonTimeZone: function(date, offsets, back) {\r\n        var operation = back ? -1 : 1;\r\n        if (\"number\" === typeof offsets.common) {\r\n            var offset = offsets.common - offsets.appointment;\r\n            var hoursOffset = (offset < 0 ? -1 : 1) * Math.floor(Math.abs(offset));\r\n            var minutesOffset = offset % 1;\r\n            date.setHours(date.getHours() + operation * hoursOffset);\r\n            date.setMinutes(date.getMinutes() + operation * minutesOffset * MINUTES_IN_HOUR)\r\n        }\r\n        return date\r\n    },\r\n    getComplexOffsets: function(scheduler, date, appointmentTimezone) {\r\n        var clientTimezoneOffset = -this.getClientTimezoneOffset(date) / toMs(\"hour\");\r\n        var commonTimezoneOffset = scheduler._getTimezoneOffsetByOption(date);\r\n        var appointmentTimezoneOffset = scheduler._calculateTimezoneByValue(appointmentTimezone, date);\r\n        if (\"number\" !== typeof appointmentTimezoneOffset) {\r\n            appointmentTimezoneOffset = clientTimezoneOffset\r\n        }\r\n        return {\r\n            client: clientTimezoneOffset,\r\n            common: commonTimezoneOffset,\r\n            appointment: appointmentTimezoneOffset\r\n        }\r\n    },\r\n    getDaylightOffset: function(startDate, endDate) {\r\n        return startDate.getTimezoneOffset() - endDate.getTimezoneOffset()\r\n    },\r\n    getTimezonesDisplayName: function() {\r\n        return _uiScheduler2.default.getTimezonesDisplayName()\r\n    },\r\n    getTimezoneDisplayNameById: function(id) {\r\n        return _uiScheduler2.default.getTimezoneDisplayNameById(id)\r\n    },\r\n    getSimilarTimezones: function(id) {\r\n        return _uiScheduler2.default.getSimilarTimezones(id)\r\n    },\r\n    getTimezonesIdsByDisplayName: function(displayName) {\r\n        return _uiScheduler2.default.getTimezonesIdsByDisplayName(displayName)\r\n    },\r\n    getTargetedAppointmentData: function(appointmentData, appointmentElement, skipTimezoneConvert) {\r\n        var $appointmentElement = (0, _renderer2.default)(appointmentElement);\r\n        var appointmentIndex = $appointmentElement.data(this._appointments._itemIndexKey());\r\n        var recurringData = this._getSingleAppointmentData(appointmentData, {\r\n            skipDateCalculation: true,\r\n            $appointment: $appointmentElement,\r\n            skipHoursProcessing: true\r\n        });\r\n        var result = {};\r\n        (0, _extend.extend)(true, result, appointmentData, recurringData);\r\n        if (this._isAppointmentRecurrence(appointmentData) && !skipTimezoneConvert) {\r\n            this._convertDatesByTimezoneBack(false, result)\r\n        }\r\n        appointmentElement && this.setTargetedAppointmentResources(result, appointmentElement, appointmentIndex);\r\n        return result\r\n    },\r\n    getAppointmentDurationInMs: function(options) {\r\n        var startDate = options.startDate;\r\n        var endDate = options.endDate;\r\n        var allDay = options.allDay;\r\n        var appointmentDuration = endDate.getTime() - startDate.getTime();\r\n        var dayDuration = toMs(\"day\");\r\n        var visibleDayDuration = this._workSpace.getVisibleDayDuration();\r\n        var result = 0;\r\n        if (allDay) {\r\n            var ceilQuantityOfDays = Math.ceil(appointmentDuration / dayDuration);\r\n            result = ceilQuantityOfDays * visibleDayDuration\r\n        } else {\r\n            var isDifferentDate = !_date2.default.sameDate(startDate, new Date(endDate.getTime() - 1));\r\n            var floorQuantityOfDays = Math.floor(appointmentDuration / dayDuration);\r\n            var tailDuration;\r\n            if (isDifferentDate) {\r\n                var startDateEndHour = new Date(new Date(startDate).setHours(this.option(\"endDayHour\"), 0, 0));\r\n                var hiddenDayDuration = dayDuration - visibleDayDuration - (startDate.getTime() > startDateEndHour.getTime() ? startDate.getTime() - startDateEndHour.getTime() : 0);\r\n                tailDuration = appointmentDuration - (floorQuantityOfDays ? floorQuantityOfDays * dayDuration : hiddenDayDuration);\r\n                var startDayTime = this.option(\"startDayHour\") * toMs(\"hour\");\r\n                var endPartDuration = endDate - _date2.default.trimTime(endDate);\r\n                if (endPartDuration < startDayTime) {\r\n                    if (floorQuantityOfDays) {\r\n                        tailDuration -= hiddenDayDuration\r\n                    }\r\n                    tailDuration += startDayTime - endPartDuration\r\n                }\r\n            } else {\r\n                tailDuration = appointmentDuration % dayDuration\r\n            }\r\n            if (tailDuration > visibleDayDuration) {\r\n                tailDuration = visibleDayDuration\r\n            }\r\n            result = floorQuantityOfDays * visibleDayDuration + tailDuration || toMs(\"minute\")\r\n        }\r\n        return result\r\n    },\r\n    fixWrongEndDate: function(appointment, startDate, endDate) {\r\n        return this._appointmentModel.fixWrongEndDate(appointment, startDate, endDate)\r\n    },\r\n    getEndDayHour: function() {\r\n        return this._workSpace.option(\"endDayHour\") || this.option(\"endDayHour\")\r\n    },\r\n    getStartDayHour: function() {\r\n        return this._workSpace.option(\"startDayHour\") || this.option(\"startDayHour\")\r\n    },\r\n    isAdaptive: function() {\r\n        return this.option(\"adaptivityEnabled\")\r\n    },\r\n    moveBack: function() {\r\n        var dragBehavior = this.getWorkSpace().dragBehavior;\r\n        dragBehavior && dragBehavior.moveBack()\r\n    }\r\n};\r\nmodule.exports = subscribes;\r\n"]},"metadata":{},"sourceType":"script"}
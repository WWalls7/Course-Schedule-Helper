{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Swizzle\\\\Desktop\\\\SE Project\\\\Application\\\\csh\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(firebase, fbConfig), reactReduxFirebase(fbConfig, {\n  attachAuthIsReady: true\n})));\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\nstore.fireAuthIsReady.then(() => {\n  ReactDOM.render(React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), document.getElementById(\"root\"));\n  serviceWorker.unregister();\n});","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","reduxFirestore","getFirestore","createFirestoreInstance","ReactReduxFirebaseProvider","getFirebase","reactReduxFirebase","fbConfig","firebase","store","withExtraArgument","attachAuthIsReady","rrfProps","config","dispatch","fireAuthIsReady","then","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,EAAsCC,uBAAtC,QAAoE,iBAApE;AACA,SAAQC,0BAAR,EAAoCC,WAApC,EAAiDC,kBAAjD,QAA0E,sBAA1E;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,MAAMC,KAAK,GAAGd,WAAW,CACvBG,WADuB,EAEvBD,OAAO,CACLD,eAAe,CAACI,KAAK,CAACU,iBAAN,CAAwB;AAACL,EAAAA,WAAD;AAAcH,EAAAA;AAAd,CAAxB,CAAD,CADV,EAELD,cAAc,CAACO,QAAD,EAAWD,QAAX,CAFT,EAGLD,kBAAkB,CAACC,QAAD,EAAW;AAACI,EAAAA,iBAAiB,EAAG;AAArB,CAAX,CAHb,CAFgB,CAAzB;AASA,MAAMC,QAAQ,GAAG;AACfJ,EAAAA,QADe;AAEfK,EAAAA,MAAM,EAAEN,QAFO;AAGfO,EAAAA,QAAQ,EAAEL,KAAK,CAACK,QAHD;AAIfX,EAAAA;AAJe,CAAjB;AAOAM,KAAK,CAACM,eAAN,CAAsBC,IAAtB,CAA2B,MAAM;AAC/BxB,EAAAA,QAAQ,CAACyB,MAAT,CACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,0BAAD,oBAAgCG,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAMEM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF;AAQAzB,EAAAA,aAAa,CAAC0B,UAAd;AACD,CAVD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore, getFirestore, createFirestoreInstance} from 'redux-firestore';\nimport {ReactReduxFirebaseProvider, getFirebase, reactReduxFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(firebase, fbConfig),\n    reactReduxFirebase(fbConfig, {attachAuthIsReady : true})\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance \n};\n\nstore.fireAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n  serviceWorker.unregister();\n})\n"]},"metadata":{},"sourceType":"module"}
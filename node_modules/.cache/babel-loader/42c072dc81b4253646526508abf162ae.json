{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.agenda.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../../core/renderer\");\n\nvar domAdapter = require(\"../../../core/dom_adapter\");\n\nvar noop = require(\"../../../core/utils/common\").noop;\n\nvar each = require(\"../../../core/utils/iterator\").each;\n\nvar getPublicElement = require(\"../../../core/utils/dom\").getPublicElement;\n\nvar registerComponent = require(\"../../../core/component_registrator\");\n\nvar SchedulerWorkSpace = require(\"./ui.scheduler.work_space\");\n\nvar extend = require(\"../../../core/utils/extend\").extend;\n\nvar dateLocalization = require(\"../../../localization/date\");\n\nvar tableCreator = require(\"../ui.scheduler.table_creator\");\n\nvar AGENDA_CLASS = \"dx-scheduler-agenda\";\nvar AGENDA_DATE_CLASS = \"dx-scheduler-agenda-date\";\nvar GROUP_TABLE_CLASS = \"dx-scheduler-group-table\";\nvar AGENDA_GROUPED_ATTR = \"dx-group-column-count\";\nvar TIME_PANEL_ROW_CLASS = \"dx-scheduler-time-panel-row\";\nvar TIME_PANEL_CELL_CLASS = \"dx-scheduler-time-panel-cell\";\nvar NODATA_CONTAINER_CLASS = \"dx-scheduler-agenda-nodata\";\nvar LAST_ROW_CLASS = \"dx-scheduler-date-table-last-row\";\nvar INNER_CELL_MARGIN = 5;\nvar OUTER_CELL_MARGIN = 20;\nvar SchedulerAgenda = SchedulerWorkSpace.inherit({\n  _activeStateUnit: void 0,\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      agendaDuration: 7,\n      rowHeight: 60,\n      noDataText: \"\"\n    });\n  },\n  _optionChanged: function (args) {\n    var name = args.name;\n    var value = args.value;\n\n    switch (name) {\n      case \"agendaDuration\":\n        break;\n\n      case \"noDataText\":\n      case \"rowHeight\":\n        this._recalculateAgenda(this._rows);\n\n        break;\n\n      case \"groups\":\n        if (!value || !value.length) {\n          if (this._$groupTable) {\n            this._$groupTable.remove();\n\n            this._$groupTable = null;\n\n            this._detachGroupCountAttr();\n          }\n        } else {\n          if (!this._$groupTable) {\n            this._initGroupTable();\n\n            this._dateTableScrollable.$content().prepend(this._$groupTable);\n          }\n        }\n\n        this.callBase(args);\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _renderFocusState: noop,\n  _renderFocusTarget: noop,\n  _cleanFocusState: noop,\n  supportAllDayRow: function () {\n    return false;\n  },\n  _isVerticalGroupedWorkSpace: function () {\n    return false;\n  },\n  _getElementClass: function () {\n    return AGENDA_CLASS;\n  },\n  _setFirstViewDate: function () {\n    this._firstViewDate = new Date(this.option(\"currentDate\"));\n\n    this._setStartDayHour(this._firstViewDate);\n  },\n  _getRowCount: function () {\n    return this.option(\"agendaDuration\");\n  },\n  _getCellCount: function () {\n    return 1;\n  },\n  _getTimePanelRowCount: function () {\n    return this.option(\"agendaDuration\");\n  },\n  _getDateByIndex: noop,\n  _getFormat: function () {\n    return \"d ddd\";\n  },\n  _renderAllDayPanel: noop,\n  _toggleAllDayVisibility: noop,\n  _initWorkSpaceUnits: function () {\n    this._initGroupTable();\n\n    this._$timePanel = $(\"<table>\").addClass(this._getTimePanelClass());\n    this._$dateTable = $(\"<table>\").addClass(this._getDateTableClass());\n  },\n  _initGroupTable: function () {\n    var groups = this.option(\"groups\");\n\n    if (groups && groups.length) {\n      this._$groupTable = $(\"<table>\").addClass(GROUP_TABLE_CLASS);\n    }\n  },\n  _renderView: function () {\n    this._setFirstViewDate();\n\n    this._rows = [];\n    this.invoke(\"getAgendaRows\", {\n      agendaDuration: this.option(\"agendaDuration\"),\n      currentDate: new Date(this.option(\"currentDate\"))\n    }).done(function (rows) {\n      this._recalculateAgenda(rows);\n    }.bind(this));\n  },\n  _recalculateAgenda: function (rows) {\n    var cellTemplates = [];\n\n    this._cleanView();\n\n    if (this._rowsIsEmpty(rows)) {\n      this._renderNoData();\n\n      return;\n    }\n\n    this._rows = rows;\n\n    if (this._$groupTable) {\n      cellTemplates = this._renderGroupHeader();\n\n      this._setGroupHeaderCellsHeight();\n    }\n\n    this._renderTimePanel();\n\n    this._renderDateTable();\n\n    this.invoke(\"agendaIsReady\", rows, INNER_CELL_MARGIN, OUTER_CELL_MARGIN);\n\n    this._applyCellTemplates(cellTemplates);\n\n    this._dateTableScrollable.update();\n  },\n  _renderNoData: function () {\n    this._$noDataContainer = $(\"<div>\").addClass(NODATA_CONTAINER_CLASS).html(this.option(\"noDataText\"));\n\n    this._dateTableScrollable.$content().append(this._$noDataContainer);\n  },\n  _setTableSizes: noop,\n  _toggleHorizontalScrollClass: noop,\n  _createCrossScrollingConfig: noop,\n  _setGroupHeaderCellsHeight: function () {\n    var $cells = this._getGroupHeaderCells().filter(function (_, element) {\n      return !element.getAttribute(\"rowSpan\");\n    });\n\n    var rows = this._removeEmptyRows(this._rows);\n\n    if (!rows.length) {\n      return;\n    }\n\n    for (var i = 0; i < $cells.length; i++) {\n      var $cellContent = $cells.eq(i).find(\".dx-scheduler-group-header-content\");\n      $cellContent.outerHeight(this._getGroupRowHeight(rows[i]));\n    }\n  },\n  _rowsIsEmpty: function (rows) {\n    var result = true;\n\n    for (var i = 0; i < rows.length; i++) {\n      var groupRow = rows[i];\n\n      for (var j = 0; j < groupRow.length; j++) {\n        if (groupRow[j]) {\n          result = false;\n          break;\n        }\n      }\n    }\n\n    return result;\n  },\n  _detachGroupCountAttr: function () {\n    this.$element().removeAttr(AGENDA_GROUPED_ATTR);\n  },\n  _attachGroupCountAttr: function () {\n    this.$element().attr(AGENDA_GROUPED_ATTR, this.option(\"groups\").length);\n  },\n  _removeEmptyRows: function (rows) {\n    var result = [];\n\n    var isEmpty = function (data) {\n      return !data.some(function (value) {\n        return value > 0;\n      });\n    };\n\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].length && !isEmpty(rows[i])) {\n        result.push(rows[i]);\n      }\n    }\n\n    return result;\n  },\n  _getGroupHeaderContainer: function () {\n    return this._$groupTable;\n  },\n  _makeGroupRows: function () {\n    var tree = this.invoke(\"createReducedResourcesTree\");\n    var cellTemplate = this.option(\"resourceCellTemplate\");\n\n    var getGroupHeaderContentClass = this._getGroupHeaderContentClass();\n\n    var cellTemplates = [];\n    var table = tableCreator.makeGroupedTableFromJSON(tableCreator.VERTICAL, tree, {\n      cellTag: \"th\",\n      groupTableClass: GROUP_TABLE_CLASS,\n      groupRowClass: this._getGroupRowClass(),\n      groupCellClass: this._getGroupHeaderClass(),\n      groupCellCustomContent: function (cell, cellText, index, data) {\n        var container = domAdapter.createElement(\"div\");\n        var contentWrapper = domAdapter.createElement(\"div\");\n        container.className = getGroupHeaderContentClass;\n        contentWrapper.appendChild(cellText);\n        container.appendChild(contentWrapper);\n        container.className = getGroupHeaderContentClass;\n\n        if (cellTemplate && cellTemplate.render) {\n          cellTemplates.push(cellTemplate.render.bind(cellTemplate, {\n            model: {\n              data: data.data,\n              id: data.value,\n              color: data.color,\n              text: cellText.textContent\n            },\n            container: getPublicElement($(container)),\n            index: index\n          }));\n        } else {\n          contentWrapper.appendChild(cellText);\n          container.appendChild(contentWrapper);\n        }\n\n        cell.appendChild(container);\n      },\n      cellTemplate: cellTemplate\n    });\n    return {\n      elements: $(table).find(\".\" + this._getGroupRowClass()),\n      cellTemplates: cellTemplates\n    };\n  },\n  _cleanView: function () {\n    this._$dateTable.empty();\n\n    this._$timePanel.empty();\n\n    if (this._$groupTable) {\n      this._$groupTable.empty();\n    }\n\n    if (this._$noDataContainer) {\n      this._$noDataContainer.empty();\n\n      this._$noDataContainer.remove();\n\n      delete this._$noDataContainer;\n    }\n  },\n  _createWorkSpaceElements: function () {\n    this._createWorkSpaceStaticElements();\n  },\n  _createWorkSpaceStaticElements: function () {\n    if (this._$groupTable) {\n      this._dateTableScrollable.$content().prepend(this._$groupTable);\n    }\n\n    this._dateTableScrollable.$content().append(this._$timePanel, this._$dateTable);\n\n    this.$element().append(this._dateTableScrollable.$element());\n  },\n  _renderDateTable: function () {\n    this._renderTableBody({\n      container: getPublicElement(this._$dateTable),\n      rowClass: this._getDateTableRowClass(),\n      cellClass: this._getDateTableCellClass()\n    });\n  },\n  _attachTablesEvents: noop,\n  _attachEvents: noop,\n  _cleanCellDataCache: noop,\n  needRenderDateTimeIndication: function () {\n    return false;\n  },\n  _prepareCellTemplateOptions: function (text, date, rowIndex, $cell) {\n    var groupsOpt = this.option(\"groups\");\n    var groups = {};\n    var path = groupsOpt.length && this._getPathToLeaf(rowIndex) || [];\n    path.forEach(function (resourceValue, resourceIndex) {\n      var resourceName = groupsOpt[resourceIndex].name;\n      groups[resourceName] = resourceValue;\n    });\n    return {\n      model: {\n        text: text,\n        date: date,\n        groups: groups\n      },\n      container: getPublicElement($cell),\n      index: rowIndex\n    };\n  },\n  _renderTableBody: function (options) {\n    var cellTemplates = [];\n    var cellTemplateOpt = options.cellTemplate;\n    this._$rows = [];\n\n    var fillTableBody = function (rowIndex, rowSize) {\n      if (rowSize) {\n        var date;\n        var cellDateNumber;\n        var cellDayName;\n        var $row = $(\"<tr>\");\n        var $td = $(\"<td>\").height(this._getRowHeight(rowSize));\n\n        if (options.getStartDate) {\n          date = options.getStartDate && options.getStartDate(rowIndex);\n          cellDateNumber = dateLocalization.format(date, \"d\");\n          cellDayName = dateLocalization.format(date, this._formatWeekday);\n        }\n\n        if (cellTemplateOpt && cellTemplateOpt.render) {\n          var templateOptions = this._prepareCellTemplateOptions(cellDateNumber + \" \" + cellDayName, date, i, $td);\n\n          cellTemplates.push(cellTemplateOpt.render.bind(cellTemplateOpt, templateOptions));\n        } else {\n          if (cellDateNumber && cellDayName) {\n            $td.addClass(AGENDA_DATE_CLASS).text(cellDateNumber + \" \" + cellDayName);\n          }\n        }\n\n        if (options.rowClass) {\n          $row.addClass(options.rowClass);\n        }\n\n        if (options.cellClass) {\n          $td.addClass(options.cellClass);\n        }\n\n        $row.append($td);\n\n        this._$rows.push($row);\n      }\n    }.bind(this);\n\n    for (var i = 0; i < this._rows.length; i++) {\n      each(this._rows[i], fillTableBody);\n\n      this._setLastRowClass();\n    }\n\n    $(options.container).append($(\"<tbody>\").append(this._$rows));\n\n    this._applyCellTemplates(cellTemplates);\n  },\n  _setLastRowClass: function () {\n    if (this._rows.length > 1 && this._$rows.length) {\n      var $lastRow = this._$rows[this._$rows.length - 1];\n      $lastRow.addClass(LAST_ROW_CLASS);\n    }\n  },\n  _renderTimePanel: function () {\n    this._renderTableBody({\n      container: getPublicElement(this._$timePanel),\n      rowCount: this._getTimePanelRowCount(),\n      cellCount: 1,\n      rowClass: TIME_PANEL_ROW_CLASS,\n      cellClass: TIME_PANEL_CELL_CLASS,\n      cellTemplate: this.option(\"dateCellTemplate\"),\n      getStartDate: this._getTimePanelStartDate.bind(this)\n    });\n  },\n  _getTimePanelStartDate: function (rowIndex) {\n    var current = new Date(this.option(\"currentDate\"));\n    var cellDate = new Date(current.setDate(current.getDate() + rowIndex));\n    return cellDate;\n  },\n  _getRowHeight: function (rowSize) {\n    var baseHeight = this.option(\"rowHeight\");\n    var innerOffset = (rowSize - 1) * INNER_CELL_MARGIN;\n    return rowSize ? baseHeight * rowSize + innerOffset + OUTER_CELL_MARGIN : 0;\n  },\n  _getGroupRowHeight: function (groupRows) {\n    if (!groupRows) {\n      return;\n    }\n\n    var result = 0;\n\n    for (var i = 0; i < groupRows.length; i++) {\n      result += this._getRowHeight(groupRows[i]);\n    }\n\n    return result;\n  },\n  getAgendaVerticalStepHeight: function () {\n    return this.option(\"rowHeight\");\n  },\n  getEndViewDate: function () {\n    var currentDate = new Date(this.option(\"currentDate\"));\n    var agendaDuration = this.option(\"agendaDuration\");\n    currentDate.setHours(this.option(\"endDayHour\"));\n    var result = currentDate.setDate(currentDate.getDate() + agendaDuration - 1) - 6e4;\n    return new Date(result);\n  },\n  getCoordinatesByDate: function () {\n    return {\n      top: 0,\n      left: 0,\n      max: 0,\n      groupIndex: 0\n    };\n  },\n  getCellDataByCoordinates: function () {\n    return {\n      startDate: null,\n      endDate: null\n    };\n  }\n});\nregisterComponent(\"dxSchedulerAgenda\", SchedulerAgenda);\nmodule.exports = SchedulerAgenda;","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/node_modules/devextreme/ui/scheduler/workspaces/ui.scheduler.agenda.js"],"names":["$","require","domAdapter","noop","each","getPublicElement","registerComponent","SchedulerWorkSpace","extend","dateLocalization","tableCreator","AGENDA_CLASS","AGENDA_DATE_CLASS","GROUP_TABLE_CLASS","AGENDA_GROUPED_ATTR","TIME_PANEL_ROW_CLASS","TIME_PANEL_CELL_CLASS","NODATA_CONTAINER_CLASS","LAST_ROW_CLASS","INNER_CELL_MARGIN","OUTER_CELL_MARGIN","SchedulerAgenda","inherit","_activeStateUnit","_getDefaultOptions","callBase","agendaDuration","rowHeight","noDataText","_optionChanged","args","name","value","_recalculateAgenda","_rows","length","_$groupTable","remove","_detachGroupCountAttr","_initGroupTable","_dateTableScrollable","$content","prepend","_renderFocusState","_renderFocusTarget","_cleanFocusState","supportAllDayRow","_isVerticalGroupedWorkSpace","_getElementClass","_setFirstViewDate","_firstViewDate","Date","option","_setStartDayHour","_getRowCount","_getCellCount","_getTimePanelRowCount","_getDateByIndex","_getFormat","_renderAllDayPanel","_toggleAllDayVisibility","_initWorkSpaceUnits","_$timePanel","addClass","_getTimePanelClass","_$dateTable","_getDateTableClass","groups","_renderView","invoke","currentDate","done","rows","bind","cellTemplates","_cleanView","_rowsIsEmpty","_renderNoData","_renderGroupHeader","_setGroupHeaderCellsHeight","_renderTimePanel","_renderDateTable","_applyCellTemplates","update","_$noDataContainer","html","append","_setTableSizes","_toggleHorizontalScrollClass","_createCrossScrollingConfig","$cells","_getGroupHeaderCells","filter","_","element","getAttribute","_removeEmptyRows","i","$cellContent","eq","find","outerHeight","_getGroupRowHeight","result","groupRow","j","$element","removeAttr","_attachGroupCountAttr","attr","isEmpty","data","some","push","_getGroupHeaderContainer","_makeGroupRows","tree","cellTemplate","getGroupHeaderContentClass","_getGroupHeaderContentClass","table","makeGroupedTableFromJSON","VERTICAL","cellTag","groupTableClass","groupRowClass","_getGroupRowClass","groupCellClass","_getGroupHeaderClass","groupCellCustomContent","cell","cellText","index","container","createElement","contentWrapper","className","appendChild","render","model","id","color","text","textContent","elements","empty","_createWorkSpaceElements","_createWorkSpaceStaticElements","_renderTableBody","rowClass","_getDateTableRowClass","cellClass","_getDateTableCellClass","_attachTablesEvents","_attachEvents","_cleanCellDataCache","needRenderDateTimeIndication","_prepareCellTemplateOptions","date","rowIndex","$cell","groupsOpt","path","_getPathToLeaf","forEach","resourceValue","resourceIndex","resourceName","options","cellTemplateOpt","_$rows","fillTableBody","rowSize","cellDateNumber","cellDayName","$row","$td","height","_getRowHeight","getStartDate","format","_formatWeekday","templateOptions","_setLastRowClass","$lastRow","rowCount","cellCount","_getTimePanelStartDate","current","cellDate","setDate","getDate","baseHeight","innerOffset","groupRows","getAgendaVerticalStepHeight","getEndViewDate","setHours","getCoordinatesByDate","top","left","max","groupIndex","getCellDataByCoordinates","startDate","endDate","module","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,wBAAD,CAAf;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,4BAAD,CAAP,CAAsCE,IAAjD;;AACA,IAAIC,IAAI,GAAGH,OAAO,CAAC,8BAAD,CAAP,CAAwCG,IAAnD;;AACA,IAAIC,gBAAgB,GAAGJ,OAAO,CAAC,yBAAD,CAAP,CAAmCI,gBAA1D;;AACA,IAAIC,iBAAiB,GAAGL,OAAO,CAAC,qCAAD,CAA/B;;AACA,IAAIM,kBAAkB,GAAGN,OAAO,CAAC,2BAAD,CAAhC;;AACA,IAAIO,MAAM,GAAGP,OAAO,CAAC,4BAAD,CAAP,CAAsCO,MAAnD;;AACA,IAAIC,gBAAgB,GAAGR,OAAO,CAAC,4BAAD,CAA9B;;AACA,IAAIS,YAAY,GAAGT,OAAO,CAAC,+BAAD,CAA1B;;AACA,IAAIU,YAAY,GAAG,qBAAnB;AACA,IAAIC,iBAAiB,GAAG,0BAAxB;AACA,IAAIC,iBAAiB,GAAG,0BAAxB;AACA,IAAIC,mBAAmB,GAAG,uBAA1B;AACA,IAAIC,oBAAoB,GAAG,6BAA3B;AACA,IAAIC,qBAAqB,GAAG,8BAA5B;AACA,IAAIC,sBAAsB,GAAG,4BAA7B;AACA,IAAIC,cAAc,GAAG,kCAArB;AACA,IAAIC,iBAAiB,GAAG,CAAxB;AACA,IAAIC,iBAAiB,GAAG,EAAxB;AACA,IAAIC,eAAe,GAAGd,kBAAkB,CAACe,OAAnB,CAA2B;AAC7CC,EAAAA,gBAAgB,EAAE,KAAK,CADsB;AAE7CC,EAAAA,kBAAkB,EAAE,YAAW;AAC3B,WAAOhB,MAAM,CAAC,KAAKiB,QAAL,EAAD,EAAkB;AAC3BC,MAAAA,cAAc,EAAE,CADW;AAE3BC,MAAAA,SAAS,EAAE,EAFgB;AAG3BC,MAAAA,UAAU,EAAE;AAHe,KAAlB,CAAb;AAKH,GAR4C;AAS7CC,EAAAA,cAAc,EAAE,UAASC,IAAT,EAAe;AAC3B,QAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AACA,QAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;;AACA,YAAQD,IAAR;AACI,WAAK,gBAAL;AACI;;AACJ,WAAK,YAAL;AACA,WAAK,WAAL;AACI,aAAKE,kBAAL,CAAwB,KAAKC,KAA7B;;AACA;;AACJ,WAAK,QAAL;AACI,YAAI,CAACF,KAAD,IAAU,CAACA,KAAK,CAACG,MAArB,EAA6B;AACzB,cAAI,KAAKC,YAAT,EAAuB;AACnB,iBAAKA,YAAL,CAAkBC,MAAlB;;AACA,iBAAKD,YAAL,GAAoB,IAApB;;AACA,iBAAKE,qBAAL;AACH;AACJ,SAND,MAMO;AACH,cAAI,CAAC,KAAKF,YAAV,EAAwB;AACpB,iBAAKG,eAAL;;AACA,iBAAKC,oBAAL,CAA0BC,QAA1B,GAAqCC,OAArC,CAA6C,KAAKN,YAAlD;AACH;AACJ;;AACD,aAAKX,QAAL,CAAcK,IAAd;AACA;;AACJ;AACI,aAAKL,QAAL,CAAcK,IAAd;AAvBR;AAyBH,GArC4C;AAsC7Ca,EAAAA,iBAAiB,EAAExC,IAtC0B;AAuC7CyC,EAAAA,kBAAkB,EAAEzC,IAvCyB;AAwC7C0C,EAAAA,gBAAgB,EAAE1C,IAxC2B;AAyC7C2C,EAAAA,gBAAgB,EAAE,YAAW;AACzB,WAAO,KAAP;AACH,GA3C4C;AA4C7CC,EAAAA,2BAA2B,EAAE,YAAW;AACpC,WAAO,KAAP;AACH,GA9C4C;AA+C7CC,EAAAA,gBAAgB,EAAE,YAAW;AACzB,WAAOrC,YAAP;AACH,GAjD4C;AAkD7CsC,EAAAA,iBAAiB,EAAE,YAAW;AAC1B,SAAKC,cAAL,GAAsB,IAAIC,IAAJ,CAAS,KAAKC,MAAL,CAAY,aAAZ,CAAT,CAAtB;;AACA,SAAKC,gBAAL,CAAsB,KAAKH,cAA3B;AACH,GArD4C;AAsD7CI,EAAAA,YAAY,EAAE,YAAW;AACrB,WAAO,KAAKF,MAAL,CAAY,gBAAZ,CAAP;AACH,GAxD4C;AAyD7CG,EAAAA,aAAa,EAAE,YAAW;AACtB,WAAO,CAAP;AACH,GA3D4C;AA4D7CC,EAAAA,qBAAqB,EAAE,YAAW;AAC9B,WAAO,KAAKJ,MAAL,CAAY,gBAAZ,CAAP;AACH,GA9D4C;AA+D7CK,EAAAA,eAAe,EAAEtD,IA/D4B;AAgE7CuD,EAAAA,UAAU,EAAE,YAAW;AACnB,WAAO,OAAP;AACH,GAlE4C;AAmE7CC,EAAAA,kBAAkB,EAAExD,IAnEyB;AAoE7CyD,EAAAA,uBAAuB,EAAEzD,IApEoB;AAqE7C0D,EAAAA,mBAAmB,EAAE,YAAW;AAC5B,SAAKtB,eAAL;;AACA,SAAKuB,WAAL,GAAmB9D,CAAC,CAAC,SAAD,CAAD,CAAa+D,QAAb,CAAsB,KAAKC,kBAAL,EAAtB,CAAnB;AACA,SAAKC,WAAL,GAAmBjE,CAAC,CAAC,SAAD,CAAD,CAAa+D,QAAb,CAAsB,KAAKG,kBAAL,EAAtB,CAAnB;AACH,GAzE4C;AA0E7C3B,EAAAA,eAAe,EAAE,YAAW;AACxB,QAAI4B,MAAM,GAAG,KAAKf,MAAL,CAAY,QAAZ,CAAb;;AACA,QAAIe,MAAM,IAAIA,MAAM,CAAChC,MAArB,EAA6B;AACzB,WAAKC,YAAL,GAAoBpC,CAAC,CAAC,SAAD,CAAD,CAAa+D,QAAb,CAAsBlD,iBAAtB,CAApB;AACH;AACJ,GA/E4C;AAgF7CuD,EAAAA,WAAW,EAAE,YAAW;AACpB,SAAKnB,iBAAL;;AACA,SAAKf,KAAL,GAAa,EAAb;AACA,SAAKmC,MAAL,CAAY,eAAZ,EAA6B;AACzB3C,MAAAA,cAAc,EAAE,KAAK0B,MAAL,CAAY,gBAAZ,CADS;AAEzBkB,MAAAA,WAAW,EAAE,IAAInB,IAAJ,CAAS,KAAKC,MAAL,CAAY,aAAZ,CAAT;AAFY,KAA7B,EAGGmB,IAHH,CAGQ,UAASC,IAAT,EAAe;AACnB,WAAKvC,kBAAL,CAAwBuC,IAAxB;AACH,KAFO,CAENC,IAFM,CAED,IAFC,CAHR;AAMH,GAzF4C;AA0F7CxC,EAAAA,kBAAkB,EAAE,UAASuC,IAAT,EAAe;AAC/B,QAAIE,aAAa,GAAG,EAApB;;AACA,SAAKC,UAAL;;AACA,QAAI,KAAKC,YAAL,CAAkBJ,IAAlB,CAAJ,EAA6B;AACzB,WAAKK,aAAL;;AACA;AACH;;AACD,SAAK3C,KAAL,GAAasC,IAAb;;AACA,QAAI,KAAKpC,YAAT,EAAuB;AACnBsC,MAAAA,aAAa,GAAG,KAAKI,kBAAL,EAAhB;;AACA,WAAKC,0BAAL;AACH;;AACD,SAAKC,gBAAL;;AACA,SAAKC,gBAAL;;AACA,SAAKZ,MAAL,CAAY,eAAZ,EAA6BG,IAA7B,EAAmCrD,iBAAnC,EAAsDC,iBAAtD;;AACA,SAAK8D,mBAAL,CAAyBR,aAAzB;;AACA,SAAKlC,oBAAL,CAA0B2C,MAA1B;AACH,GA3G4C;AA4G7CN,EAAAA,aAAa,EAAE,YAAW;AACtB,SAAKO,iBAAL,GAAyBpF,CAAC,CAAC,OAAD,CAAD,CAAW+D,QAAX,CAAoB9C,sBAApB,EAA4CoE,IAA5C,CAAiD,KAAKjC,MAAL,CAAY,YAAZ,CAAjD,CAAzB;;AACA,SAAKZ,oBAAL,CAA0BC,QAA1B,GAAqC6C,MAArC,CAA4C,KAAKF,iBAAjD;AACH,GA/G4C;AAgH7CG,EAAAA,cAAc,EAAEpF,IAhH6B;AAiH7CqF,EAAAA,4BAA4B,EAAErF,IAjHe;AAkH7CsF,EAAAA,2BAA2B,EAAEtF,IAlHgB;AAmH7C4E,EAAAA,0BAA0B,EAAE,YAAW;AACnC,QAAIW,MAAM,GAAG,KAAKC,oBAAL,GAA4BC,MAA5B,CAAmC,UAASC,CAAT,EAAYC,OAAZ,EAAqB;AACjE,aAAO,CAACA,OAAO,CAACC,YAAR,CAAqB,SAArB,CAAR;AACH,KAFY,CAAb;;AAGA,QAAIvB,IAAI,GAAG,KAAKwB,gBAAL,CAAsB,KAAK9D,KAA3B,CAAX;;AACA,QAAI,CAACsC,IAAI,CAACrC,MAAV,EAAkB;AACd;AACH;;AACD,SAAK,IAAI8D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,MAAM,CAACvD,MAA3B,EAAmC8D,CAAC,EAApC,EAAwC;AACpC,UAAIC,YAAY,GAAGR,MAAM,CAACS,EAAP,CAAUF,CAAV,EAAaG,IAAb,CAAkB,oCAAlB,CAAnB;AACAF,MAAAA,YAAY,CAACG,WAAb,CAAyB,KAAKC,kBAAL,CAAwB9B,IAAI,CAACyB,CAAD,CAA5B,CAAzB;AACH;AACJ,GA/H4C;AAgI7CrB,EAAAA,YAAY,EAAE,UAASJ,IAAT,EAAe;AACzB,QAAI+B,MAAM,GAAG,IAAb;;AACA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,IAAI,CAACrC,MAAzB,EAAiC8D,CAAC,EAAlC,EAAsC;AAClC,UAAIO,QAAQ,GAAGhC,IAAI,CAACyB,CAAD,CAAnB;;AACA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACrE,MAA7B,EAAqCsE,CAAC,EAAtC,EAA0C;AACtC,YAAID,QAAQ,CAACC,CAAD,CAAZ,EAAiB;AACbF,UAAAA,MAAM,GAAG,KAAT;AACA;AACH;AACJ;AACJ;;AACD,WAAOA,MAAP;AACH,GA5I4C;AA6I7CjE,EAAAA,qBAAqB,EAAE,YAAW;AAC9B,SAAKoE,QAAL,GAAgBC,UAAhB,CAA2B7F,mBAA3B;AACH,GA/I4C;AAgJ7C8F,EAAAA,qBAAqB,EAAE,YAAW;AAC9B,SAAKF,QAAL,GAAgBG,IAAhB,CAAqB/F,mBAArB,EAA0C,KAAKsC,MAAL,CAAY,QAAZ,EAAsBjB,MAAhE;AACH,GAlJ4C;AAmJ7C6D,EAAAA,gBAAgB,EAAE,UAASxB,IAAT,EAAe;AAC7B,QAAI+B,MAAM,GAAG,EAAb;;AACA,QAAIO,OAAO,GAAG,UAASC,IAAT,EAAe;AACzB,aAAO,CAACA,IAAI,CAACC,IAAL,CAAU,UAAShF,KAAT,EAAgB;AAC9B,eAAOA,KAAK,GAAG,CAAf;AACH,OAFO,CAAR;AAGH,KAJD;;AAKA,SAAK,IAAIiE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,IAAI,CAACrC,MAAzB,EAAiC8D,CAAC,EAAlC,EAAsC;AAClC,UAAIzB,IAAI,CAACyB,CAAD,CAAJ,CAAQ9D,MAAR,IAAkB,CAAC2E,OAAO,CAACtC,IAAI,CAACyB,CAAD,CAAL,CAA9B,EAAyC;AACrCM,QAAAA,MAAM,CAACU,IAAP,CAAYzC,IAAI,CAACyB,CAAD,CAAhB;AACH;AACJ;;AACD,WAAOM,MAAP;AACH,GAhK4C;AAiK7CW,EAAAA,wBAAwB,EAAE,YAAW;AACjC,WAAO,KAAK9E,YAAZ;AACH,GAnK4C;AAoK7C+E,EAAAA,cAAc,EAAE,YAAW;AACvB,QAAIC,IAAI,GAAG,KAAK/C,MAAL,CAAY,4BAAZ,CAAX;AACA,QAAIgD,YAAY,GAAG,KAAKjE,MAAL,CAAY,sBAAZ,CAAnB;;AACA,QAAIkE,0BAA0B,GAAG,KAAKC,2BAAL,EAAjC;;AACA,QAAI7C,aAAa,GAAG,EAApB;AACA,QAAI8C,KAAK,GAAG9G,YAAY,CAAC+G,wBAAb,CAAsC/G,YAAY,CAACgH,QAAnD,EAA6DN,IAA7D,EAAmE;AAC3EO,MAAAA,OAAO,EAAE,IADkE;AAE3EC,MAAAA,eAAe,EAAE/G,iBAF0D;AAG3EgH,MAAAA,aAAa,EAAE,KAAKC,iBAAL,EAH4D;AAI3EC,MAAAA,cAAc,EAAE,KAAKC,oBAAL,EAJ2D;AAK3EC,MAAAA,sBAAsB,EAAE,UAASC,IAAT,EAAeC,QAAf,EAAyBC,KAAzB,EAAgCrB,IAAhC,EAAsC;AAC1D,YAAIsB,SAAS,GAAGnI,UAAU,CAACoI,aAAX,CAAyB,KAAzB,CAAhB;AACA,YAAIC,cAAc,GAAGrI,UAAU,CAACoI,aAAX,CAAyB,KAAzB,CAArB;AACAD,QAAAA,SAAS,CAACG,SAAV,GAAsBlB,0BAAtB;AACAiB,QAAAA,cAAc,CAACE,WAAf,CAA2BN,QAA3B;AACAE,QAAAA,SAAS,CAACI,WAAV,CAAsBF,cAAtB;AACAF,QAAAA,SAAS,CAACG,SAAV,GAAsBlB,0BAAtB;;AACA,YAAID,YAAY,IAAIA,YAAY,CAACqB,MAAjC,EAAyC;AACrChE,UAAAA,aAAa,CAACuC,IAAd,CAAmBI,YAAY,CAACqB,MAAb,CAAoBjE,IAApB,CAAyB4C,YAAzB,EAAuC;AACtDsB,YAAAA,KAAK,EAAE;AACH5B,cAAAA,IAAI,EAAEA,IAAI,CAACA,IADR;AAEH6B,cAAAA,EAAE,EAAE7B,IAAI,CAAC/E,KAFN;AAGH6G,cAAAA,KAAK,EAAE9B,IAAI,CAAC8B,KAHT;AAIHC,cAAAA,IAAI,EAAEX,QAAQ,CAACY;AAJZ,aAD+C;AAOtDV,YAAAA,SAAS,EAAEhI,gBAAgB,CAACL,CAAC,CAACqI,SAAD,CAAF,CAP2B;AAQtDD,YAAAA,KAAK,EAAEA;AAR+C,WAAvC,CAAnB;AAUH,SAXD,MAWO;AACHG,UAAAA,cAAc,CAACE,WAAf,CAA2BN,QAA3B;AACAE,UAAAA,SAAS,CAACI,WAAV,CAAsBF,cAAtB;AACH;;AACDL,QAAAA,IAAI,CAACO,WAAL,CAAiBJ,SAAjB;AACH,OA5B0E;AA6B3EhB,MAAAA,YAAY,EAAEA;AA7B6D,KAAnE,CAAZ;AA+BA,WAAO;AACH2B,MAAAA,QAAQ,EAAEhJ,CAAC,CAACwH,KAAD,CAAD,CAASpB,IAAT,CAAc,MAAM,KAAK0B,iBAAL,EAApB,CADP;AAEHpD,MAAAA,aAAa,EAAEA;AAFZ,KAAP;AAIH,GA5M4C;AA6M7CC,EAAAA,UAAU,EAAE,YAAW;AACnB,SAAKV,WAAL,CAAiBgF,KAAjB;;AACA,SAAKnF,WAAL,CAAiBmF,KAAjB;;AACA,QAAI,KAAK7G,YAAT,EAAuB;AACnB,WAAKA,YAAL,CAAkB6G,KAAlB;AACH;;AACD,QAAI,KAAK7D,iBAAT,EAA4B;AACxB,WAAKA,iBAAL,CAAuB6D,KAAvB;;AACA,WAAK7D,iBAAL,CAAuB/C,MAAvB;;AACA,aAAO,KAAK+C,iBAAZ;AACH;AACJ,GAxN4C;AAyN7C8D,EAAAA,wBAAwB,EAAE,YAAW;AACjC,SAAKC,8BAAL;AACH,GA3N4C;AA4N7CA,EAAAA,8BAA8B,EAAE,YAAW;AACvC,QAAI,KAAK/G,YAAT,EAAuB;AACnB,WAAKI,oBAAL,CAA0BC,QAA1B,GAAqCC,OAArC,CAA6C,KAAKN,YAAlD;AACH;;AACD,SAAKI,oBAAL,CAA0BC,QAA1B,GAAqC6C,MAArC,CAA4C,KAAKxB,WAAjD,EAA8D,KAAKG,WAAnE;;AACA,SAAKyC,QAAL,GAAgBpB,MAAhB,CAAuB,KAAK9C,oBAAL,CAA0BkE,QAA1B,EAAvB;AACH,GAlO4C;AAmO7CzB,EAAAA,gBAAgB,EAAE,YAAW;AACzB,SAAKmE,gBAAL,CAAsB;AAClBf,MAAAA,SAAS,EAAEhI,gBAAgB,CAAC,KAAK4D,WAAN,CADT;AAElBoF,MAAAA,QAAQ,EAAE,KAAKC,qBAAL,EAFQ;AAGlBC,MAAAA,SAAS,EAAE,KAAKC,sBAAL;AAHO,KAAtB;AAKH,GAzO4C;AA0O7CC,EAAAA,mBAAmB,EAAEtJ,IA1OwB;AA2O7CuJ,EAAAA,aAAa,EAAEvJ,IA3O8B;AA4O7CwJ,EAAAA,mBAAmB,EAAExJ,IA5OwB;AA6O7CyJ,EAAAA,4BAA4B,EAAE,YAAW;AACrC,WAAO,KAAP;AACH,GA/O4C;AAgP7CC,EAAAA,2BAA2B,EAAE,UAASf,IAAT,EAAegB,IAAf,EAAqBC,QAArB,EAA+BC,KAA/B,EAAsC;AAC/D,QAAIC,SAAS,GAAG,KAAK7G,MAAL,CAAY,QAAZ,CAAhB;AACA,QAAIe,MAAM,GAAG,EAAb;AACA,QAAI+F,IAAI,GAAGD,SAAS,CAAC9H,MAAV,IAAoB,KAAKgI,cAAL,CAAoBJ,QAApB,CAApB,IAAqD,EAAhE;AACAG,IAAAA,IAAI,CAACE,OAAL,CAAa,UAASC,aAAT,EAAwBC,aAAxB,EAAuC;AAChD,UAAIC,YAAY,GAAGN,SAAS,CAACK,aAAD,CAAT,CAAyBvI,IAA5C;AACAoC,MAAAA,MAAM,CAACoG,YAAD,CAAN,GAAuBF,aAAvB;AACH,KAHD;AAIA,WAAO;AACH1B,MAAAA,KAAK,EAAE;AACHG,QAAAA,IAAI,EAAEA,IADH;AAEHgB,QAAAA,IAAI,EAAEA,IAFH;AAGH3F,QAAAA,MAAM,EAAEA;AAHL,OADJ;AAMHkE,MAAAA,SAAS,EAAEhI,gBAAgB,CAAC2J,KAAD,CANxB;AAOH5B,MAAAA,KAAK,EAAE2B;AAPJ,KAAP;AASH,GAjQ4C;AAkQ7CX,EAAAA,gBAAgB,EAAE,UAASoB,OAAT,EAAkB;AAChC,QAAI9F,aAAa,GAAG,EAApB;AACA,QAAI+F,eAAe,GAAGD,OAAO,CAACnD,YAA9B;AACA,SAAKqD,MAAL,GAAc,EAAd;;AACA,QAAIC,aAAa,GAAG,UAASZ,QAAT,EAAmBa,OAAnB,EAA4B;AAC5C,UAAIA,OAAJ,EAAa;AACT,YAAId,IAAJ;AACA,YAAIe,cAAJ;AACA,YAAIC,WAAJ;AACA,YAAIC,IAAI,GAAG/K,CAAC,CAAC,MAAD,CAAZ;AACA,YAAIgL,GAAG,GAAGhL,CAAC,CAAC,MAAD,CAAD,CAAUiL,MAAV,CAAiB,KAAKC,aAAL,CAAmBN,OAAnB,CAAjB,CAAV;;AACA,YAAIJ,OAAO,CAACW,YAAZ,EAA0B;AACtBrB,UAAAA,IAAI,GAAGU,OAAO,CAACW,YAAR,IAAwBX,OAAO,CAACW,YAAR,CAAqBpB,QAArB,CAA/B;AACAc,UAAAA,cAAc,GAAGpK,gBAAgB,CAAC2K,MAAjB,CAAwBtB,IAAxB,EAA8B,GAA9B,CAAjB;AACAgB,UAAAA,WAAW,GAAGrK,gBAAgB,CAAC2K,MAAjB,CAAwBtB,IAAxB,EAA8B,KAAKuB,cAAnC,CAAd;AACH;;AACD,YAAIZ,eAAe,IAAIA,eAAe,CAAC/B,MAAvC,EAA+C;AAC3C,cAAI4C,eAAe,GAAG,KAAKzB,2BAAL,CAAiCgB,cAAc,GAAG,GAAjB,GAAuBC,WAAxD,EAAqEhB,IAArE,EAA2E7D,CAA3E,EAA8E+E,GAA9E,CAAtB;;AACAtG,UAAAA,aAAa,CAACuC,IAAd,CAAmBwD,eAAe,CAAC/B,MAAhB,CAAuBjE,IAAvB,CAA4BgG,eAA5B,EAA6Ca,eAA7C,CAAnB;AACH,SAHD,MAGO;AACH,cAAIT,cAAc,IAAIC,WAAtB,EAAmC;AAC/BE,YAAAA,GAAG,CAACjH,QAAJ,CAAanD,iBAAb,EAAgCkI,IAAhC,CAAqC+B,cAAc,GAAG,GAAjB,GAAuBC,WAA5D;AACH;AACJ;;AACD,YAAIN,OAAO,CAACnB,QAAZ,EAAsB;AAClB0B,UAAAA,IAAI,CAAChH,QAAL,CAAcyG,OAAO,CAACnB,QAAtB;AACH;;AACD,YAAImB,OAAO,CAACjB,SAAZ,EAAuB;AACnByB,UAAAA,GAAG,CAACjH,QAAJ,CAAayG,OAAO,CAACjB,SAArB;AACH;;AACDwB,QAAAA,IAAI,CAACzF,MAAL,CAAY0F,GAAZ;;AACA,aAAKN,MAAL,CAAYzD,IAAZ,CAAiB8D,IAAjB;AACH;AACJ,KA7BmB,CA6BlBtG,IA7BkB,CA6Bb,IA7Ba,CAApB;;AA8BA,SAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK/D,KAAL,CAAWC,MAA/B,EAAuC8D,CAAC,EAAxC,EAA4C;AACxC7F,MAAAA,IAAI,CAAC,KAAK8B,KAAL,CAAW+D,CAAX,CAAD,EAAgB0E,aAAhB,CAAJ;;AACA,WAAKY,gBAAL;AACH;;AACDvL,IAAAA,CAAC,CAACwK,OAAO,CAACnC,SAAT,CAAD,CAAqB/C,MAArB,CAA4BtF,CAAC,CAAC,SAAD,CAAD,CAAasF,MAAb,CAAoB,KAAKoF,MAAzB,CAA5B;;AACA,SAAKxF,mBAAL,CAAyBR,aAAzB;AACH,GA1S4C;AA2S7C6G,EAAAA,gBAAgB,EAAE,YAAW;AACzB,QAAI,KAAKrJ,KAAL,CAAWC,MAAX,GAAoB,CAApB,IAAyB,KAAKuI,MAAL,CAAYvI,MAAzC,EAAiD;AAC7C,UAAIqJ,QAAQ,GAAG,KAAKd,MAAL,CAAY,KAAKA,MAAL,CAAYvI,MAAZ,GAAqB,CAAjC,CAAf;AACAqJ,MAAAA,QAAQ,CAACzH,QAAT,CAAkB7C,cAAlB;AACH;AACJ,GAhT4C;AAiT7C8D,EAAAA,gBAAgB,EAAE,YAAW;AACzB,SAAKoE,gBAAL,CAAsB;AAClBf,MAAAA,SAAS,EAAEhI,gBAAgB,CAAC,KAAKyD,WAAN,CADT;AAElB2H,MAAAA,QAAQ,EAAE,KAAKjI,qBAAL,EAFQ;AAGlBkI,MAAAA,SAAS,EAAE,CAHO;AAIlBrC,MAAAA,QAAQ,EAAEtI,oBAJQ;AAKlBwI,MAAAA,SAAS,EAAEvI,qBALO;AAMlBqG,MAAAA,YAAY,EAAE,KAAKjE,MAAL,CAAY,kBAAZ,CANI;AAOlB+H,MAAAA,YAAY,EAAE,KAAKQ,sBAAL,CAA4BlH,IAA5B,CAAiC,IAAjC;AAPI,KAAtB;AASH,GA3T4C;AA4T7CkH,EAAAA,sBAAsB,EAAE,UAAS5B,QAAT,EAAmB;AACvC,QAAI6B,OAAO,GAAG,IAAIzI,IAAJ,CAAS,KAAKC,MAAL,CAAY,aAAZ,CAAT,CAAd;AACA,QAAIyI,QAAQ,GAAG,IAAI1I,IAAJ,CAASyI,OAAO,CAACE,OAAR,CAAgBF,OAAO,CAACG,OAAR,KAAoBhC,QAApC,CAAT,CAAf;AACA,WAAO8B,QAAP;AACH,GAhU4C;AAiU7CX,EAAAA,aAAa,EAAE,UAASN,OAAT,EAAkB;AAC7B,QAAIoB,UAAU,GAAG,KAAK5I,MAAL,CAAY,WAAZ,CAAjB;AACA,QAAI6I,WAAW,GAAG,CAACrB,OAAO,GAAG,CAAX,IAAgBzJ,iBAAlC;AACA,WAAOyJ,OAAO,GAAGoB,UAAU,GAAGpB,OAAb,GAAuBqB,WAAvB,GAAqC7K,iBAAxC,GAA4D,CAA1E;AACH,GArU4C;AAsU7CkF,EAAAA,kBAAkB,EAAE,UAAS4F,SAAT,EAAoB;AACpC,QAAI,CAACA,SAAL,EAAgB;AACZ;AACH;;AACD,QAAI3F,MAAM,GAAG,CAAb;;AACA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiG,SAAS,CAAC/J,MAA9B,EAAsC8D,CAAC,EAAvC,EAA2C;AACvCM,MAAAA,MAAM,IAAI,KAAK2E,aAAL,CAAmBgB,SAAS,CAACjG,CAAD,CAA5B,CAAV;AACH;;AACD,WAAOM,MAAP;AACH,GA/U4C;AAgV7C4F,EAAAA,2BAA2B,EAAE,YAAW;AACpC,WAAO,KAAK/I,MAAL,CAAY,WAAZ,CAAP;AACH,GAlV4C;AAmV7CgJ,EAAAA,cAAc,EAAE,YAAW;AACvB,QAAI9H,WAAW,GAAG,IAAInB,IAAJ,CAAS,KAAKC,MAAL,CAAY,aAAZ,CAAT,CAAlB;AACA,QAAI1B,cAAc,GAAG,KAAK0B,MAAL,CAAY,gBAAZ,CAArB;AACAkB,IAAAA,WAAW,CAAC+H,QAAZ,CAAqB,KAAKjJ,MAAL,CAAY,YAAZ,CAArB;AACA,QAAImD,MAAM,GAAGjC,WAAW,CAACwH,OAAZ,CAAoBxH,WAAW,CAACyH,OAAZ,KAAwBrK,cAAxB,GAAyC,CAA7D,IAAkE,GAA/E;AACA,WAAO,IAAIyB,IAAJ,CAASoD,MAAT,CAAP;AACH,GAzV4C;AA0V7C+F,EAAAA,oBAAoB,EAAE,YAAW;AAC7B,WAAO;AACHC,MAAAA,GAAG,EAAE,CADF;AAEHC,MAAAA,IAAI,EAAE,CAFH;AAGHC,MAAAA,GAAG,EAAE,CAHF;AAIHC,MAAAA,UAAU,EAAE;AAJT,KAAP;AAMH,GAjW4C;AAkW7CC,EAAAA,wBAAwB,EAAE,YAAW;AACjC,WAAO;AACHC,MAAAA,SAAS,EAAE,IADR;AAEHC,MAAAA,OAAO,EAAE;AAFN,KAAP;AAIH;AAvW4C,CAA3B,CAAtB;AAyWAvM,iBAAiB,CAAC,mBAAD,EAAsBe,eAAtB,CAAjB;AACAyL,MAAM,CAACC,OAAP,GAAiB1L,eAAjB","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.agenda.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../../core/renderer\");\r\nvar domAdapter = require(\"../../../core/dom_adapter\");\r\nvar noop = require(\"../../../core/utils/common\").noop;\r\nvar each = require(\"../../../core/utils/iterator\").each;\r\nvar getPublicElement = require(\"../../../core/utils/dom\").getPublicElement;\r\nvar registerComponent = require(\"../../../core/component_registrator\");\r\nvar SchedulerWorkSpace = require(\"./ui.scheduler.work_space\");\r\nvar extend = require(\"../../../core/utils/extend\").extend;\r\nvar dateLocalization = require(\"../../../localization/date\");\r\nvar tableCreator = require(\"../ui.scheduler.table_creator\");\r\nvar AGENDA_CLASS = \"dx-scheduler-agenda\";\r\nvar AGENDA_DATE_CLASS = \"dx-scheduler-agenda-date\";\r\nvar GROUP_TABLE_CLASS = \"dx-scheduler-group-table\";\r\nvar AGENDA_GROUPED_ATTR = \"dx-group-column-count\";\r\nvar TIME_PANEL_ROW_CLASS = \"dx-scheduler-time-panel-row\";\r\nvar TIME_PANEL_CELL_CLASS = \"dx-scheduler-time-panel-cell\";\r\nvar NODATA_CONTAINER_CLASS = \"dx-scheduler-agenda-nodata\";\r\nvar LAST_ROW_CLASS = \"dx-scheduler-date-table-last-row\";\r\nvar INNER_CELL_MARGIN = 5;\r\nvar OUTER_CELL_MARGIN = 20;\r\nvar SchedulerAgenda = SchedulerWorkSpace.inherit({\r\n    _activeStateUnit: void 0,\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            agendaDuration: 7,\r\n            rowHeight: 60,\r\n            noDataText: \"\"\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        var value = args.value;\r\n        switch (name) {\r\n            case \"agendaDuration\":\r\n                break;\r\n            case \"noDataText\":\r\n            case \"rowHeight\":\r\n                this._recalculateAgenda(this._rows);\r\n                break;\r\n            case \"groups\":\r\n                if (!value || !value.length) {\r\n                    if (this._$groupTable) {\r\n                        this._$groupTable.remove();\r\n                        this._$groupTable = null;\r\n                        this._detachGroupCountAttr()\r\n                    }\r\n                } else {\r\n                    if (!this._$groupTable) {\r\n                        this._initGroupTable();\r\n                        this._dateTableScrollable.$content().prepend(this._$groupTable)\r\n                    }\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _renderFocusState: noop,\r\n    _renderFocusTarget: noop,\r\n    _cleanFocusState: noop,\r\n    supportAllDayRow: function() {\r\n        return false\r\n    },\r\n    _isVerticalGroupedWorkSpace: function() {\r\n        return false\r\n    },\r\n    _getElementClass: function() {\r\n        return AGENDA_CLASS\r\n    },\r\n    _setFirstViewDate: function() {\r\n        this._firstViewDate = new Date(this.option(\"currentDate\"));\r\n        this._setStartDayHour(this._firstViewDate)\r\n    },\r\n    _getRowCount: function() {\r\n        return this.option(\"agendaDuration\")\r\n    },\r\n    _getCellCount: function() {\r\n        return 1\r\n    },\r\n    _getTimePanelRowCount: function() {\r\n        return this.option(\"agendaDuration\")\r\n    },\r\n    _getDateByIndex: noop,\r\n    _getFormat: function() {\r\n        return \"d ddd\"\r\n    },\r\n    _renderAllDayPanel: noop,\r\n    _toggleAllDayVisibility: noop,\r\n    _initWorkSpaceUnits: function() {\r\n        this._initGroupTable();\r\n        this._$timePanel = $(\"<table>\").addClass(this._getTimePanelClass());\r\n        this._$dateTable = $(\"<table>\").addClass(this._getDateTableClass())\r\n    },\r\n    _initGroupTable: function() {\r\n        var groups = this.option(\"groups\");\r\n        if (groups && groups.length) {\r\n            this._$groupTable = $(\"<table>\").addClass(GROUP_TABLE_CLASS)\r\n        }\r\n    },\r\n    _renderView: function() {\r\n        this._setFirstViewDate();\r\n        this._rows = [];\r\n        this.invoke(\"getAgendaRows\", {\r\n            agendaDuration: this.option(\"agendaDuration\"),\r\n            currentDate: new Date(this.option(\"currentDate\"))\r\n        }).done(function(rows) {\r\n            this._recalculateAgenda(rows)\r\n        }.bind(this))\r\n    },\r\n    _recalculateAgenda: function(rows) {\r\n        var cellTemplates = [];\r\n        this._cleanView();\r\n        if (this._rowsIsEmpty(rows)) {\r\n            this._renderNoData();\r\n            return\r\n        }\r\n        this._rows = rows;\r\n        if (this._$groupTable) {\r\n            cellTemplates = this._renderGroupHeader();\r\n            this._setGroupHeaderCellsHeight()\r\n        }\r\n        this._renderTimePanel();\r\n        this._renderDateTable();\r\n        this.invoke(\"agendaIsReady\", rows, INNER_CELL_MARGIN, OUTER_CELL_MARGIN);\r\n        this._applyCellTemplates(cellTemplates);\r\n        this._dateTableScrollable.update()\r\n    },\r\n    _renderNoData: function() {\r\n        this._$noDataContainer = $(\"<div>\").addClass(NODATA_CONTAINER_CLASS).html(this.option(\"noDataText\"));\r\n        this._dateTableScrollable.$content().append(this._$noDataContainer)\r\n    },\r\n    _setTableSizes: noop,\r\n    _toggleHorizontalScrollClass: noop,\r\n    _createCrossScrollingConfig: noop,\r\n    _setGroupHeaderCellsHeight: function() {\r\n        var $cells = this._getGroupHeaderCells().filter(function(_, element) {\r\n            return !element.getAttribute(\"rowSpan\")\r\n        });\r\n        var rows = this._removeEmptyRows(this._rows);\r\n        if (!rows.length) {\r\n            return\r\n        }\r\n        for (var i = 0; i < $cells.length; i++) {\r\n            var $cellContent = $cells.eq(i).find(\".dx-scheduler-group-header-content\");\r\n            $cellContent.outerHeight(this._getGroupRowHeight(rows[i]))\r\n        }\r\n    },\r\n    _rowsIsEmpty: function(rows) {\r\n        var result = true;\r\n        for (var i = 0; i < rows.length; i++) {\r\n            var groupRow = rows[i];\r\n            for (var j = 0; j < groupRow.length; j++) {\r\n                if (groupRow[j]) {\r\n                    result = false;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _detachGroupCountAttr: function() {\r\n        this.$element().removeAttr(AGENDA_GROUPED_ATTR)\r\n    },\r\n    _attachGroupCountAttr: function() {\r\n        this.$element().attr(AGENDA_GROUPED_ATTR, this.option(\"groups\").length)\r\n    },\r\n    _removeEmptyRows: function(rows) {\r\n        var result = [];\r\n        var isEmpty = function(data) {\r\n            return !data.some(function(value) {\r\n                return value > 0\r\n            })\r\n        };\r\n        for (var i = 0; i < rows.length; i++) {\r\n            if (rows[i].length && !isEmpty(rows[i])) {\r\n                result.push(rows[i])\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _getGroupHeaderContainer: function() {\r\n        return this._$groupTable\r\n    },\r\n    _makeGroupRows: function() {\r\n        var tree = this.invoke(\"createReducedResourcesTree\");\r\n        var cellTemplate = this.option(\"resourceCellTemplate\");\r\n        var getGroupHeaderContentClass = this._getGroupHeaderContentClass();\r\n        var cellTemplates = [];\r\n        var table = tableCreator.makeGroupedTableFromJSON(tableCreator.VERTICAL, tree, {\r\n            cellTag: \"th\",\r\n            groupTableClass: GROUP_TABLE_CLASS,\r\n            groupRowClass: this._getGroupRowClass(),\r\n            groupCellClass: this._getGroupHeaderClass(),\r\n            groupCellCustomContent: function(cell, cellText, index, data) {\r\n                var container = domAdapter.createElement(\"div\");\r\n                var contentWrapper = domAdapter.createElement(\"div\");\r\n                container.className = getGroupHeaderContentClass;\r\n                contentWrapper.appendChild(cellText);\r\n                container.appendChild(contentWrapper);\r\n                container.className = getGroupHeaderContentClass;\r\n                if (cellTemplate && cellTemplate.render) {\r\n                    cellTemplates.push(cellTemplate.render.bind(cellTemplate, {\r\n                        model: {\r\n                            data: data.data,\r\n                            id: data.value,\r\n                            color: data.color,\r\n                            text: cellText.textContent\r\n                        },\r\n                        container: getPublicElement($(container)),\r\n                        index: index\r\n                    }))\r\n                } else {\r\n                    contentWrapper.appendChild(cellText);\r\n                    container.appendChild(contentWrapper)\r\n                }\r\n                cell.appendChild(container)\r\n            },\r\n            cellTemplate: cellTemplate\r\n        });\r\n        return {\r\n            elements: $(table).find(\".\" + this._getGroupRowClass()),\r\n            cellTemplates: cellTemplates\r\n        }\r\n    },\r\n    _cleanView: function() {\r\n        this._$dateTable.empty();\r\n        this._$timePanel.empty();\r\n        if (this._$groupTable) {\r\n            this._$groupTable.empty()\r\n        }\r\n        if (this._$noDataContainer) {\r\n            this._$noDataContainer.empty();\r\n            this._$noDataContainer.remove();\r\n            delete this._$noDataContainer\r\n        }\r\n    },\r\n    _createWorkSpaceElements: function() {\r\n        this._createWorkSpaceStaticElements()\r\n    },\r\n    _createWorkSpaceStaticElements: function() {\r\n        if (this._$groupTable) {\r\n            this._dateTableScrollable.$content().prepend(this._$groupTable)\r\n        }\r\n        this._dateTableScrollable.$content().append(this._$timePanel, this._$dateTable);\r\n        this.$element().append(this._dateTableScrollable.$element())\r\n    },\r\n    _renderDateTable: function() {\r\n        this._renderTableBody({\r\n            container: getPublicElement(this._$dateTable),\r\n            rowClass: this._getDateTableRowClass(),\r\n            cellClass: this._getDateTableCellClass()\r\n        })\r\n    },\r\n    _attachTablesEvents: noop,\r\n    _attachEvents: noop,\r\n    _cleanCellDataCache: noop,\r\n    needRenderDateTimeIndication: function() {\r\n        return false\r\n    },\r\n    _prepareCellTemplateOptions: function(text, date, rowIndex, $cell) {\r\n        var groupsOpt = this.option(\"groups\");\r\n        var groups = {};\r\n        var path = groupsOpt.length && this._getPathToLeaf(rowIndex) || [];\r\n        path.forEach(function(resourceValue, resourceIndex) {\r\n            var resourceName = groupsOpt[resourceIndex].name;\r\n            groups[resourceName] = resourceValue\r\n        });\r\n        return {\r\n            model: {\r\n                text: text,\r\n                date: date,\r\n                groups: groups\r\n            },\r\n            container: getPublicElement($cell),\r\n            index: rowIndex\r\n        }\r\n    },\r\n    _renderTableBody: function(options) {\r\n        var cellTemplates = [];\r\n        var cellTemplateOpt = options.cellTemplate;\r\n        this._$rows = [];\r\n        var fillTableBody = function(rowIndex, rowSize) {\r\n            if (rowSize) {\r\n                var date;\r\n                var cellDateNumber;\r\n                var cellDayName;\r\n                var $row = $(\"<tr>\");\r\n                var $td = $(\"<td>\").height(this._getRowHeight(rowSize));\r\n                if (options.getStartDate) {\r\n                    date = options.getStartDate && options.getStartDate(rowIndex);\r\n                    cellDateNumber = dateLocalization.format(date, \"d\");\r\n                    cellDayName = dateLocalization.format(date, this._formatWeekday)\r\n                }\r\n                if (cellTemplateOpt && cellTemplateOpt.render) {\r\n                    var templateOptions = this._prepareCellTemplateOptions(cellDateNumber + \" \" + cellDayName, date, i, $td);\r\n                    cellTemplates.push(cellTemplateOpt.render.bind(cellTemplateOpt, templateOptions))\r\n                } else {\r\n                    if (cellDateNumber && cellDayName) {\r\n                        $td.addClass(AGENDA_DATE_CLASS).text(cellDateNumber + \" \" + cellDayName)\r\n                    }\r\n                }\r\n                if (options.rowClass) {\r\n                    $row.addClass(options.rowClass)\r\n                }\r\n                if (options.cellClass) {\r\n                    $td.addClass(options.cellClass)\r\n                }\r\n                $row.append($td);\r\n                this._$rows.push($row)\r\n            }\r\n        }.bind(this);\r\n        for (var i = 0; i < this._rows.length; i++) {\r\n            each(this._rows[i], fillTableBody);\r\n            this._setLastRowClass()\r\n        }\r\n        $(options.container).append($(\"<tbody>\").append(this._$rows));\r\n        this._applyCellTemplates(cellTemplates)\r\n    },\r\n    _setLastRowClass: function() {\r\n        if (this._rows.length > 1 && this._$rows.length) {\r\n            var $lastRow = this._$rows[this._$rows.length - 1];\r\n            $lastRow.addClass(LAST_ROW_CLASS)\r\n        }\r\n    },\r\n    _renderTimePanel: function() {\r\n        this._renderTableBody({\r\n            container: getPublicElement(this._$timePanel),\r\n            rowCount: this._getTimePanelRowCount(),\r\n            cellCount: 1,\r\n            rowClass: TIME_PANEL_ROW_CLASS,\r\n            cellClass: TIME_PANEL_CELL_CLASS,\r\n            cellTemplate: this.option(\"dateCellTemplate\"),\r\n            getStartDate: this._getTimePanelStartDate.bind(this)\r\n        })\r\n    },\r\n    _getTimePanelStartDate: function(rowIndex) {\r\n        var current = new Date(this.option(\"currentDate\"));\r\n        var cellDate = new Date(current.setDate(current.getDate() + rowIndex));\r\n        return cellDate\r\n    },\r\n    _getRowHeight: function(rowSize) {\r\n        var baseHeight = this.option(\"rowHeight\");\r\n        var innerOffset = (rowSize - 1) * INNER_CELL_MARGIN;\r\n        return rowSize ? baseHeight * rowSize + innerOffset + OUTER_CELL_MARGIN : 0\r\n    },\r\n    _getGroupRowHeight: function(groupRows) {\r\n        if (!groupRows) {\r\n            return\r\n        }\r\n        var result = 0;\r\n        for (var i = 0; i < groupRows.length; i++) {\r\n            result += this._getRowHeight(groupRows[i])\r\n        }\r\n        return result\r\n    },\r\n    getAgendaVerticalStepHeight: function() {\r\n        return this.option(\"rowHeight\")\r\n    },\r\n    getEndViewDate: function() {\r\n        var currentDate = new Date(this.option(\"currentDate\"));\r\n        var agendaDuration = this.option(\"agendaDuration\");\r\n        currentDate.setHours(this.option(\"endDayHour\"));\r\n        var result = currentDate.setDate(currentDate.getDate() + agendaDuration - 1) - 6e4;\r\n        return new Date(result)\r\n    },\r\n    getCoordinatesByDate: function() {\r\n        return {\r\n            top: 0,\r\n            left: 0,\r\n            max: 0,\r\n            groupIndex: 0\r\n        }\r\n    },\r\n    getCellDataByCoordinates: function() {\r\n        return {\r\n            startDate: null,\r\n            endDate: null\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxSchedulerAgenda\", SchedulerAgenda);\r\nmodule.exports = SchedulerAgenda;\r\n"]},"metadata":{},"sourceType":"script"}
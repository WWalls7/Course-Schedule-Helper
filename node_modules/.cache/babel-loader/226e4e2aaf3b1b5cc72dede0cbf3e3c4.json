{"ast":null,"code":"/**\r\n * DevExtreme (ui/calendar/ui.calendar.base_view.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\");\n\nvar domAdapter = require(\"../../core/dom_adapter\");\n\nvar eventsEngine = require(\"../../events/core/events_engine\");\n\nvar dataUtils = require(\"../../core/element_data\");\n\nvar domUtils = require(\"../../core/utils/dom\");\n\nvar Widget = require(\"../widget/ui.widget\");\n\nvar dateUtils = require(\"../../core/utils/date\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar noop = require(\"../../core/utils/common\").noop;\n\nvar dateSerialization = require(\"../../core/utils/date_serialization\");\n\nvar eventUtils = require(\"../../events/utils\");\n\nvar clickEvent = require(\"../../events/click\");\n\nvar abstract = Widget.abstract;\nvar CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\";\nvar CALENDAR_CELL_CLASS = \"dx-calendar-cell\";\nvar CALENDAR_EMPTY_CELL_CLASS = \"dx-calendar-empty-cell\";\nvar CALENDAR_TODAY_CLASS = \"dx-calendar-today\";\nvar CALENDAR_SELECTED_DATE_CLASS = \"dx-calendar-selected-date\";\nvar CALENDAR_CONTOURED_DATE_CLASS = \"dx-calendar-contoured-date\";\nvar CALENDAR_DXCLICK_EVENT_NAME = eventUtils.addNamespace(clickEvent.name, \"dxCalendar\");\nvar CALENDAR_DATE_VALUE_KEY = \"dxDateValueKey\";\nvar BaseView = Widget.inherit({\n  _getViewName: function () {\n    return \"base\";\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      date: new Date(),\n      focusStateEnabled: false,\n      cellTemplate: null,\n      disabledDates: null,\n      onCellClick: null,\n      rowCount: 3,\n      colCount: 4,\n      allowValueSelection: true\n    });\n  },\n  _init: function () {\n    this.callBase();\n    var value = this.option(\"value\");\n    this.option(\"value\", new Date(value));\n\n    if (!this.option(\"value\").valueOf()) {\n      this.option(\"value\", new Date(0, 0, 0, 0, 0, 0));\n    }\n  },\n  _initMarkup: function () {\n    this.callBase();\n\n    this._renderImpl();\n  },\n  _renderImpl: function () {\n    this._$table = $(\"<table>\");\n    this.$element().append(this._$table);\n\n    this._createDisabledDatesHandler();\n\n    this._renderBody();\n\n    this._renderContouredDate();\n\n    this._renderValue();\n\n    this._renderEvents();\n  },\n  _renderBody: function () {\n    this.$body = $(\"<tbody>\").appendTo(this._$table);\n    var that = this;\n    var cellTemplate = this.option(\"cellTemplate\");\n    var appendChild = this.option(\"rtl\") ? function (row, cell) {\n      row.insertBefore(cell, row.firstChild);\n    } : function (row, cell) {\n      row.appendChild(cell);\n    };\n\n    function renderCell(cellIndex) {\n      if (prevCellDate) {\n        dateUtils.fixTimezoneGap(prevCellDate, cellDate);\n      }\n\n      prevCellDate = cellDate;\n      var cell = domAdapter.createElement(\"td\");\n      var $cell = $(cell);\n      var className = CALENDAR_CELL_CLASS;\n\n      if (that._isTodayCell(cellDate)) {\n        className = className + \" \" + CALENDAR_TODAY_CLASS;\n      }\n\n      if (that._isDateOutOfRange(cellDate) || that.isDateDisabled(cellDate)) {\n        className = className + \" \" + CALENDAR_EMPTY_CELL_CLASS;\n      }\n\n      if (that._isOtherView(cellDate)) {\n        className = className + \" \" + CALENDAR_OTHER_VIEW_CLASS;\n      }\n\n      cell.className = className;\n      cell.setAttribute(\"data-value\", dateSerialization.serializeDate(cellDate, dateUtils.getShortDateFormat()));\n      dataUtils.data(cell, CALENDAR_DATE_VALUE_KEY, cellDate);\n      that.setAria({\n        role: \"option\",\n        label: that.getCellAriaLabel(cellDate)\n      }, $cell);\n      appendChild(row, cell);\n\n      if (cellTemplate) {\n        cellTemplate.render({\n          model: {\n            text: that._getCellText(cellDate),\n            date: cellDate,\n            view: that._getViewName()\n          },\n          container: domUtils.getPublicElement($cell),\n          index: cellIndex\n        });\n      } else {\n        cell.innerHTML = that._getCellText(cellDate);\n      }\n\n      cellDate = that._getNextCellData(cellDate);\n    }\n\n    var cellDate = this._getFirstCellData();\n\n    var colCount = this.option(\"colCount\");\n    var prevCellDate;\n\n    for (var indexRow = 0, len = this.option(\"rowCount\"); indexRow < len; indexRow++) {\n      var row = domAdapter.createElement(\"tr\");\n      this.$body.get(0).appendChild(row);\n\n      this._iterateCells(colCount, renderCell);\n    }\n  },\n  _iterateCells: function (colCount, delegate) {\n    var i = 0;\n\n    while (i < colCount) {\n      delegate(i);\n      ++i;\n    }\n  },\n  _renderEvents: function () {\n    this._createCellClickAction();\n\n    eventsEngine.off(this._$table, CALENDAR_DXCLICK_EVENT_NAME);\n    eventsEngine.on(this._$table, CALENDAR_DXCLICK_EVENT_NAME, \"td\", function (e) {\n      if (!$(e.currentTarget).hasClass(CALENDAR_EMPTY_CELL_CLASS)) {\n        this._cellClickAction({\n          event: e,\n          value: $(e.currentTarget).data(CALENDAR_DATE_VALUE_KEY)\n        });\n      }\n    }.bind(this));\n  },\n  _createCellClickAction: function () {\n    this._cellClickAction = this._createActionByOption(\"onCellClick\");\n  },\n  _createDisabledDatesHandler: function () {\n    var disabledDates = this.option(\"disabledDates\");\n    this._disabledDatesHandler = Array.isArray(disabledDates) ? this._getDefaultDisabledDatesHandler(disabledDates) : disabledDates || noop;\n  },\n  _getDefaultDisabledDatesHandler: function (disabledDates) {\n    return noop;\n  },\n  _isTodayCell: abstract,\n  _isDateOutOfRange: abstract,\n  isDateDisabled: function (cellDate) {\n    var dateParts = {\n      date: cellDate,\n      view: this._getViewName()\n    };\n    return this._disabledDatesHandler(dateParts);\n  },\n  _isOtherView: abstract,\n  _getCellText: abstract,\n  _getFirstCellData: abstract,\n  _getNextCellData: abstract,\n  _renderContouredDate: function (contouredDate) {\n    if (!this.option(\"focusStateEnabled\")) {\n      return;\n    }\n\n    contouredDate = contouredDate || this.option(\"contouredDate\");\n\n    var $oldContouredCell = this._$table.find(\".\" + CALENDAR_CONTOURED_DATE_CLASS);\n\n    var $newContouredCell = this._getCellByDate(contouredDate);\n\n    $oldContouredCell.removeClass(CALENDAR_CONTOURED_DATE_CLASS);\n    $newContouredCell.addClass(CALENDAR_CONTOURED_DATE_CLASS);\n  },\n  _dispose: function () {\n    this._keyboardProcessor = void 0;\n    this.callBase();\n  },\n  _changeValue: function (cellDate) {\n    if (cellDate) {\n      var value = this.option(\"value\");\n      var newValue = value ? new Date(value) : new Date();\n      newValue.setDate(cellDate.getDate());\n      newValue.setMonth(cellDate.getMonth());\n      newValue.setFullYear(cellDate.getFullYear());\n      newValue.setDate(cellDate.getDate());\n      this.option(\"value\", newValue);\n    } else {\n      this.option(\"value\", null);\n    }\n  },\n  _renderValue: function () {\n    if (!this.option(\"allowValueSelection\")) {\n      return;\n    }\n\n    var value = this.option(\"value\");\n\n    var selectedCell = this._getCellByDate(value);\n\n    if (this._selectedCell) {\n      this._selectedCell.removeClass(CALENDAR_SELECTED_DATE_CLASS);\n    }\n\n    selectedCell.addClass(CALENDAR_SELECTED_DATE_CLASS);\n    this._selectedCell = selectedCell;\n  },\n  getCellAriaLabel: function (date) {\n    return this._getCellText(date);\n  },\n  _getFirstAvailableDate: function () {\n    var date = this.option(\"date\");\n    var min = this.option(\"min\");\n    date = dateUtils.getFirstDateView(this._getViewName(), date);\n    return new Date(min && date < min ? min : date);\n  },\n  _getCellByDate: abstract,\n  isBoundary: abstract,\n  _optionChanged: function (args) {\n    var name = args.name;\n\n    switch (name) {\n      case \"value\":\n        this._renderValue();\n\n        break;\n\n      case \"contouredDate\":\n        this._renderContouredDate(args.value);\n\n        break;\n\n      case \"onCellClick\":\n        this._createCellClickAction();\n\n        break;\n\n      case \"disabledDates\":\n      case \"cellTemplate\":\n        this._invalidate();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\nmodule.exports = BaseView;","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/node_modules/devextreme/ui/calendar/ui.calendar.base_view.js"],"names":["$","require","domAdapter","eventsEngine","dataUtils","domUtils","Widget","dateUtils","extend","noop","dateSerialization","eventUtils","clickEvent","abstract","CALENDAR_OTHER_VIEW_CLASS","CALENDAR_CELL_CLASS","CALENDAR_EMPTY_CELL_CLASS","CALENDAR_TODAY_CLASS","CALENDAR_SELECTED_DATE_CLASS","CALENDAR_CONTOURED_DATE_CLASS","CALENDAR_DXCLICK_EVENT_NAME","addNamespace","name","CALENDAR_DATE_VALUE_KEY","BaseView","inherit","_getViewName","_getDefaultOptions","callBase","date","Date","focusStateEnabled","cellTemplate","disabledDates","onCellClick","rowCount","colCount","allowValueSelection","_init","value","option","valueOf","_initMarkup","_renderImpl","_$table","$element","append","_createDisabledDatesHandler","_renderBody","_renderContouredDate","_renderValue","_renderEvents","$body","appendTo","that","appendChild","row","cell","insertBefore","firstChild","renderCell","cellIndex","prevCellDate","fixTimezoneGap","cellDate","createElement","$cell","className","_isTodayCell","_isDateOutOfRange","isDateDisabled","_isOtherView","setAttribute","serializeDate","getShortDateFormat","data","setAria","role","label","getCellAriaLabel","render","model","text","_getCellText","view","container","getPublicElement","index","innerHTML","_getNextCellData","_getFirstCellData","indexRow","len","get","_iterateCells","delegate","i","_createCellClickAction","off","on","e","currentTarget","hasClass","_cellClickAction","event","bind","_createActionByOption","_disabledDatesHandler","Array","isArray","_getDefaultDisabledDatesHandler","dateParts","contouredDate","$oldContouredCell","find","$newContouredCell","_getCellByDate","removeClass","addClass","_dispose","_keyboardProcessor","_changeValue","newValue","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","selectedCell","_selectedCell","_getFirstAvailableDate","min","getFirstDateView","isBoundary","_optionChanged","args","_invalidate","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/calendar/ui.calendar.base_view.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\");\r\nvar domAdapter = require(\"../../core/dom_adapter\");\r\nvar eventsEngine = require(\"../../events/core/events_engine\");\r\nvar dataUtils = require(\"../../core/element_data\");\r\nvar domUtils = require(\"../../core/utils/dom\");\r\nvar Widget = require(\"../widget/ui.widget\");\r\nvar dateUtils = require(\"../../core/utils/date\");\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar noop = require(\"../../core/utils/common\").noop;\r\nvar dateSerialization = require(\"../../core/utils/date_serialization\");\r\nvar eventUtils = require(\"../../events/utils\");\r\nvar clickEvent = require(\"../../events/click\");\r\nvar abstract = Widget.abstract;\r\nvar CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\";\r\nvar CALENDAR_CELL_CLASS = \"dx-calendar-cell\";\r\nvar CALENDAR_EMPTY_CELL_CLASS = \"dx-calendar-empty-cell\";\r\nvar CALENDAR_TODAY_CLASS = \"dx-calendar-today\";\r\nvar CALENDAR_SELECTED_DATE_CLASS = \"dx-calendar-selected-date\";\r\nvar CALENDAR_CONTOURED_DATE_CLASS = \"dx-calendar-contoured-date\";\r\nvar CALENDAR_DXCLICK_EVENT_NAME = eventUtils.addNamespace(clickEvent.name, \"dxCalendar\");\r\nvar CALENDAR_DATE_VALUE_KEY = \"dxDateValueKey\";\r\nvar BaseView = Widget.inherit({\r\n    _getViewName: function() {\r\n        return \"base\"\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            date: new Date,\r\n            focusStateEnabled: false,\r\n            cellTemplate: null,\r\n            disabledDates: null,\r\n            onCellClick: null,\r\n            rowCount: 3,\r\n            colCount: 4,\r\n            allowValueSelection: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        var value = this.option(\"value\");\r\n        this.option(\"value\", new Date(value));\r\n        if (!this.option(\"value\").valueOf()) {\r\n            this.option(\"value\", new Date(0, 0, 0, 0, 0, 0))\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderImpl()\r\n    },\r\n    _renderImpl: function() {\r\n        this._$table = $(\"<table>\");\r\n        this.$element().append(this._$table);\r\n        this._createDisabledDatesHandler();\r\n        this._renderBody();\r\n        this._renderContouredDate();\r\n        this._renderValue();\r\n        this._renderEvents()\r\n    },\r\n    _renderBody: function() {\r\n        this.$body = $(\"<tbody>\").appendTo(this._$table);\r\n        var that = this;\r\n        var cellTemplate = this.option(\"cellTemplate\");\r\n        var appendChild = this.option(\"rtl\") ? function(row, cell) {\r\n            row.insertBefore(cell, row.firstChild)\r\n        } : function(row, cell) {\r\n            row.appendChild(cell)\r\n        };\r\n\r\n        function renderCell(cellIndex) {\r\n            if (prevCellDate) {\r\n                dateUtils.fixTimezoneGap(prevCellDate, cellDate)\r\n            }\r\n            prevCellDate = cellDate;\r\n            var cell = domAdapter.createElement(\"td\");\r\n            var $cell = $(cell);\r\n            var className = CALENDAR_CELL_CLASS;\r\n            if (that._isTodayCell(cellDate)) {\r\n                className = className + \" \" + CALENDAR_TODAY_CLASS\r\n            }\r\n            if (that._isDateOutOfRange(cellDate) || that.isDateDisabled(cellDate)) {\r\n                className = className + \" \" + CALENDAR_EMPTY_CELL_CLASS\r\n            }\r\n            if (that._isOtherView(cellDate)) {\r\n                className = className + \" \" + CALENDAR_OTHER_VIEW_CLASS\r\n            }\r\n            cell.className = className;\r\n            cell.setAttribute(\"data-value\", dateSerialization.serializeDate(cellDate, dateUtils.getShortDateFormat()));\r\n            dataUtils.data(cell, CALENDAR_DATE_VALUE_KEY, cellDate);\r\n            that.setAria({\r\n                role: \"option\",\r\n                label: that.getCellAriaLabel(cellDate)\r\n            }, $cell);\r\n            appendChild(row, cell);\r\n            if (cellTemplate) {\r\n                cellTemplate.render({\r\n                    model: {\r\n                        text: that._getCellText(cellDate),\r\n                        date: cellDate,\r\n                        view: that._getViewName()\r\n                    },\r\n                    container: domUtils.getPublicElement($cell),\r\n                    index: cellIndex\r\n                })\r\n            } else {\r\n                cell.innerHTML = that._getCellText(cellDate)\r\n            }\r\n            cellDate = that._getNextCellData(cellDate)\r\n        }\r\n        var cellDate = this._getFirstCellData();\r\n        var colCount = this.option(\"colCount\");\r\n        var prevCellDate;\r\n        for (var indexRow = 0, len = this.option(\"rowCount\"); indexRow < len; indexRow++) {\r\n            var row = domAdapter.createElement(\"tr\");\r\n            this.$body.get(0).appendChild(row);\r\n            this._iterateCells(colCount, renderCell)\r\n        }\r\n    },\r\n    _iterateCells: function(colCount, delegate) {\r\n        var i = 0;\r\n        while (i < colCount) {\r\n            delegate(i);\r\n            ++i\r\n        }\r\n    },\r\n    _renderEvents: function() {\r\n        this._createCellClickAction();\r\n        eventsEngine.off(this._$table, CALENDAR_DXCLICK_EVENT_NAME);\r\n        eventsEngine.on(this._$table, CALENDAR_DXCLICK_EVENT_NAME, \"td\", function(e) {\r\n            if (!$(e.currentTarget).hasClass(CALENDAR_EMPTY_CELL_CLASS)) {\r\n                this._cellClickAction({\r\n                    event: e,\r\n                    value: $(e.currentTarget).data(CALENDAR_DATE_VALUE_KEY)\r\n                })\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _createCellClickAction: function() {\r\n        this._cellClickAction = this._createActionByOption(\"onCellClick\")\r\n    },\r\n    _createDisabledDatesHandler: function() {\r\n        var disabledDates = this.option(\"disabledDates\");\r\n        this._disabledDatesHandler = Array.isArray(disabledDates) ? this._getDefaultDisabledDatesHandler(disabledDates) : disabledDates || noop\r\n    },\r\n    _getDefaultDisabledDatesHandler: function(disabledDates) {\r\n        return noop\r\n    },\r\n    _isTodayCell: abstract,\r\n    _isDateOutOfRange: abstract,\r\n    isDateDisabled: function(cellDate) {\r\n        var dateParts = {\r\n            date: cellDate,\r\n            view: this._getViewName()\r\n        };\r\n        return this._disabledDatesHandler(dateParts)\r\n    },\r\n    _isOtherView: abstract,\r\n    _getCellText: abstract,\r\n    _getFirstCellData: abstract,\r\n    _getNextCellData: abstract,\r\n    _renderContouredDate: function(contouredDate) {\r\n        if (!this.option(\"focusStateEnabled\")) {\r\n            return\r\n        }\r\n        contouredDate = contouredDate || this.option(\"contouredDate\");\r\n        var $oldContouredCell = this._$table.find(\".\" + CALENDAR_CONTOURED_DATE_CLASS);\r\n        var $newContouredCell = this._getCellByDate(contouredDate);\r\n        $oldContouredCell.removeClass(CALENDAR_CONTOURED_DATE_CLASS);\r\n        $newContouredCell.addClass(CALENDAR_CONTOURED_DATE_CLASS)\r\n    },\r\n    _dispose: function() {\r\n        this._keyboardProcessor = void 0;\r\n        this.callBase()\r\n    },\r\n    _changeValue: function(cellDate) {\r\n        if (cellDate) {\r\n            var value = this.option(\"value\");\r\n            var newValue = value ? new Date(value) : new Date;\r\n            newValue.setDate(cellDate.getDate());\r\n            newValue.setMonth(cellDate.getMonth());\r\n            newValue.setFullYear(cellDate.getFullYear());\r\n            newValue.setDate(cellDate.getDate());\r\n            this.option(\"value\", newValue)\r\n        } else {\r\n            this.option(\"value\", null)\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (!this.option(\"allowValueSelection\")) {\r\n            return\r\n        }\r\n        var value = this.option(\"value\");\r\n        var selectedCell = this._getCellByDate(value);\r\n        if (this._selectedCell) {\r\n            this._selectedCell.removeClass(CALENDAR_SELECTED_DATE_CLASS)\r\n        }\r\n        selectedCell.addClass(CALENDAR_SELECTED_DATE_CLASS);\r\n        this._selectedCell = selectedCell\r\n    },\r\n    getCellAriaLabel: function(date) {\r\n        return this._getCellText(date)\r\n    },\r\n    _getFirstAvailableDate: function() {\r\n        var date = this.option(\"date\");\r\n        var min = this.option(\"min\");\r\n        date = dateUtils.getFirstDateView(this._getViewName(), date);\r\n        return new Date(min && date < min ? min : date)\r\n    },\r\n    _getCellByDate: abstract,\r\n    isBoundary: abstract,\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"value\":\r\n                this._renderValue();\r\n                break;\r\n            case \"contouredDate\":\r\n                this._renderContouredDate(args.value);\r\n                break;\r\n            case \"onCellClick\":\r\n                this._createCellClickAction();\r\n                break;\r\n            case \"disabledDates\":\r\n            case \"cellTemplate\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = BaseView;\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Swizzle\\\\Desktop\\\\SE Project\\\\Application\\\\csh\\\\src\\\\components\\\\Cal.js\";\nimport React, { Component } from \"react\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { Calendar, DateLocalizer, momentLocalizer, globalizeLocalizer, move, Views, Navigate, components } from 'react-big-calendar';\nimport moment from 'moment';\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button } from 'react-bootstrap';\nmoment.locale('en-GB');\nconst localizer = momentLocalizer(moment);\n\nconst Cal = props => {\n  // CourseInfo = (selectedCourse) => {\n  //   console.log(selectedCourse)\n  //   return (\n  //     <Redirect to={{\n  //       pathname: '/courseinfo',\n  //       course: { selectedCourse }\n  //       }}\n  //     />\n  //   )\n  // }\n  function courseFormat() {\n    var courses = props.courses;\n    var formattedCourses = [];\n    var i = 0;\n    courses && courses.forEach(course => {\n      formattedCourses[i] = {\n        'title': course.title,\n        'start': new Date(course.startDate + \" \" + course.startTime),\n        'end': new Date(course.endDate + \" \" + course.endTime),\n        'desc': course.description,\n        'freq': course.frequency,\n        'author': course.authorFirstName + \" \" + course.authorLastName\n      };\n      i++;\n    });\n    return formattedCourses;\n  } //useState(variant ? true : false);\n\n\n  const [modalShow, setModalShow] = React.useState(false);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => setModalShow(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Launch vertically centered modal\"), React.createElement(Calendar, {\n    localizer: localizer,\n    events: courseFormat(props),\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    style: {\n      height: 500\n    },\n    step: 30,\n    defaultView: \"month\",\n    views: ['month', 'week', 'day'],\n    defaultDate: new Date(),\n    onSelectEvent: () => setModalShow(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(MyVerticallyCenteredModal, {\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n\n  function MyVerticallyCenteredModal(props) {\n    return React.createElement(Modal, Object.assign({}, props, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Modal heading\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Centered Modal\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\")), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n}; // const handleSelectEvent = (event, e) => {\n//   //setShowEditModal(true);\n//   // let { id, title, start, end, allDay } = event;\n//   // const data = { id, title, start, end, allDay };\n//   // setCalendarEvent(data);\n// };\n// // const CourseInfo = (event) => {\n// //   return (\n// //     <div className=\"container section\">\n// //         <div className=\"card z-depth-0\">\n// //             <div className=\"card-content\">\n// //                 <span className=\"card-title\">hi</span>\n// //                 <p>hi</p>\n// //             </div>\n// //             <div className=\"card-action grey lighten-4 grey-text\">\n// //                 <div>hi</div>\n// //                 <div>hi</div>\n// //             </div>\n// //         </div>\n// //     </div>\n// //   )\n// // }\n\n\nexport default Cal;","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/src/components/Cal.js"],"names":["React","Component","Calendar","DateLocalizer","momentLocalizer","globalizeLocalizer","move","Views","Navigate","components","moment","Modal","Button","locale","localizer","Cal","props","courseFormat","courses","formattedCourses","i","forEach","course","title","Date","startDate","startTime","endDate","endTime","description","frequency","authorFirstName","authorLastName","modalShow","setModalShow","useState","height","MyVerticallyCenteredModal"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport {Calendar,DateLocalizer,momentLocalizer,globalizeLocalizer,move,Views,Navigate,components,} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport{ Button }from 'react-bootstrap'\r\n\r\nmoment.locale('en-GB');\r\nconst localizer = momentLocalizer(moment)\r\n\r\nconst Cal =(props)=>{\r\n\r\n  // CourseInfo = (selectedCourse) => {\r\n  //   console.log(selectedCourse)\r\n  //   return (\r\n  //     <Redirect to={{\r\n  //       pathname: '/courseinfo',\r\n  //       course: { selectedCourse }\r\n  //       }}\r\n  //     />\r\n  //   )\r\n  // }\r\n\r\n\r\n  function courseFormat () {\r\n    var courses = props.courses\r\n    var formattedCourses = []\r\n    var i = 0\r\n    courses && courses.forEach(course => {\r\n      formattedCourses[i] = {\r\n        'title' : course.title,\r\n        'start' : new Date(course.startDate + \" \" + course.startTime),\r\n        'end' : new Date(course.endDate + \" \" + course.endTime),\r\n        'desc' : course.description,\r\n        'freq' : course.frequency,\r\n        'author' : course.authorFirstName + \" \" + course.authorLastName\r\n      }\r\n      i++\r\n    });\r\n    return formattedCourses\r\n  }\r\n\r\n \r\n  //useState(variant ? true : false);\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    return(\r\n      <React.Fragment>\r\n        <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n        Launch vertically centered modal\r\n      </Button>\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={courseFormat(props)}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 500 }}\r\n        step={30}\r\n        defaultView='month'\r\n        views={['month','week','day']}\r\n        defaultDate={new Date()}\r\n        onSelectEvent={()=>setModalShow(true)}\r\n      />\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </React.Fragment>\r\n      \r\n    )\r\n\r\n    function MyVerticallyCenteredModal (props) {\r\n      return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Modal heading\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <h4>Centered Modal</h4>\r\n            <p>\r\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n              dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n              consectetur ac, vestibulum at eros.\r\n            </p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n// const handleSelectEvent = (event, e) => {\r\n//   //setShowEditModal(true);\r\n//   // let { id, title, start, end, allDay } = event;\r\n//   // const data = { id, title, start, end, allDay };\r\n//   // setCalendarEvent(data);\r\n// };\r\n// // const CourseInfo = (event) => {\r\n// //   return (\r\n// //     <div className=\"container section\">\r\n// //         <div className=\"card z-depth-0\">\r\n// //             <div className=\"card-content\">\r\n// //                 <span className=\"card-title\">hi</span>\r\n// //                 <p>hi</p>\r\n// //             </div>\r\n// //             <div className=\"card-action grey lighten-4 grey-text\">\r\n// //                 <div>hi</div>\r\n// //                 <div>hi</div>\r\n// //             </div>\r\n// //         </div>\r\n// //     </div>\r\n// //   )\r\n// // }\r\n\r\n\r\nexport default Cal\r\n"]},"metadata":{},"sourceType":"module"}
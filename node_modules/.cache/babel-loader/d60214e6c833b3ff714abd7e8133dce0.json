{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Swizzle\\\\Desktop\\\\SE Project\\\\Application\\\\csh\\\\src\\\\components\\\\SignIn.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../store/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.signIn(this.state);\n    };\n\n    this.checkUser = (id, users) => {};\n  }\n\n  render() {\n    const {\n      authError,\n      auth,\n      users\n    } = this.props;\n    console.log(auth, users); // if (auth.uid && this.checkUser(auth.uid) === \"scheduler\") return <Redirect to='/' />\n    // if (auth.uid && this.checkUser(auth.uid, users) === \"trainer\") return <Redirect to='/trainer' />\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"grey-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn blue lighten-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, authError ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, authError) : null))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n    users: state.firestore.ordered.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/Swizzle/Desktop/SE Project/Application/csh/src/components/SignIn.js"],"names":["React","Component","connect","signIn","Redirect","SignIn","state","email","password","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","props","checkUser","users","render","authError","auth","console","log","mapStateToProps","firebase","firestore","ordered","mapDispatchToProps","dispatch","creds"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../store/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.id]: e.target.value  \r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    checkUser = (id, users) => {\r\n\r\n    }\r\n    render() {\r\n        const {authError, auth, users} = this.props;\r\n        console.log(auth, users)\r\n        // if (auth.uid && this.checkUser(auth.uid) === \"scheduler\") return <Redirect to='/' />\r\n        // if (auth.uid && this.checkUser(auth.uid, users) === \"trainer\") return <Redirect to='/trainer' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-1\">Login</button>\r\n                        <div className=\"center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth,\r\n        users: state.firestore.ordered.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n"]},"metadata":{},"sourceType":"module"}